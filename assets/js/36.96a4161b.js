(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{350:function(t,s,a){"use strict";a.r(s);var e=a(7),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_23-http应用与新特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-http应用与新特性"}},[t._v("#")]),t._v(" 23.HTTP应用与新特性")]),t._v(" "),s("p",[t._v("本部分介绍 HTTP 的各种应用, 以及新版本 HTTP 协议的变化.")]),t._v(" "),s("h4",{attrs:{id:"单台虚拟主机实现多个域名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单台虚拟主机实现多个域名"}},[t._v("#")]),t._v(" 单台虚拟主机实现多个域名")]),t._v(" "),s("p",[t._v("HTTP/1.1 规范允许一台 HTTP 服务器搭建多个 web 站点. 即使物理层面只有一台服务器, 但只要使用"),s("strong",[t._v("虚拟主机")]),t._v("的功能, 则可以假想已具有"),s("strong",[t._v("多台服务器")]),t._v(". 域名通过 DNS 服务映射到 IP 地址(域名解析) 之后访问目标网站. 当请求发送到服务器时, 已经是以 IP 地址形式访问了.")]),t._v(" "),s("p",[t._v("所以如果一台服务器内托管了 "),s("a",{attrs:{href:"http://www.tricorder.jp",target:"_blank",rel:"noopener noreferrer"}},[t._v("www.tricorder.jp"),s("OutboundLink")],1),t._v(" 和 "),s("a",{attrs:{href:"http://www.hackr.jp",target:"_blank",rel:"noopener noreferrer"}},[t._v("www.hackr.jp"),s("OutboundLink")],1),t._v(" 这两个域名, 当收到请求时就需要弄清楚究竟要访问哪个域名. "),s("strong",[t._v("一个 IP 地址可能对应多个域名")]),t._v(". 在相同的 IP 地址下, 由于虚拟主机可以寄存多个不同主机名和域名的 web 网站, 因此在发送 HTTP 请求时, 必须在 "),s("strong",[t._v("Host 首部")]),t._v("内完整指定"),s("strong",[t._v("主机名或域名")]),t._v("的 "),s("strong",[t._v("URI")]),t._v(".")]),t._v(" "),s("h4",{attrs:{id:"代理-网关-隧道🌟"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代理-网关-隧道🌟"}},[t._v("#")]),t._v(" 代理,网关,隧道🌟")]),t._v(" "),s("p",[t._v("这些应用程序和服务器可以将请求转发给通信线路上的"),s("strong",[t._v("下一站")]),t._v("服务器, 并且接收从那台服务器发送的响应再转发给客户端.")]),t._v(" "),s("h5",{attrs:{id:"_1-代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-代理"}},[t._v("#")]),t._v(" 1.代理")]),t._v(" "),s("p",[s("strong",[t._v("代理服务器")]),t._v("的基本行为就是接收客户端发送的请求后"),s("strong",[t._v("转发")]),t._v("给其他服务器. 代理"),s("strong",[t._v("不改变")]),t._v("请求 URI, 会直接发送给前方持有资源的目标服务器. 持有资源实体的服务器被称为"),s("strong",[t._v("源服务器")]),t._v(". 从源服务器返回的响应经过代理服务器后再传给客户端.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20191229155243444-6040084.png",alt:"image-20191229155243444"}})]),t._v(" "),s("p",[t._v("每次经过代理服务器转发请求或响应时, 会"),s("strong",[t._v("追加写入 Via 首部")]),t._v("信息. 代理一般按两种基准分类: (1) 是否"),s("strong",[t._v("使用缓存")]),t._v("; (2) 是否会"),s("strong",[t._v("修改报文")]),t._v(".")]),t._v(" "),s("p",[s("strong",[t._v("透明代理")]),t._v(": 不对报文做任何修改.")]),t._v(" "),s("p",[s("strong",[t._v("缓存代理")]),t._v(": 会预先将资源的副本缓存保存在代理服务器上, 会定期检查资源的有效性. 当代理再次接收到对相同资源的请求时, 就可以不从源服务器那里获取资源, 而是将之前缓存的资源作为响应返回.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20191229155538500-6040081.png",alt:"image-20191229155538500"}})]),t._v(" "),s("p",[t._v("使用"),s("strong",[t._v("代理服务器")]),t._v("的理由有: 利用缓存技术"),s("strong",[t._v("减少网络带宽")]),t._v("的流量, 组织内部针对"),s("strong",[t._v("特定网站的访问控制")]),t._v(", 获取"),s("strong",[t._v("访问日志")]),t._v("等等. 即:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("缓存")])]),t._v(" "),s("li",[s("strong",[t._v("负载均衡")])]),t._v(" "),s("li",[s("strong",[t._v("网络访问控制")])]),t._v(" "),s("li",[s("strong",[t._v("访问日志记录")])])]),t._v(" "),s("p",[t._v("代理服务器分为"),s("strong",[t._v("正向代理和反向代理")]),t._v("两种:")]),t._v(" "),s("ul",[s("li",[t._v("正向代理: 用户察觉得到正向代理的"),s("strong",[t._v("存在")]),t._v(".")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1563596330167-6040081.png",alt:"",title:"正向代理"}})]),t._v(" "),s("ul",[s("li",[t._v("反向代理: 一般位于"),s("strong",[t._v("内部网络")]),t._v("中, 用户察觉不到.")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1563596340136-6040083.png",alt:"",title:"反向代理"}})]),t._v(" "),s("h5",{attrs:{id:"_2-网关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-网关"}},[t._v("#")]),t._v(" 2.网关")]),t._v(" "),s("p",[t._v("网关的工作机制和代理十分相似. 网关能使通信线路上的服务器提供"),s("strong",[t._v("非 HTTP 协议")]),t._v("服务. 利用网关能提供通信的安全性, 因为可以在客户端与网关之间的通信线路上"),s("strong",[t._v("加密")]),t._v("以确保连接的安全. 网关可以将"),s("strong",[t._v("其他协议的通信通过网关转换为 HTTP 协议")]),t._v("的请求.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20191229155707212-6040083.png",alt:"image-20191229155707212"}})]),t._v(" "),s("h5",{attrs:{id:"_3-隧道"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-隧道"}},[t._v("#")]),t._v(" 3.隧道")]),t._v(" "),s("p",[s("strong",[t._v("隧道")]),t._v("可按要求建立起一条与其他服务器的通信线路, 进而使用 "),s("strong",[t._v("SSL")]),t._v(" 等加密手段进行通信. 隧道的目的是确保客户端能与服务器进行安全通信. 隧道本身"),s("strong",[t._v("不会去解析")]),t._v(" HTTP 请求. 也就是说, 请求保持"),s("strong",[t._v("原样中转")]),t._v("给之后的服务器.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20191229155737735-6040082.png",alt:"image-20191229155737735"}})]),t._v(" "),s("h4",{attrs:{id:"http连接管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http连接管理"}},[t._v("#")]),t._v(" HTTP连接管理")]),t._v(" "),s("h5",{attrs:{id:"_1-短连接与长连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-短连接与长连接"}},[t._v("#")]),t._v(" 1.短连接与长连接")]),t._v(" "),s("p",[s("strong",[t._v("短连接")]),t._v(": 客户端和服务器每进行一次 HTTP 操作, 就"),s("strong",[t._v("建立一次连接")]),t._v(", 任务结束就中断连接. 在 "),s("strong",[t._v("HTTP/1.0")]),t._v(" 中默认使用"),s("strong",[t._v("短连接")]),t._v(". 当客户端访问的某个 HTML 或其他类型的 Web 页中包含有其他的 Web 资源, 如 JS 文件, 图像文件, CSS 文件等, 浏览器会为每个资源重新建立一个 HTTP 会话. 每进行一次 HTTP 通信就要新建一个 TCP 连接的话, 开销会很大.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20191229153710786-6040082.png",alt:"image-20191229153710786"}})]),t._v(" "),s("p",[s("strong",[t._v("长连接")]),t._v(": 当一个网页打开完成后, 客户端和服务器之间用于传输 HTTP 数据的 TCP 连接不会关闭, 客户端再次访问这个服务器时, 会继续使用这一条已经建立的连接. 从 "),s("strong",[t._v("HTTP/1.1")]),t._v(" 起, "),s("strong",[t._v("默认使用长连接")]),t._v(", 用以保持连接特性. 长连接需要客户端和服务端都支持长连接.")]),t._v(" "),s("p",[t._v("使用长连接的 HTTP 协议, 需要加入 "),s("strong",[t._v("Connection")]),t._v(" 请求头:")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Connection")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("keep-alive")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("Keep-Alive 不会永久保持连接, 它有一个"),s("strong",[t._v("保持时间")]),t._v(", 可以在不同的服务器软件(如 Apache) 中设定这个时间.")]),t._v(" "),s("p",[s("strong",[t._v("长连接")]),t._v("只需要建立一次 TCP 连接就能进行"),s("strong",[t._v("多次 HTTP 通信")]),t._v(".")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20191229153753544-6040083.png",alt:"image-20191229153753544"}})]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("HTTP/1.0 默认是短连接")]),t._v("的, 如果需要使用"),s("strong",[t._v("长连接")]),t._v(", 则使用 "),s("strong",[t._v("Connection : Keep-Alive")]),t._v(".")]),t._v(" "),s("li",[s("strong",[t._v("HTTP/1.1")]),t._v(" "),s("strong",[t._v("默认是长连接")]),t._v("的, 如果要断开连接, 需要由客户端或者服务器端提出断开, 使用 "),s("strong",[t._v("Connection : close")]),t._v(";")])]),t._v(" "),s("p",[t._v("HTTP 协议的长连接和短连接, 实质上是 "),s("strong",[t._v("TCP 协议的长连接和短连接")]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"_2-流水线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-流水线"}},[t._v("#")]),t._v(" 2.流水线")]),t._v(" "),s("p",[t._v("默认情况下, HTTP 请求是按"),s("strong",[t._v("顺序")]),t._v("发出的, 下一个请求只有在当前请求"),s("strong",[t._v("收到响应之后")]),t._v("才会被发出. 由于受到网络延迟和带宽的限制, 在下一个请求被发送到服务器之前, 可能需要等待很长时间. "),s("strong",[t._v("流水线")]),t._v("是在同一条长连接上连续发出请求, 而不用等待响应返回, 这样可以减少延迟.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20191229153820798-6040083.png",alt:"image-20191229153820798"}})]),t._v(" "),s("h4",{attrs:{id:"cookie🌟"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie🌟"}},[t._v("#")]),t._v(" Cookie🌟")]),t._v(" "),s("h5",{attrs:{id:"_1-http的无状态性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-http的无状态性"}},[t._v("#")]),t._v(" 1.HTTP的无状态性")]),t._v(" "),s("p",[t._v("HTTP 协议是"),s("strong",[t._v("无状态")]),t._v("的(stateless), 指的是协议对于"),s("strong",[t._v("事务处理没有记忆能力")]),t._v(", 服务器"),s("strong",[t._v("不知道客户端是什么状态")]),t._v(". 本次打开一个服务器上的网页与上一次打开这个服务器上的网页之间"),s("strong",[t._v("没有任何联系")]),t._v(".")]),t._v(" "),s("p",[t._v("HTTP 协议是"),s("strong",[t._v("无状态")]),t._v("的, 主要是为了让 HTTP 协议尽可能简单, 使得它能够处理大量事务. 但无状态不代表 HTTP 不能保持 TCP 连接.")]),t._v(" "),s("p",[t._v("HTTP/1.1 引入 "),s("strong",[t._v("Cookie 来保存状态信息")]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"_2-cookie概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-cookie概述"}},[t._v("#")]),t._v(" 2.Cookie概述")]),t._v(" "),s("p",[t._v("Cookie 是"),s("strong",[t._v("服务器")]),t._v("发送到"),s("strong",[t._v("用户浏览器")]),t._v("并保存在本地的一小块数据, 它会在浏览器之后向同一服务器再次发起请求时被"),s("strong",[t._v("携带")]),t._v("上, 用于告知服务端两个请求"),s("strong",[t._v("是否来自同一浏览器")]),t._v(". 由于之后"),s("strong",[t._v("每次请求都会需要携带")]),t._v(" Cookie 数据, 因此会带来额外的性能开销.")]),t._v(" "),s("p",[t._v("Cookie 是 HTTP 报文的一个请求头, Web 应用可以将用户的标识信息或者其他一些信息(用户名等)存储在 Cookie 中. 用户经过验证之后, 每次 HTTP 请求报文中都包含 Cookie, 这样服务器读取这个 Cookie 请求头就知道用户是谁了. "),s("strong",[t._v("Cookie 本质上就是一份存储在用户本地的文件, 里面包含了每次请求中都需要传递的信息")]),t._v(".")]),t._v(" "),s("blockquote",[s("p",[t._v("Cookie使用场景")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("会话状态管理")]),t._v(": 如用户登录状态, 购物车, 游戏分数或其它需要记录的信息.")]),t._v(" "),s("li",[s("strong",[t._v("个性化设置")]),t._v(": 如用户自定义设置, 主题等.")]),t._v(" "),s("li",[s("strong",[t._v("浏览器行为跟踪")]),t._v(": 如跟踪分析用户行为等. 如记录用户在某个页面的停留状态或者商品浏览记录.")]),t._v(" "),s("li",[t._v("保存登录信息.")])]),t._v(" "),s("h5",{attrs:{id:"_3-cookie使用过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-cookie使用过程"}},[t._v("#")]),t._v(" 3.Cookie使用过程")]),t._v(" "),s("p",[t._v("服务器发送的"),s("strong",[t._v("响应报文")]),t._v("包含 "),s("mark",[s("strong",[t._v("Set-Cookie")])]),t._v(" 首部字段(代码设置方式参考: 服务端使用Cookie), 客户端得到响应报文后把 "),s("strong",[t._v("Cookie")]),t._v(" 内容保存到浏览器中.")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token response-status"}},[s("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token status-code number"}},[t._v("200")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token reason-phrase string"}},[t._v("OK")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("text/html")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("yummy_cookie=choco\t\t\t// 设置cookie信息")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("tasty_cookie=strawberry\t\t// 设置cookie信息")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token text-html"}},[t._v("\n[page content]\n")])])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("客户端之后对同一个服务器发送请求时, 会"),s("strong",[t._v("从浏览器中取出 Cookie 信息并通过 Cookie 请求首部字段")]),t._v("发送给服务器.")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token request-line"}},[s("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("/sample_page.html")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("www.example.org")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Cookie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("yummy_cookie=choco; tasty_cookie=strawberry\t\t// 请求时携带cookie信息")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h5",{attrs:{id:"_4-cookie有效期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-cookie有效期"}},[t._v("#")]),t._v(" 4.Cookie有效期")]),t._v(" "),s("p",[t._v("Cookie 可以设置有效期.")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("会话期 Cookie")]),t._v(": 浏览器"),s("strong",[t._v("关闭之后会被自动删除")]),t._v(", 也就是说它仅在会话期内有效.")]),t._v(" "),s("li",[s("strong",[t._v("持久性 Cookie")]),t._v(": 指定"),s("strong",[t._v("过期时间")]),t._v("("),s("strong",[t._v("Expires")]),t._v(") 或有效期(max-age) 之后就成为了持久性的 Cookie.")])]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("id=a3fWa; Expires=Wed, 21 Oct 2015 07:28:00 GMT; // 指定了cookie的过期时间")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h5",{attrs:{id:"_5-cookie作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-cookie作用域"}},[t._v("#")]),t._v(" 5.Cookie作用域")]),t._v(" "),s("p",[s("mark",[s("strong",[t._v("Cookie 不能跨域, 当前及其父级域名可以取值")])]),t._v(".")]),t._v(" "),s("p",[s("strong",[t._v("Domain 标识指定了哪些主机可以接受 Cookie")]),t._v(". 如果不指定, 默认为当前文档的主机(不包含子域名). 如果指定了 Domain, 则一般包含子域名. 例如如果设置 "),s("code",[t._v("Domain=mozilla.org")]),t._v("​, 则 Cookie 也包含在"),s("strong",[t._v("子域名")]),t._v("中, 如 developer.mozilla.org.")]),t._v(" "),s("p",[s("strong",[t._v("Path 标识指定了主机下的哪些路径可以接受 Cookie(该 URL 路径必须存在于请求 URL 中)")]),t._v(' . 以字符 %x2F ("/") 作为路径分隔符, 子路径也会被匹配. 例如设置 '),s("code",[t._v("Path=/docs")]),t._v("​, 则以下地址都会匹配:")]),t._v(" "),s("ul",[s("li",[t._v("/docs")]),t._v(" "),s("li",[t._v("/docs/Web/")]),t._v(" "),s("li",[t._v("/docs/Web/HTTP")])]),t._v(" "),s("h5",{attrs:{id:"_6-httponly"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-httponly"}},[t._v("#")]),t._v(" 6.HttpOnly")]),t._v(" "),s("p",[t._v('浏览器通过 "document.cookie" 属性可'),s("strong",[t._v("创建新的 Cookie")]),t._v(", 也可通过该属性访问"),s("strong",[t._v("非 HttpOnly 标记")]),t._v("的 Cookie.")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yummy_cookie=choco"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tasty_cookie=strawberry"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("strong",[t._v("标记为 HttpOnly 的 Cookie 不能被 JavaScript 脚本调用")]),t._v(". "),s("strong",[t._v("跨站脚本攻击 (XSS)")]),t._v('  常常使用 JavaScript 的 "document.cookie" API 窃取用户的 Cookie 信息, 因此使用 HttpOnly 标记可以在一定程度上避免 '),s("strong",[t._v("XSS 攻击")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("id=a3fWa; Expires=Wed, 21 Oct 2015 07:28:00 GMT; Secure; HttpOnly")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h5",{attrs:{id:"_7-secure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-secure"}},[t._v("#")]),t._v(" 7.Secure")]),t._v(" "),s("p",[s("strong",[t._v("标记为 Secure 的 Cookie 只能通过被 HTTPS 协议加密过的请求发送给服务端")]),t._v(". 即便设置了 Secure 标记, 敏感信息也不应该通过 Cookie 传输, 因为 Cookie 有其"),s("strong",[t._v("固有的不安全性")]),t._v(", Secure 标记也无法提供确实的安全保障.")]),t._v(" "),s("h5",{attrs:{id:"_8-session"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-session"}},[t._v("#")]),t._v(" 8.Session")]),t._v(" "),s("p",[t._v("用户状态信息可以通过 "),s("strong",[t._v("Cookie 存储在客户端中")]),t._v(", 也可以利用 "),s("strong",[t._v("Session 存储在服务器端")]),t._v(", 存储在服务器端的信息更加"),s("strong",[t._v("安全")]),t._v(". Session 可以存储在服务器上的"),s("strong",[t._v("文件, 数据库或者内存")]),t._v("中, 也可以存储在 "),s("strong",[t._v("Redis")]),t._v(" 这种内存型数据库中, 效率会更高. 详细参考: Session.")]),t._v(" "),s("h4",{attrs:{id:"http缓存🌟"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http缓存🌟"}},[t._v("#")]),t._v(" HTTP缓存🌟")]),t._v(" "),s("h5",{attrs:{id:"_1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1.概述")]),t._v(" "),s("p",[t._v("缓存通常位于"),s("strong",[t._v("内存")]),t._v("中, 读取缓存的速度更快, 因而可以"),s("strong",[t._v("缓解服务器压力")]),t._v(", 同时也能降低客户端获取"),s("strong",[t._v("资源的延迟")]),t._v(". 缓存服务器在地理位置上也有可能比源服务器来得近, 例如浏览器缓存.")]),t._v(" "),s("p",[t._v("缓存位置一般有:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("代理服务器")]),t._v(".")]),t._v(" "),s("li",[s("strong",[t._v("客户端浏览器")]),t._v(".")])]),t._v(" "),s("h5",{attrs:{id:"_2-cache-control首部字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-cache-control首部字段"}},[t._v("#")]),t._v(" 2.Cache-Control首部字段")]),t._v(" "),s("p",[t._v("HTTP/1.1 通过 "),s("strong",[t._v("Cache-Control")]),t._v(" 首部字段来控制缓存, 有一些"),s("strong",[t._v("参数")]),t._v("可以更具体的控制缓存行为.")]),t._v(" "),s("blockquote",[s("p",[t._v("I 禁止进行缓存")])]),t._v(" "),s("p",[s("strong",[t._v("no-store")]),t._v(" 指令规定"),s("strong",[t._v("不能")]),t._v("对请求或响应的任何一部分进行缓存. "),s("strong",[t._v("禁止缓存")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Cache-Control")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("no-store")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("blockquote",[s("p",[t._v("II 强制确认缓存")])]),t._v(" "),s("p",[t._v("no-cache 指令规定缓存服务器需要"),s("strong",[t._v("先向源服务器验证缓存资源的有效性")]),t._v(", 只有当缓存资源有效时才能使用该缓存对客户端的请求进行响应.")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Cache-Control")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("no-cache")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("blockquote",[s("p",[t._v("III 私有缓存和公共缓存")])]),t._v(" "),s("p",[t._v("private 指令规定了将资源作为"),s("strong",[t._v("私有缓存")]),t._v(", 只能被单独用户使用, 一般存储在"),s("strong",[t._v("用户浏览器")]),t._v("中.")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Cache-Control")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("private")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("public 指令规定了将资源作为"),s("strong",[t._v("公共缓存")]),t._v(", 可以被多个用户使用, 一般存储在"),s("strong",[t._v("代理服务器")]),t._v("中.")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Cache-Control")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("public")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("blockquote",[s("p",[t._v("IV 缓存过期机制")])]),t._v(" "),s("p",[s("strong",[t._v("max-age")]),t._v(" 指令出现在"),s("strong",[t._v("请求报文")]),t._v(", 并且缓存资源的缓存时间小于该指令指定的时间, 那么就能接受该缓存.")]),t._v(" "),s("p",[s("strong",[t._v("max-age")]),t._v(" 指令出现在"),s("strong",[t._v("响应报文")]),t._v(", 表示缓存资源在缓存服务器中保存的时间.")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Cache-Control")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("max-age=31536000")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("Expires")]),t._v(" 首部字段也可以用于告知缓存服务器该资源什么时候会"),s("strong",[t._v("过期")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Expires")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("Wed, 04 Jul 2012 08:26:05 GMT")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("在 HTTP/1.1 中, 会优先处理 max-age 指令;")]),t._v(" "),s("li",[t._v("在 HTTP/1.0 中, max-age 指令会被忽略掉.")])]),t._v(" "),s("h5",{attrs:{id:"_3-缓存验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-缓存验证"}},[t._v("#")]),t._v(" 3.缓存验证")]),t._v(" "),s("p",[s("strong",[t._v("ETag")]),t._v(" 首部字段是"),s("strong",[t._v("资源的唯一标识")]),t._v('. URL 不能唯一表示资源, 例如 "'),s("a",{attrs:{href:"http://www.google.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.google.com/"),s("OutboundLink")],1),t._v('" 有中文和英文两个资源, 只有 '),s("strong",[t._v("ETag")]),t._v(" 才能对这两个资源进行"),s("strong",[t._v("唯一标识")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("ETag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v('"82e22293907ce725faf67773957acd12"')])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("可以将"),s("strong",[t._v("缓存资源的 ETag")]),t._v(" 值放入 "),s("strong",[t._v("If-None-Match")]),t._v(" 首部, 服务器收到该请求后, 判断"),s("strong",[t._v("缓存资源的 ETag 值")]),t._v("和资源的"),s("strong",[t._v("最新 ETag 值是否一致")]),t._v(", 如果一致则表示缓存资源"),s("strong",[t._v("有效")]),t._v(", "),s("strong",[t._v("返回 304 Not Modified")]),t._v(", 这就表示浏览器"),s("strong",[t._v("可以继续使用之前缓存的资源")]),t._v("而不用重新传输.")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("If-None-Match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v('"82e22293907ce725faf67773957acd12"')])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("Last-Modified")]),t._v(" 首部字段也可以用于"),s("strong",[t._v("缓存验证")]),t._v(", 它包含在源服务器发送的响应报文中, 指示源服务器对资源的最后修改时间. 但是它是一种弱校验器, 因为只能精确到一秒, 所以它通常作为 ETag 的备用方案. 如果响应首部字段里含有这个信息, 客户端可以在后续的请求中带上 If-Modified-Since 来验证缓存. 服务器只在所请求的资源在给定的日期时间之后对内容进行过修改的情况下才会将资源返回, 状态码为 200 OK. 如果请求的资源从那时起未经修改, 那么返回一个不带有实体主体的 304 Not Modified 响应报文.")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Last-Modified")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("Wed, 21 Oct 2015 07:28:00 GMT")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("If-Modified-Since")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("Wed, 21 Oct 2015 07:28:00 GMT")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"内容协商"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内容协商"}},[t._v("#")]),t._v(" 内容协商")]),t._v(" "),s("p",[t._v("通过内容协商返回"),s("strong",[t._v("最合适的内容")]),t._v(", 例如根据浏览器的默认语言选择返回中文或英文界面.")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Vary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("Accept-Language")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("在使用内容协商的情况下, 只有当缓存服务器中的缓存满足内容协商条件时才能使用该缓存, 否则应该向源服务器请求该资源.")]),t._v(" "),s("p",[t._v('例如一个客户端发送了一个包含 Accept-Language 首部字段的请求之后, 源服务器返回的响应包含 "Vary: Accept-Language" 内容, 缓存服务器对这个响应进行缓存之后, 在客户端下一次访问同一个 URL 资源, 并且 Accept-Language 与缓存中的对应的值相同时才会返回该缓存.')]),t._v(" "),s("h4",{attrs:{id:"编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编码"}},[t._v("#")]),t._v(" 编码")]),t._v(" "),s("h5",{attrs:{id:"_1-压缩传输的内容编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-压缩传输的内容编码"}},[t._v("#")]),t._v(" 1.压缩传输的内容编码")]),t._v(" "),s("p",[t._v("内容编码将"),s("strong",[t._v("实体主体部分进行压缩")]),t._v(", 从而减少传输的数据量. "),s("strong",[t._v("请求首部不压缩")]),t._v(". 常用的内容编码有: gzip, compress, deflate, identity.")]),t._v(" "),s("p",[t._v("浏览器发送 Accept-Encoding 首部, 其中包含有它所支持的压缩算法, 以及各自的优先级. 服务器则从中选择一种, 使用该算法对响应的消息主体进行压缩, 并通过 Content-Encoding 首部来告知浏览器使用的算法. 由于该内容协商过程是基于编码类型来选择资源的展现形式的, 响应报文的 Vary 首部字段至少要包含 "),s("strong",[t._v("Content-Encoding")]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"_2-分块传输编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-分块传输编码"}},[t._v("#")]),t._v(" 2.分块传输编码")]),t._v(" "),s("p",[t._v("Chunked Transfer Encoding, 可以把数据分割成多块, 让浏览器逐步显示页面.")]),t._v(" "),s("h4",{attrs:{id:"范围请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#范围请求"}},[t._v("#")]),t._v(" 范围请求")]),t._v(" "),s("p",[t._v("如果网络出现中断, 服务器只发送了一部分数据, "),s("strong",[t._v("范围请求")]),t._v("可以使得客户端只请求服务器"),s("strong",[t._v("未发送的那部分数据")]),t._v(", 从而避免服务器重新发送所有数据.")]),t._v(" "),s("p",[t._v("在请求报文中添加 "),s("strong",[t._v("Range")]),t._v(" 首部字段指定请求的"),s("strong",[t._v("范围")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token request-line"}},[s("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("/z4d4kWk.jpg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("i.imgur.com")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("bytes=0-1023")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("请求成功的话服务器返回的响应包含 "),s("strong",[t._v("206 Partial Content")]),t._v(" 状态码.")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token response-status"}},[s("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token status-code number"}},[t._v("206")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token reason-phrase string"}},[t._v("Partial Content")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-Range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("bytes 0-1023/146515")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-Length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("1024")])]),t._v("\n...\n(binary content)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("范围请求相关的响应状态码如下:")]),t._v(" "),s("ul",[s("li",[t._v("在范围请求"),s("strong",[t._v("成功")]),t._v("的情况下, 服务器会返回 "),s("strong",[t._v("206")]),t._v(" Partial Content 状态码.")]),t._v(" "),s("li",[t._v("在请求的范围"),s("strong",[t._v("越界")]),t._v("的情况下, 服务器会返回 "),s("strong",[t._v("416")]),t._v(" Requested Range Not Satisfiable 状态码.")]),t._v(" "),s("li",[t._v("在"),s("strong",[t._v("不支持")]),t._v("范围请求的情况下, 服务器会返回 "),s("strong",[t._v("200")]),t._v(" OK 状态码.")])]),t._v(" "),s("p",[t._v("响应首部字段 "),s("strong",[t._v("Accept-Ranges")]),t._v(" 用于告知客户端是否能处理范围请求, 可以"),s("strong",[t._v("处理使用 bytes")]),t._v(", 否则使用 "),s("strong",[t._v("none")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Accept-Ranges")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("bytes")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"多部分对象集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多部分对象集合"}},[t._v("#")]),t._v(" 多部分对象集合")]),t._v(" "),s("p",[t._v("一份报文主体内可含有"),s("strong",[t._v("多种类型")]),t._v("的实体同时发送, 每个部分之间用 "),s("strong",[t._v("boundary")]),t._v(" 字段定义的分隔符进行分隔, 每个部分都可以有首部字段. 例如上传多个表单时可以使用如下方式:")]),t._v(" "),s("div",{staticClass:"language-http line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-Type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("multipart/form-data; boundary=AaB03x\t// 指定Boundary")])]),t._v("\n\n--AaB03x\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-Disposition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v('form-data; name="submit-name"')])]),t._v("\n\nLarry\n--AaB03x\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-Disposition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v('form-data; name="files"; filename="file1.txt"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-Type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("text/plain")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token text-plain"}},[t._v("\n... contents of file1.txt ...\n--AaB03x--\n")])])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("h4",{attrs:{id:"http访问控制-cors-与跨域🌟"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http访问控制-cors-与跨域🌟"}},[t._v("#")]),t._v(" HTTP访问控制(CORS)与跨域🌟")]),t._v(" "),s("h5",{attrs:{id:"_1-概述-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述-2"}},[t._v("#")]),t._v(" 1.概述")]),t._v(" "),s("p",[t._v("一个 URL 由协议, 域名, 端口三部分组成. "),s("strong",[t._v("当一个请求 URL 的协议, 域名, 端口三者中的任意一个与当前页面 URL 不同即为跨域")]),t._v(".")]),t._v(" "),s("p",[t._v("场景的跨域场景参考下表:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("当前url")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("请求url")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("是否跨域")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("原因")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("http://www.autofelix.cn")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("http://www.autofelix.cn/api.php")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("否")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("协议/域名/端口都相同")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("http://www.autofelix.cn")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("https://www.autofelix.cn/api.php")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("是")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("协议不同")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("http://www.autofelix.cn")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("http://www.rabbit.cn")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("是")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("主域名不同")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("http://www.autofelix.cn")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("http://api.autofelix.cn")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("是")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("子域名不同")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("http://www.autofelix.cn")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("http://www.autofelix.cn")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("是")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("端口不同")])])])])]),t._v(" "),s("h5",{attrs:{id:"_2-跨域产生原因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-跨域产生原因"}},[t._v("#")]),t._v(" 2.跨域产生原因")]),t._v(" "),s("p",[t._v('前后端数据交互经常会碰到请求跨域, 浏览器为了安全使用了 "'),s("strong",[t._v("同源策略")]),t._v('". '),s("strong",[t._v("同源策略")]),t._v("(Same Orgin Policy)是一种约定, 它是浏览器核心也最基本的安全功能, 它会阻止一个域的 JS 脚本和另外一个域的内容进行交互, 如果缺少了同源策略, 浏览器很容易受到 XSS, CSFR 等攻击. "),s("strong",[t._v("不符合同源策略的请求即为跨域请求")]),t._v(".")]),t._v(" "),s("blockquote",[s("p",[t._v("同源策略的限制内容")])]),t._v(" "),s("ul",[s("li",[t._v("无法读取非同源网页的 cookie, localstorage 等.")]),t._v(" "),s("li",[t._v("无法接触非同源网页的 DOM 和 js 对象.")]),t._v(" "),s("li",[t._v("无法向非同源地址发送 Ajax 请求.")])]),t._v(" "),s("p",[t._v("跨域并不是请求发不出去, 而是请求能发出去, 服务端能收到请求并正常返回结果, 只是结果被浏览器拦截了. 跨域的本质是"),s("strong",[t._v("浏览器为了安全而阻止用户读取另一个域名下的内容")]),t._v(", 所以表单可以进行跨域请求, 因为表单不会获取新的内容, 而 Ajax 则会被浏览器拦截结果, 因为 Ajax 会获取响应, 浏览器认为这不安全, 所以拦截了响应. 这也说明了跨域并不能完全阻止 CSRF(Cross-site request forgery)跨站请求伪造, 因为请求毕竟是发出去了, 而且服务端也接收到了请求.")]),t._v(" "),s("h5",{attrs:{id:"_3-跨域解决方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-跨域解决方式"}},[t._v("#")]),t._v(" 3.跨域解决方式")]),t._v(" "),s("p",[t._v("无论哪种解决方案, 最终目的都是"),s("strong",[t._v("修改响应头, 向响应头中添加浏览器所要求的数据, 进而实现跨域")]),t._v(".")]),t._v(" "),s("blockquote",[s("p",[t._v("方法1: Nginx反向代理解决跨域")])]),t._v(" "),s("p",[t._v("使用 nginx 反向代理实现跨域, 是最简单的跨域方式.")]),t._v(" "),s("p",[t._v("只需要修改 nginx 的"),s("strong",[t._v("配置")]),t._v("即可解决跨域问题, 支持所有浏览器, 支持 session, 不需要修改任何代码, 并且不会影响服务器性能.")]),t._v(" "),s("p",[t._v("例如:")]),t._v(" "),s("div",{staticClass:"language-nginx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[t._v("// "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nginx配置")]),t._v("\nserver")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("81")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  www.domain1.com")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v("   http://www.domain2.com:8080")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#反向代理")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_cookie_domain")]),t._v(" www.domain2.com www.domain1.com")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改cookie里域名")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("  index.html index.htm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当用webpack-dev-server等中间件代理接口访问nignx时, 此时无浏览器参与, 故没有同源限制, 下面的跨域配置可不启用")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" Access-Control-Allow-Origin http://www.domain1.com")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#当前端只跨域不带cookie时, 可为*")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" Access-Control-Allow-Credentials true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[t._v("但一般不会直接配置 Nginx.")]),t._v(" "),s("blockquote",[s("p",[t._v("方法2: 后端语言的设置")])]),t._v(" "),s("p",[t._v("主要通过后端语言主动设置允许跨域请求, 比如 Spring Boot 应用中可以有多种解决方式, 具体参考: 服务端解决跨域问题.")]),t._v(" "),s("h4",{attrs:{id:"http-1-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1"}},[t._v("#")]),t._v(" HTTP/1.1")]),t._v(" "),s("h5",{attrs:{id:"_1-http-1-1新特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-http-1-1新特性"}},[t._v("#")]),t._v(" 1.HTTP/1.1新特性")]),t._v(" "),s("ul",[s("li",[t._v("默认"),s("strong",[t._v("长连接")]),t._v(".")]),t._v(" "),s("li",[t._v("支持"),s("strong",[t._v("流水线技术")]),t._v(".")]),t._v(" "),s("li",[t._v("支持同时打开多个 TCP 连接.")]),t._v(" "),s("li",[t._v("支持"),s("strong",[t._v("虚拟主机")]),t._v(".")]),t._v(" "),s("li",[t._v("新增"),s("strong",[t._v("状态码")]),t._v(" 100.")]),t._v(" "),s("li",[t._v("支持"),s("strong",[t._v("分块传输编码")]),t._v(".")]),t._v(" "),s("li",[t._v("新增缓存处理指令 "),s("strong",[t._v("max-age")]),t._v(".")]),t._v(" "),s("li",[t._v("废弃了 LINK 和 UNLINK 方法.")])]),t._v(" "),s("h5",{attrs:{id:"_2-http-1-x的缺陷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-http-1-x的缺陷"}},[t._v("#")]),t._v(" 2.HTTP/1.X的缺陷")]),t._v(" "),s("p",[t._v("HTTP/1.X 实现简单是以牺牲性能为代价的:")]),t._v(" "),s("ul",[s("li",[t._v("客户端需要使用"),s("strong",[t._v("多个连接")]),t._v("才能实现并发和缩短延迟;")]),t._v(" "),s("li",[s("strong",[t._v("不会压缩请求和响应首部")]),t._v(", 从而导致不必要的"),s("strong",[t._v("网络流量")]),t._v(";")]),t._v(" "),s("li",[t._v("不支持有效的"),s("strong",[t._v("资源优先级")]),t._v(", 致使底层 TCP 连接的利用率低下.")])]),t._v(" "),s("h4",{attrs:{id:"http-2-0🌟"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-2-0🌟"}},[t._v("#")]),t._v(" HTTP/2.0🌟")]),t._v(" "),s("h5",{attrs:{id:"_1-二进制分层帧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-二进制分层帧"}},[t._v("#")]),t._v(" 1.二进制分层帧")]),t._v(" "),s("p",[t._v("HTTP/2.0 将"),s("strong",[t._v("报文")]),t._v("分成 "),s("strong",[t._v("HEADERS")]),t._v(" 帧和 "),s("strong",[t._v("DATA")]),t._v(" 帧, 它们都是"),s("strong",[t._v("二进制格式")]),t._v("的.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1563596477939-6040456.png",alt:""}})]),t._v(" "),s("p",[t._v("在通信过程中, 只会有"),s("strong",[t._v("一个 TCP 连接")]),t._v("存在, 它承载了"),s("strong",[t._v("任意数量")]),t._v("的"),s("strong",[t._v("双向数据流(Stream)")]),t._v(" .")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("数据流")]),t._v("(Stream) 都有一个唯一标识符和可选的"),s("strong",[t._v("优先级信息")]),t._v(", 用于承载双向信息.")]),t._v(" "),s("li",[s("strong",[t._v("消息")]),t._v("(Message) 是与逻辑请求或响应对应的完整的一系列"),s("strong",[t._v("帧")]),t._v(".")]),t._v(" "),s("li",[s("strong",[t._v("帧")]),t._v("(Frame) 是最小的通信单位, 来自不同数据流的帧可以交错发送, 然后再根据每个帧头的数据流标识符重新组装.")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1563596492865-6040456.png",alt:""}})]),t._v(" "),s("h5",{attrs:{id:"_2-服务端推送"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-服务端推送"}},[t._v("#")]),t._v(" 2.服务端推送")]),t._v(" "),s("p",[s("strong",[t._v("HTTP/2.0")]),t._v(" 在客户端"),s("strong",[t._v("请求一个资源")]),t._v("时, 会把相关的资源"),s("strong",[t._v("一起")]),t._v("发送给客户端, 客户端就不需要再次发起请求了. 例如客户端请求 page.html 页面, 服务端就把 script.js 和 style.css 等与之相关的资源"),s("strong",[t._v("一起发给客户端")]),t._v(".")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1563596507274-6040456.png",alt:""}})]),t._v(" "),s("h5",{attrs:{id:"_3-首部压缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-首部压缩"}},[t._v("#")]),t._v(" 3.首部压缩")]),t._v(" "),s("p",[t._v("HTTP/1.1 的"),s("strong",[t._v("首部")]),t._v("带有大量信息, 而且"),s("strong",[t._v("每次都要重复发送, 浪费了网络资源")]),t._v(".")]),t._v(" "),s("p",[t._v("HTTP/2.0 要求客户端和服务器同时维护和更新一个包含之前"),s("strong",[t._v("见过的首部字段表")]),t._v(", 从而"),s("strong",[t._v("避免重复传输")]),t._v(". 不仅如此, HTTP/2.0 也使用 "),s("strong",[t._v("Huffman")]),t._v(" 编码对首部字段进行"),s("strong",[t._v("压缩")]),t._v(".")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1563596523232-6040456.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"http-3-0🌟"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-3-0🌟"}},[t._v("#")]),t._v(" HTTP/3.0🌟")]),t._v(" "),s("p",[t._v("HTTP/3.0 基于 UDP 实现, 实现了"),s("strong",[t._v("类似 TCP 的多路数据流, 传输可靠性等功能")]),t._v(", 称为 "),s("strong",[t._v("QUIC")]),t._v("(Quick UDP Internet Connection)协议.")]),t._v(" "),s("p",[t._v("QUIC 功能:")]),t._v(" "),s("ul",[s("li",[t._v("实现了类似 TCP 的流量控制, 传输可靠性的功能.")]),t._v(" "),s("li",[t._v("集成了 TLS(传输层安全性协议)加密功能.")]),t._v(" "),s("li",[t._v("实现了 HTTP/2.0 中多路复用. 不同点是 QUIC 实现了在同一物理连接上可以有多个独立的逻辑数据流, 实现了数据流的单独传输, 解决了 TCP 中队头阻塞问题.")]),t._v(" "),s("li",[t._v("实现了快速握手功能. "),s("strong",[t._v("QUIC 是基于 UDP 的")]),t._v(", 所以 QUIC 可以实现使用 0-RTT 和 1-RTT 来建立连接.")])]),t._v(" "),s("p",[t._v("‍")]),t._v(" "),s("p",[t._v("‍")]),t._v(" "),s("p",[t._v("‍")]),t._v(" "),s("h4",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("ul",[s("li",[t._v("上野宣. 图解 HTTP[M]. 人民邮电出版社, 2014.")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.im/entry/5766c29d6be3ff006a31b84e#comment",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cookie 与 Session 的区别"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.zhihu.com/question/19786827",target:"_blank",rel:"noopener noreferrer"}},[t._v("COOKIE 和 SESSION 有什么区别"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://harttle.land/2015/08/10/cookie-session.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cookie/Session 的机制与安全"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.kancloud.cn/digest/web-performance-http2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web 性能优化与 HTTP/2"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/http2/?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP/2 简介"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/14cd2c9d2cd2",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.jianshu.com/p/14cd2c9d2cd2"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("跨域: "),s("a",{attrs:{href:"https://bbs.huaweicloud.com/blogs/364753",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://bbs.huaweicloud.com/blogs/364753"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("跨域解决方法: "),s("a",{attrs:{href:"https://blog.csdn.net/wangmx1993328/article/details/88524163",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/wangmx1993328/article/details/88524163"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);