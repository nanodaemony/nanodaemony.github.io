(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{405:function(s,t,a){"use strict";a.r(t);var n=a(7),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_10-设计基础理论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-设计基础理论"}},[s._v("#")]),s._v(" 10.设计基础理论")]),s._v(" "),t("h4",{attrs:{id:"面向对象思想"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向对象思想"}},[s._v("#")]),s._v(" 面向对象思想")]),s._v(" "),t("h5",{attrs:{id:"_1-面向对象思想三大特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-面向对象思想三大特性"}},[s._v("#")]),s._v(" 1.面向对象思想三大特性")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("封装: 确保对象中的数据安全")]),s._v(".")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("继承: 保证了对象的可扩展性")]),s._v(".")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("多态: 保证了程序的灵活性")]),s._v(".")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("                       --- **阿里巴巴**\n")])])])])]),s._v(" "),t("h6",{attrs:{id:"_1-封装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-封装"}},[s._v("#")]),s._v(" (1)封装")]),s._v(" "),t("p",[t("strong",[s._v("数据被保护在抽象数据类型的内部, 尽可能地隐藏内部的细节, 只保留一些对外接口使之与外部发生联系")]),s._v(". 用户无需知道对象内部的细节, 但可以通过对象对外提供的接口来访问该对象.")]),s._v(" "),t("p",[s._v("以下 Person 类封装 name, gender, age 等属性, 外界只能通过 getter 方法获取 Person 对象的 name 属性和 gender 属性, 而无法获取 age 属性, 但 age 属性可供 work() 方法使用. 注意到 gender 属性使用 int 数据类型进行存储, 封装使得用户注意不到这种实现细节. 并且在需要修改 gender 属性使用的数据类型时, 也可以在不影响客户端代码的情况下进行.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" gender"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getGender")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" gender "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"man"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"woman"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("work")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" is working very hard!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" can\'t work any more!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("h6",{attrs:{id:"_2-继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-继承"}},[s._v("#")]),s._v(" (2)继承")]),s._v(" "),t("p",[t("strong",[s._v("继承保证了对象的可扩展性")]),s._v(".")]),s._v(" "),t("p",[s._v("继承实现了 "),t("strong",[s._v("IS-A")]),s._v(" 关系, 例如 Cat 和 Animal 就是一种 "),t("strong",[s._v("IS-A")]),s._v(" 关系, 因此 Cat 可以继承自 Animal, 从而获得 Animal 的"),t("strong",[s._v("非 private")]),s._v(" 属性和方法. 继承应该遵循里氏替换原则, "),t("strong",[s._v("子类对象必须能够替换掉所有父类对象")]),s._v(".")]),s._v(" "),t("p",[s._v("Cat 可以当做 Animal 来使用, 可以使用 Animal 引用 Cat 对象. 父类引用指向子类对象称为 "),t("strong",[s._v("向上转型")]),s._v(" .")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Animal")]),s._v(" animal "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Cat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h6",{attrs:{id:"_3-多态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-多态"}},[s._v("#")]),s._v(" (3)多态")]),s._v(" "),t("p",[t("strong",[s._v("多态保证了程序的灵活性")]),s._v(".")]),s._v(" "),t("p",[s._v("多态分为"),t("strong",[s._v("编译时多态")]),s._v("和"),t("strong",[s._v("运行时多态")]),s._v(":")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("编译")]),s._v("时多态主要指方法的"),t("strong",[s._v("重载")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("运行")]),s._v("时多态指程序中定义的对象引用所指向的"),t("strong",[s._v("具体类型")]),s._v("(动态类型)在运行期间才确定.")])]),s._v(" "),t("p",[s._v("运行时多态有"),t("strong",[s._v("三个条件")]),s._v(": "),t("strong",[s._v("继承")]),s._v(", "),t("strong",[s._v("覆写")]),s._v(", "),t("strong",[s._v("向上转型")]),s._v(".")]),s._v(" "),t("p",[s._v("下面乐器类(Instrument)有两个子类: Wind 和 Percussion, 它们都覆写了父类的 play() 方法. 在 Instrument 引用调用 play() 方法时, 会执行实际引用对象所在类的 play() 方法, 而不是 Instrument 类的方法.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Instrument")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("play")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Instument is playing..."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Wind")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Instrument")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("play")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Wind is playing..."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Percussion")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Instrument")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("play")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Percussion is playing..."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Music")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Instrument")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" instruments "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        instruments"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Wind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        instruments"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Percussion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Instrument")]),s._v(" instrument "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" instruments"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            instrument"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("play")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br")])]),t("h4",{attrs:{id:"设计原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设计原则"}},[s._v("#")]),s._v(" 设计原则")]),s._v(" "),t("h5",{attrs:{id:"_1-solid"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-solid"}},[s._v("#")]),s._v(" 1.SOLID")]),s._v(" "),t("h6",{attrs:{id:"_1-单一责任原则-srp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-单一责任原则-srp"}},[s._v("#")]),s._v(" (1)单一责任原则(SRP)")]),s._v(" "),t("p",[s._v("SRP(The Single Responsibility Principle). "),t("strong",[s._v("一个类只负责一件事")]),s._v(". 即应该让修改一个类的原因只有一个, 当这个类需要做"),t("strong",[s._v("过多事情")]),s._v("的时候, 就需要"),t("strong",[s._v("分解这个类")]),s._v(". 如果一个类承担的职责过多, 就等于把这些职责耦合在了一起, 一个职责的变化可能会削弱这个类完成其它职责的能力.")]),s._v(" "),t("h6",{attrs:{id:"_2-开闭原则-ocp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-开闭原则-ocp"}},[s._v("#")]),s._v(" (2)开闭原则(OCP)")]),s._v(" "),t("p",[s._v("OCP(The Open Closed Principle). "),t("strong",[s._v("类应该对扩展开放, 对修改关闭.")]),s._v(" "),t("strong",[t("strong",[s._v("该原则要求在")])]),s._v("​"),t("strong",[s._v("拓展添加新功能时不需要修改代码")]),s._v(". 符合开闭原则最典型的设计模式是"),t("strong",[s._v("装饰者模式")]),s._v(", 它可以动态地将责任附加到对象上, 而不用去修改类的代码.")]),s._v(" "),t("h6",{attrs:{id:"_3-里氏替换原则-lsp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-里氏替换原则-lsp"}},[s._v("#")]),s._v(" (3)里氏替换原则(LSP)")]),s._v(" "),t("p",[s._v("LSP(The Liskov Substitution Principle). "),t("strong",[s._v("子类对象必须能够替换掉所有父类对象")]),s._v(". 继承是一种 "),t("strong",[s._v("IS-A")]),s._v(" 关系, "),t("strong",[s._v("子类需要能够当成父类来使用, 并且需要比父类更特殊")]),s._v(". 如果不满足这个原则, 那么各个子类的行为上就会有很大差异, 增加继承体系的复杂度.")]),s._v(" "),t("h6",{attrs:{id:"_4-接口分离原则-isp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-接口分离原则-isp"}},[s._v("#")]),s._v(" (4)接口分离原则(ISP)")]),s._v(" "),t("p",[s._v("ISP(The Interface Segregation Principle). "),t("strong",[s._v("不应该强迫客户依赖于它们不用的方法")]),s._v(". 因此使用"),t("strong",[s._v("多个专门的接口比使用单一的总接口")]),s._v("要好.")]),s._v(" "),t("h6",{attrs:{id:"_5-依赖倒置原则-dip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-依赖倒置原则-dip"}},[s._v("#")]),s._v(" (5)依赖倒置原则(DIP)")]),s._v(" "),t("p",[s._v("DIP(The Dependency Inversion Principle). "),t("strong",[s._v("高层模块不应该依赖于低层模块, 二者都应该依赖于抽象; 抽象不应该依赖于细节, 细节应该依赖于抽象.")]),s._v(" "),t("strong",[t("strong",[s._v("高层模块包含一个应用程序中重要的")])]),s._v("​"),t("strong",[s._v("策略选择和业务模块")]),s._v(", 如果高层模块依赖于低层模块, 那么低层模块的改动就会直接影响到高层模块, 从而迫使高层模块也需要改动.")]),s._v(" "),t("p",[s._v("依赖于抽象意味着: "),t("strong",[s._v("任何变量")]),s._v("都"),t("strong",[s._v("不应该")]),s._v("持有一个"),t("strong",[s._v("指向具体类的指针")]),s._v("或引用; 任何类都不应该从具体类派生; 任何方法都不应该覆写它的任何基类中的已经实现的方法.")]),s._v(" "),t("h5",{attrs:{id:"_2-其他常见原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-其他常见原则"}},[s._v("#")]),s._v(" 2.其他常见原则")]),s._v(" "),t("p",[s._v("除了上述的经典原则, 在实际开发中还有下面这些常见的设计原则.")]),s._v(" "),t("h6",{attrs:{id:"_1-迪米特原则-lod"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-迪米特原则-lod"}},[s._v("#")]),s._v(" (1)迪米特原则(LOD)")]),s._v(" "),t("p",[s._v("LOD(The Law of Demeter). "),t("strong",[s._v("一个对象应当对其他对象有尽可能少的了解")]),s._v(". 迪米特法则又叫作"),t("strong",[s._v("最少知识原则")]),s._v("(Least Knowledge Principle), 即一个对象应当对其他对象有"),t("strong",[s._v("尽可能少的了解")]),s._v(", 不和陌生人说话.")]),s._v(" "),t("h6",{attrs:{id:"_2-合成复用原则-crp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-合成复用原则-crp"}},[s._v("#")]),s._v(" (2)合成复用原则(CRP)")]),s._v(" "),t("p",[s._v("CRP(The Composite Reuse Principle). 尽量使用"),t("strong",[s._v("对象组合")]),s._v(", 而不是通过继承来达到复用的目的.")]),s._v(" "),t("h6",{attrs:{id:"_3-共同封闭原则-ccp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-共同封闭原则-ccp"}},[s._v("#")]),s._v(" (3)共同封闭原则(CCP)")]),s._v(" "),t("p",[s._v("CCP(The Common Closure Principle). 一起修改的类, 应该组合在一起(同一个包里). 如果必须修改代码, 最好所有修改都发生在一个包里(修改关闭), 而不是遍布在很多包里.")]),s._v(" "),t("h6",{attrs:{id:"_4-稳定抽象原则-sap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-稳定抽象原则-sap"}},[s._v("#")]),s._v(" (4)稳定抽象原则(SAP)")]),s._v(" "),t("p",[s._v("SAP(The Stable Abstractions Principle). 最稳定的包应该是最抽象的包, 不稳定的包应该是具体的包, 即包的抽象程度跟它的稳定性成正比.")]),s._v(" "),t("h6",{attrs:{id:"_5-稳定依赖原则-sdp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-稳定依赖原则-sdp"}},[s._v("#")]),s._v(" (5)稳定依赖原则(SDP)")]),s._v(" "),t("p",[s._v("SDP(The Stable Dependencies Principle). 包之间的依赖关系都应该是稳定方向依赖的, 包要依赖的包要比自己更具有稳定性.")]),s._v(" "),t("h4",{attrs:{id:"uml类图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#uml类图"}},[s._v("#")]),s._v(" UML类图")]),s._v(" "),t("p",[s._v("UML 类图是一种"),t("strong",[s._v("结构图")]),s._v(", 用于描述一个系统的"),t("strong",[s._v("静态结构")]),s._v(". 类图以反映类结构和类之间"),t("strong",[s._v("关系")]),s._v("为目的, 用以描述软件系统的结构, 是一种"),t("strong",[s._v("静态建模方法")]),s._v(". 类图中的类, 与面向对象语言中的类的概念是对应的.")]),s._v(" "),t("h5",{attrs:{id:"_1-类之间的关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-类之间的关系"}},[s._v("#")]),s._v(" 1.类之间的关系")]),s._v(" "),t("p",[s._v("类与类之间的关系主要有六种: "),t("strong",[s._v("继承, 实现, 组合, 聚合, 关联和依赖")]),s._v(". 其中 "),t("strong",[s._v("组合, 聚合, 关联")]),s._v("这三种类关系的代码结构一样, 都是"),t("strong",[s._v("用属性来保存对另一个类的引用")]),s._v(", 所以要通过"),t("strong",[s._v("内容间的关系")]),s._v("来区别.")]),s._v(" "),t("p",[s._v("这六种类关系中, 组合, 聚合和关联的代码结构一样, 可以从关系的强弱来理解, "),t("strong",[s._v("各类关系从强到弱")]),s._v("依次是: "),t("strong",[s._v("继承→实现→组合→聚合→关联→依赖")]),s._v(".")]),s._v(" "),t("h6",{attrs:{id:"_1-继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-继承"}},[s._v("#")]),s._v(" (1)继承")]),s._v(" "),t("p",[s._v("继承关系也称"),t("strong",[s._v("泛化关系")]),s._v("(Generalization), 用于描述"),t("strong",[s._v("父类与子类")]),s._v("之间的关系. 子类中除了与父类一致的信息以外, 还包括额外的信息.")]),s._v(" "),t("p",[s._v("例如: 公交车, 出租车和小轿车"),t("strong",[s._v("都是汽车")]),s._v(", 他们都有名称, 并且都能在路上行驶.")]),s._v(" "),t("h6",{attrs:{id:"_2-实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-实现"}},[s._v("#")]),s._v(" (2)实现")]),s._v(" "),t("p",[s._v("实现关系(Implementation), 主要用来规定"),t("strong",[s._v("接口和实现类")]),s._v("的关系. 接口(包括抽象类)是方法的集合, 在实现关系中, 类实现了接口, 类中的方法实现了接口声明的所有方法.")]),s._v(" "),t("p",[s._v("例如: 汽车和轮船都是交通工具, 而交通工具只是一个可移动工具的抽象概念, 船和车实现了具体移动的功能.")]),s._v(" "),t("h6",{attrs:{id:"_3-组合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-组合"}},[s._v("#")]),s._v(" (3)组合")]),s._v(" "),t("p",[s._v("组合关系(Composition): "),t("strong",[s._v("整体与部分的关系")]),s._v(", 但是整体与部分"),t("strong",[s._v("不可以分开")]),s._v(". 组合关系表示类之间"),t("strong",[s._v("整体与部分")]),s._v("的关系, 整体和部分有"),t("strong",[s._v("一致的生存期")]),s._v(". 一旦整体对象不存在, 部分对象也将不存在, 是"),t("strong",[s._v("同生共死")]),s._v("的关系.")]),s._v(" "),t("p",[s._v("例如: 人由头部和身体组成, 两者不可分割, 共同存在.")]),s._v(" "),t("h6",{attrs:{id:"_4-聚合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-聚合"}},[s._v("#")]),s._v(" (4)聚合")]),s._v(" "),t("p",[s._v("聚合关系(Aggregation): "),t("strong",[s._v("整体和部分")]),s._v("的关系, 整体与部分"),t("strong",[s._v("可以分开")]),s._v(". 聚合关系也表示类之间"),t("strong",[s._v("整体与部分")]),s._v("的关系, 成员对象是整体对象的"),t("strong",[s._v("一部分")]),s._v(", 但是成员对象"),t("strong",[s._v("可以脱离整体对象而独立存在")]),s._v(".")]),s._v(" "),t("p",[s._v("例如: 公交车司机和工衣, 工帽是整体与部分的关系, 但是可以分开, 工衣, 工帽可以穿在别的司机身上, 公交司机也可以穿别的工衣, 工帽.")]),s._v(" "),t("h6",{attrs:{id:"_5-关联"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-关联"}},[s._v("#")]),s._v(" (5)关联")]),s._v(" "),t("p",[s._v("关联关系(Association): 表示一个"),t("strong",[s._v("类的属性保存了对另一个类的一个实例")]),s._v("(或多个实例)的"),t("strong",[s._v("引用")]),s._v(". 关联关系是类与类之间"),t("strong",[s._v("最常用")]),s._v("的一种关系, 表示一类对象与另一类对象之间有联系. 组合, 聚合也属于关联关系, 只是关联关系的类间关系比其他两种"),t("strong",[s._v("要弱")]),s._v(".")]),s._v(" "),t("p",[s._v("关联关系有四种: 双向关联, 单向关联, 自关联, 多重数关联. 在 UML 图中, "),t("strong",[s._v("双向的关联可以有两个箭头")]),s._v("或者没有箭头, 单向的关联或自关联"),t("strong",[s._v("有一个箭头")]),s._v(". 在多重性关系中, 可以直接在关联直线上增加"),t("strong",[s._v("一个数字")]),s._v(", 表示与之对应的另一个类的对象的个数.")]),s._v(" "),t("p",[s._v("例如: 汽车和司机, 一辆汽车对应特定的司机, 一个司机也可以开多辆车.")]),s._v(" "),t("h6",{attrs:{id:"_6-依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-依赖"}},[s._v("#")]),s._v(" (6)依赖")]),s._v(" "),t("p",[s._v("依赖关系(Dependence): 假设 A 类的"),t("strong",[s._v("变化引起")]),s._v("了 B 类的变化, 则说名 "),t("strong",[s._v("B 类依赖于 A 类")]),s._v(". 大多数情况下, 依赖关系体现在"),t("strong",[s._v("某个类的方法使用另一个类的对象作为参数")]),s._v(".")]),s._v(" "),t("p",[s._v('依赖关系是一种 "使用" 关系, 特定事物的改变有可能会影响到使用该事物的其他事物, 在需要表示一个事物使用另一个事物时使用依赖关系.')]),s._v(" "),t("p",[s._v("例如: 汽车依赖汽油, 如果没有汽油, 汽车将无法行驶.")]),s._v(" "),t("p",[s._v("‍")]),s._v(" "),t("p",[s._v("‍")]),s._v(" "),t("p",[s._v("‍")])])}),[],!1,null,null,null);t.default=r.exports}}]);