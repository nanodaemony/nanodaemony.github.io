(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{460:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_306-线程安全总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_306-线程安全总结"}},[t._v("#")]),t._v(" 306.线程安全总结")]),t._v(" "),s("p",[t._v("多个线程不管以何种方式访问某个类, 并且在主调代码中"),s("strong",[t._v("不需要进行同步")]),t._v(", 都能表现正确的行为.")]),t._v(" "),s("p",[s("strong",[t._v("线程安全")]),t._v("有以下几种实现方式:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("阻塞同步")]),t._v("(悲观策略): Synchronized, ReentrantLock.")]),t._v(" "),s("li",[s("strong",[t._v("非阻塞同步")]),t._v("(乐观策略): CAS.")]),t._v(" "),s("li",[s("strong",[t._v("无同步")]),t._v(": ThreadLocal, 栈封闭, 不可变类.")])]),t._v(" "),s("h4",{attrs:{id:"互斥-阻塞同步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#互斥-阻塞同步"}},[t._v("#")]),t._v(" 互斥/阻塞同步")]),t._v(" "),s("p",[t._v("互斥同步最主要的问题就是线程"),s("strong",[t._v("阻塞和唤醒")]),t._v("所带来的性能问题, 因此这种同步也称为"),s("strong",[t._v("阻塞同步")]),t._v(". 使用 "),s("strong",[t._v("synchronized")]),t._v(" 和 "),s("strong",[t._v("ReentrantLock")]),t._v(", 也称为"),s("strong",[t._v("阻塞")]),t._v("同步. 是一种"),s("strong",[t._v("悲观")]),t._v("的并发策略.")]),t._v(" "),s("p",[t._v("互斥同步(Mutual Exclusion & Synchronization)是常见的一种并发正确性保障手段. 同步是指在多个线程并发访问共享数据时, 保证共享数据在同一个时刻只被一个(或者是一些, 使用信号量的时候)线程使用.")]),t._v(" "),s("p",[t._v("而互斥是实现同步的一种手段, **临界区(Critical Section), 互斥量(MuTex)和信号量(Semaphore)**都是主要的互斥实现方式. 因此, 在这四个字里面, 互斥是因, 同步是果; 互斥是方法, 同步是目的.")]),t._v(" "),s("h6",{attrs:{id:"_1-synchronized"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-synchronized"}},[t._v("#")]),t._v(" (1)synchronized")]),t._v(" "),s("p",[t._v("在 Java 中, 最基本的互斥同步手段是 synchronized关键字, "),s("strong",[t._v("synchronized 关键字经过编译后, 会在同步代码块的前后分别形成 monitorenter 和 monitorexit 这两个字节码指令, 这两个字节码都需要一个 reference 类型的参数来指明要锁定和解锁的对象. 如果程序中 synchronized 指明了对象参数, 那就是这个对象的 reference; 如果没有指明, 那就根据 synchronized 修饰的是实例方法还是类方法, 去取对应的对象实例或 Class 对象来作为锁对象. ​")])]),t._v(" "),s("p",[s("strong",[t._v("虚拟机规范要求, 在执行 monitorenter 指令时, 首先尝试获取对象的锁. 如果对象没有被锁定或者当前线程已经拥有了那么对象的锁, 把锁的计数器加 1, 执行 monitorexit 时, 将锁计数减 1, 当锁计数器为 0 时, 锁被释放. 如果获取对象锁失败, 当前线程将阻塞等待. ​")])]),t._v(" "),s("p",[t._v("虚拟机对 monitorenter 和 monitorexit 行为描述中, 注意两点: "),s("strong",[t._v("synchronized 同步块对同一条线程来说是可重入的, 不会出现自己把自己锁死的问题")]),t._v("; 同步块在已进入线程执行完之前, 会阻塞后面其他线程的进入.")]),t._v(" "),s("h6",{attrs:{id:"_2-reentrantlock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-reentrantlock"}},[t._v("#")]),t._v(" (2)ReentrantLock")]),t._v(" "),s("p",[s("strong",[t._v("还可以使用 JUC 包中的重入锁(ReentrantLock)来实现同步. 相比 synchronized, ReentrantLock 增加了一些高级功能, 主要以下 3 项: 等待可中断, 可实现公平锁, 以及锁可以绑定多个条件. ​")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("等待可中断: ​")]),t._v("当持有的锁的线程长期不释放锁时, 正在等待的线程可以选择放弃等待, 改为处理其他事情, 对处理执行时间长的同步块很有帮助.")]),t._v(" "),s("li",[s("strong",[t._v("公平锁: ​")]),t._v("多个线程等待同一锁时, 必须按照申请锁的时间顺序来依次获得锁; 而非公平锁不保证这一点, 在锁被释放时, 任何一个等待锁的线程都有机会获得锁. synchronized 中的锁是非公平的, ReentrantLock 默认也是非公平, 但可以通过构造函数要求使用公平锁.")]),t._v(" "),s("li",[s("strong",[t._v("绑定多个条件: ​")]),t._v("一个 ReentrantLock 对象可以同时绑定多个 Condition 对象, 而 synchronized 中, 锁对象的wait() 和 notify() 或 notifyAll() 可以实现一个隐含的条件, 如果要和多于一个的条件关联时, 就不得不额外添加一个锁, 而 ReentrantLock 则无须这样, 只要多次调用 newCondition() 即可.")])]),t._v(" "),s("h4",{attrs:{id:"非阻塞同步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非阻塞同步"}},[t._v("#")]),t._v(" 非阻塞同步")]),t._v(" "),s("p",[s("strong",[t._v("互斥同步")]),t._v("属于一种"),s("strong",[t._v("悲观")]),t._v("的并发策略, 总是认为只要不去做正确的同步措施, 那就肯定会出现问题. 无论共享数据是否真的会出现竞争, "),s("strong",[t._v("它都要进行加锁")]),t._v("(这里讨论的是概念模型, 实际上虚拟机会优化掉很大一部分不必要的加锁), 用户态核心态转换, 维护锁计数器和检查是否有被阻塞的线程需要唤醒等操作. 进行线程阻塞和唤醒也会带来"),s("strong",[t._v("性能问题")]),t._v(".")]),t._v(" "),s("p",[t._v("随着"),s("strong",[t._v("硬件")]),t._v("指令集的发展, 可以使用"),s("strong",[t._v("基于冲突检测的乐观并发策略")]),t._v(": 先进行操作, 如果没有其它线程争用共享数据, 那操作就成功了, 否则采取"),s("strong",[t._v("补偿")]),t._v("措施(不断地重试, 直到成功为止). 这种乐观的并发策略的许多实现都不需要将线程阻塞, 因此这种同步操作称为"),s("strong",[t._v("非阻塞同步")]),t._v(".")]),t._v(" "),s("p",[t._v("乐观锁需要操作和冲突检测这两个步骤具备"),s("strong",[t._v("原子性")]),t._v(", 这里就不能再使用互斥同步来保证了, 只能靠"),s("strong",[t._v("硬件")]),t._v("来完成. "),s("strong",[t._v("硬件支持的原子性")]),t._v("操作最典型的是: "),s("strong",[t._v("比较并交换")]),t._v("(Compare-and-Swap, CAS). CAS 指令需要有 "),s("strong",[t._v("3 个操作数")]),t._v(", 分别是"),s("strong",[t._v("内存地址 V, 旧的预期值 A 和新值 B")]),t._v(". 当执行操作时, 只有当 V 的值等于 A, 才将 V 的值更新为 B. 但是 CAS 可能存在 ABA 问题, 解决方案就是加个时间戳.")]),t._v(" "),s("h4",{attrs:{id:"无同步方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无同步方案"}},[t._v("#")]),t._v(" 无同步方案")]),t._v(" "),s("p",[t._v("要保证线程安全, 并不是一定就要进行同步. 如果一个方法本来就"),s("strong",[t._v("不涉及共享数据")]),t._v(", 那它自然就无须任何同步措施去保证正确性.")]),t._v(" "),s("h5",{attrs:{id:"_1-栈封闭"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-栈封闭"}},[t._v("#")]),t._v(" 1.栈封闭")]),t._v(" "),s("p",[t._v("多个线程访问同一个"),s("strong",[t._v("方法的局部变量")]),t._v("时, 不会出现线程安全问题, 因为局部变量存储在"),s("strong",[t._v("虚拟机栈")]),t._v("中, 属于"),s("strong",[t._v("线程私有")]),t._v("的. 互不影响.")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StackClosedExample")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法内部局部变量")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" cnt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            cnt"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cnt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StackClosedExample")]),t._v(" example "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StackClosedExample")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecutorService")]),t._v(" executorService "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Executors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newCachedThreadPool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    executorService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    executorService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    executorService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("100\n100\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h5",{attrs:{id:"_2-线程本地存储threadlocal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-线程本地存储threadlocal"}},[t._v("#")]),t._v(" 2.线程本地存储ThreadLocal")]),t._v(" "),s("p",[t._v("可以使用 "),s("strong",[t._v("ThreadLocal")]),t._v(" 来实现线程本地存储功能.")]),t._v(" "),s("p",[t._v("如果一段代码中所需要的数据必须与其他代码共享, 那就看看这些"),s("strong",[t._v("共享数据的代码")]),t._v("是否能保证在"),s("strong",[t._v("同一个线程中执行")]),t._v(". 如果能保证, 就可以把共享数据的"),s("strong",[t._v("可见范围限制")]),t._v("在同一个线程之内, 这样无须同步也能保证线程之间不出现数据争用的问题.")]),t._v(" "),s("p",[t._v("符合这种特点的应用并不少见, 大部分使用"),s("strong",[t._v("消费队列的架构")]),t._v('模式(如 "生产者-消费者" 模式)都会将产品的消费过程尽量在一个线程中消费完. 其中最重要的一个应用实例就是经典 Web 交互模型中的 "一个请求对应一个服务器线程"(Thread-per-Request)的处理方式, 这种处理方式的广泛应用使得很多 Web 服务端应用都可以使用'),s("strong",[t._v("线程本地存储")]),t._v("来解决线程安全问题.")]),t._v(" "),s("p",[t._v("对于以下代码, thread1 中设置 threadLocal 为 1, 而 thread2 设置 threadLocal 为 2. 过了一段时间之后, thread1 读取 threadLocal 依然是 1, 不受 thread2 的影响. 互不影响.")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadLocalExample")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadLocal")]),t._v(" threadLocal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadLocal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" thread1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            threadLocal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("threadLocal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            threadLocal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" thread2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            threadLocal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            threadLocal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        thread1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        thread2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br")])]),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("1\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("ThreadLocal 从理论上讲并不是用来解决多线程并发问题的, 因为"),s("strong",[t._v("根本不存在多线程竞争")]),t._v(". 这是一种"),s("strong",[t._v("空间换时间")]),t._v("的策略.")]),t._v(" "),s("p",[t._v("在一些场景(尤其是"),s("strong",[t._v("使用线程池")]),t._v(") 下, 由于 ThreadLocal.ThreadLocalMap 的底层数据结构导致 ThreadLocal "),s("strong",[t._v("有内存泄漏的情况")]),t._v(", 应该尽可能在每次使用 ThreadLocal 后"),s("strong",[t._v("手动调用 remove()")]),t._v(", 以避免出现 ThreadLocal 经典的内存泄漏甚至是造成自身业务混乱的风险.")]),t._v(" "),s("h5",{attrs:{id:"_3-可重入代码-reentrant-code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-可重入代码-reentrant-code"}},[t._v("#")]),t._v(" 3.可重入代码(Reentrant Code)")]),t._v(" "),s("p",[t._v("这种代码也叫"),s("strong",[t._v("纯代码")]),t._v(", 可以在代码执行的"),s("strong",[t._v("任何时刻中断它")]),t._v(", 转而去执行另外一断代码(包括递归调用它本身), 而在控制权返回后, 原来的程序不会出现任何错误. "),s("strong",[t._v("所有可重入代码都是线程安全的")]),t._v(". 可重入代码有一些共同特征, 例如不依赖存储在堆上的数据和公用的系统资源, 用到的状态量都是由参数中传入, 不调用非可重入的方法等. 判断代码具备可重入的简单原则: 如果一个方法, 它的返回结果是可以预测的, 只要输入了相同的数据, 就都能返回相同的结果, 就满足可重入性的要求, 当然也是线程安全的.")]),t._v(" "),s("h5",{attrs:{id:"_4-不可变类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-不可变类"}},[t._v("#")]),t._v(" 4.不可变类")]),t._v(" "),s("h6",{attrs:{id:"_1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" (1)概述")]),t._v(" "),s("p",[t._v("不可变("),s("strong",[t._v("Immutable")]),t._v(")的对象一定是线程安全的, 不需要再采取任何的线程安全保障措施. 只要一个不可变的对象被正确地构建出来, 永远也不会看到它在多个线程之中处于不一致的状态. 多线程环境下, 应当尽量使对象成为"),s("strong",[t._v("不可变")]),t._v(", 来满足线程安全.")]),t._v(" "),s("p",[s("strong",[t._v("不可变的类型")]),t._v(":")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("final")]),t._v(" 关键字修饰的"),s("strong",[t._v("基本数据")]),t._v("类型.")]),t._v(" "),s("li",[s("strong",[t._v("String")]),t._v(": trim(), uppercase(), substring() 等方法, 它们返回的都是"),s("strong",[t._v("新的")]),t._v(" String 对象, 而并不是直接修改原来的对象.")]),t._v(" "),s("li",[s("strong",[t._v("枚举")]),t._v("类型.")]),t._v(" "),s("li",[s("strong",[t._v("Number 部分子类")]),t._v(", 如 Long 和 Double 等"),s("strong",[t._v("数值包装")]),t._v("类型, BigInteger 和 BigDecimal 等大数据类型. 但同为 Number 的"),s("strong",[t._v("原子类")]),t._v(" AtomicInteger 和 AtomicLong 则是"),s("strong",[t._v("可变")]),t._v("的.")])]),t._v(" "),s("p",[t._v("对于集合类型, 可以使用 Collections."),s("strong",[t._v("unmodifiableXXX()")]),t._v(" 方法来获取一个"),s("strong",[t._v("不可变的集合")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ImmutableExample")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取不可变集合")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" unmodifiableMap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collections")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unmodifiableMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 尝试改变集合")]),t._v("\n        unmodifiableMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v('Exception in thread "main" java.lang.UnsupportedOperationException\n    at java.util.Collections$UnmodifiableMap.put(Collections.java:1457)\n    at ImmutableExample.main(ImmutableExample.java:9)\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("Collections.unmodifiableXXX() 先对原始的集合进行"),s("strong",[t._v("拷贝")]),t._v(", 需要对集合进行修改的方法都"),s("strong",[t._v("直接")]),t._v("抛出异常.")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不可变集合修改内容的源码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UnsupportedOperationException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("Immutable 对象是可以"),s("strong",[t._v("被重复使用")]),t._v("的, 可以将它们"),s("strong",[t._v("缓存")]),t._v("起来重复使用, 就像字符串字面量和整型数字一样. 可以使用静态工厂方法来提供类似于 valueOf() 的方法, 它可以从缓存返回一个已存在的 Immutable 对象, 而不是重新创建一个.")]),t._v(" "),s("p",[t._v("Immutable 也有一个缺点就是"),s("strong",[t._v("会制造大量垃圾")]),t._v(", 由于他们不能被重用而且对于它们的使用就是"),s("strong",[t._v("先用后仍")]),t._v(", 字符串就是一个典型的例子, 它会创造很多的垃圾, 给垃圾收集带来很大的麻烦. 当然这只是个极端的例子, 合理使用 Immutable 对象会创造很大的价值.")]),t._v(" "),s("h6",{attrs:{id:"_2-创建immutable类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建immutable类"}},[t._v("#")]),t._v(" (2)创建Immutable类")]),t._v(" "),s("p",[t._v("如何创建一个 Immutable 类?")]),t._v(" "),s("p",[t._v("Immutable 对象的状态在创建之后就"),s("strong",[t._v("不能发生改变")]),t._v(", 任何对它的"),s("strong",[t._v("改变都应该产生一个新的对象")]),t._v(". Immutable 类的"),s("strong",[t._v("所有的属性")]),t._v("都应该是 "),s("strong",[t._v("final")]),t._v(" 的. 对象必须被正确的创建, 比如: 对象引用在对象创建过程中不能泄露(leak). 对象应该是 final 的, 以此来限制子类继承父类, 以避免子类改变了父类的 immutable 特性.")]),t._v(" "),s("p",[t._v("如果类中存在很多可选的和强制性的字段, 也可以使用"),s("strong",[t._v("建造者模式")]),t._v("来创建一个 Immutable 的类.")]),t._v(" "),s("p",[t._v("‍")]),t._v(" "),s("h4",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/CyC2018/CS-Notes",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/CyC2018/CS-Notes"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("《深入理解 Java 虚拟机 第二版》")])])])}),[],!1,null,null,null);s.default=e.exports}}]);