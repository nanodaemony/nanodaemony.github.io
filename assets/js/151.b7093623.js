(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{470:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_4-rocketmq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-rocketmq"}},[s._v("#")]),s._v(" 4.RocketMQ")]),s._v(" "),t("p",[s._v("本文为 RocketMQ 5.0 官方文档: "),t("a",{attrs:{href:"https://rocketmq.apache.org/zh/docs/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://rocketmq.apache.org/zh/docs/"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[s._v("#")]),s._v(" 基础")]),s._v(" "),t("blockquote",[t("p",[s._v("为什么选择RocketMQ")])]),s._v(" "),t("p",[t("strong",[s._v("RocketMQ")]),s._v(" 是一个 "),t("strong",[s._v("队列模型")]),s._v(" 的消息中间件, 具有"),t("strong",[s._v("高性能, 高可靠, 高实时, 分布式")]),s._v(" 等特点. 是一个基于 Java 开发的分布式消息系统.")]),s._v(" "),t("p",[s._v("在阿里孕育 RocketMQ 的雏形时期, 我们将其用于异步通信, 搜索, 社交网络活动流, 数据管道, 贸易流程中. 随着我们的贸易业务吞吐量的上升, 源自我们的消息传递集群的压力也变得紧迫.")]),s._v(" "),t("p",[s._v("随着队列和虚拟主题使用的增加, ActiveMQ IO 模块达到了一个瓶颈. 我们尽力通过节流, 断路器或降级来解决这个问题, 但效果并不理想. 于是我们尝试了流行的消息传递解决方案 Kafka. 不幸的是, Kafka 不能满足要求, 其尤其表现在"),t("strong",[s._v("低延迟和高可靠性")]),s._v("方面, 详见下文. 在这种情况下, 我们决定发明一个新的消息传递引擎来处理更广泛的消息用例, 覆盖从传统的 pub/sub 场景到高容量的实时零误差的交易系统.")]),s._v(" "),t("p",[s._v("RocketMQ 自诞生以来, 因其架构简单, 业务功能丰富, 具备极强可扩展性等特点被众多企业开发者以及云厂商广泛采用. 历经十余年的大规模场景打磨, RocketMQ 已经成为业内共识的金融级可靠业务消息首选方案, 被广泛应用于互联网, 大数据, 移动互联网, 物联网等领域的业务场景.")]),s._v(" "),t("h4",{attrs:{id:"基本概念与名词定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本概念与名词定义"}},[s._v("#")]),s._v(" 基本概念与名词定义")]),s._v(" "),t("p",[s._v("这里介绍 RocketMQ 的基本概念, 以便更好地理解和使用 RocketMQ.")]),s._v(" "),t("blockquote",[t("p",[s._v("主题(Topic)")])]),s._v(" "),t("p",[t("strong",[s._v("RocketMQ 中消息传输和存储的顶层容器, 用于标识同一类业务逻辑的消息")]),s._v(". 主题通过 TopicName 来做唯一标识和区分. 更多信息, 参考: 主题(Topic).")]),s._v(" "),t("blockquote",[t("p",[s._v("消息类型(MessageType)")])]),s._v(" "),t("p",[t("strong",[s._v("RocketMQ 中按照消息传输特性的不同而定义的分类, 用于类型管理和安全校验")]),s._v(". RocketMQ 支持的消息类型有"),t("strong",[s._v("普通消息, 顺序消息, 事务消息和定时/延时消息")]),s._v(".")]),s._v(" "),t("p",[s._v("RocketMQ 从 5.0 版本开始, 支持强制校验消息类型, 即每个主题 Topic 只允许发送一种消息类型的消息, 这样可以更好的运维和管理生产系统, 避免混乱. 但同时保证向下兼容 4.x 版本行为, 强制校验功能默认开启.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息队列(MessageQueue)")])]),s._v(" "),t("p",[t("strong",[s._v("队列是 RocketMQ 中消息存储和传输的实际容器, 也是消息的最小存储单元")]),s._v(". RocketMQ 的"),t("strong",[s._v("所有主题都是由多个队列组成, 以此实现队列数量的水平拆分和队列内部的流式存储")]),s._v(". 队列通过 QueueId 来做唯一标识和区分. 更多信息, 请参见"),t("a",{attrs:{href:"https://rocketmq.apache.org/zh/docs/domainModel/03messagequeue",target:"_blank",rel:"noopener noreferrer"}},[s._v("队列(MessageQueue)"),t("OutboundLink")],1),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("消息(Message)")])]),s._v(" "),t("p",[s._v("消息是 RocketMQ 中的最小数据传输单元. 生产者将业务数据的负载和拓展属性包装成消息发送到服务端, 服务端按照相关语义将消息投递到消费端进行消费. 更多信息, 请参见"),t("a",{attrs:{href:"https://rocketmq.apache.org/zh/docs/domainModel/04message",target:"_blank",rel:"noopener noreferrer"}},[s._v("消息(Message)"),t("OutboundLink")],1),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("消息视图(MessageView)")])]),s._v(" "),t("p",[s._v("消息视图是 RocketMQ 面向开发视角提供的一种消息只读接口. 通过消息视图可以读取消息内部的多个属性和负载信息, 但是不能对消息本身做任何修改.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息标签(MessageTag)")])]),s._v(" "),t("p",[s._v("消息标签是 RocketMQ 提供的细粒度消息分类属性, 可以在主题层级之下做消息类型的细分. 消费者通过订阅特定的标签来实现细粒度过滤. 更多信息参考: 队列(MessageQueue).")]),s._v(" "),t("blockquote",[t("p",[s._v("消息位点(MessageQueueOffset)")])]),s._v(" "),t("p",[t("strong",[s._v("消息是按到达 RocketMQ 服务端的先后顺序存储在指定主题的多个队列中, 每条消息在队列中都有一个唯一的 Long 类型坐标, 这个坐标被定义为消息位点")]),s._v(". 更多信息参考: 消费进度管理.")]),s._v(" "),t("blockquote",[t("p",[s._v("消费位点(ConsumerOffset)")])]),s._v(" "),t("p",[t("strong",[s._v("一条消息被某个消费者消费完成后不会立即从队列中删除, RocketMQ 会基于每个消费者分组记录消费过的最新一条消息的位点, 即消费位点")]),s._v(". 更多信息参考: 消费进度管理.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息索引(MessageKey)")])]),s._v(" "),t("p",[s._v("消息索引是 RocketMQ 提供的"),t("strong",[s._v("面向消息的索引属性")]),s._v(". 通过设置的消息索引可以快速查找到对应的消息内容.")]),s._v(" "),t("blockquote",[t("p",[s._v("生产者(Producer)")])]),s._v(" "),t("p",[s._v("生产者是 RocketMQ 系统中用来构建并传输消息到服务端的运行实体. 生产者通常被集成在业务系统中, "),t("strong",[s._v("将业务消息按照要求封装成消息并发送至服务端")]),s._v(". 更多信息参考: 生产者(Producer).")]),s._v(" "),t("blockquote",[t("p",[s._v("事务检查器(TransactionChecker)")])]),s._v(" "),t("p",[s._v("RocketMQ 中生产者用来执行本地事务检查和异常事务恢复的监听器. 事务检查器应该通过业务侧数据的状态来检查和判断事务消息的状态. 更多信息参考: 事务消息.")]),s._v(" "),t("blockquote",[t("p",[s._v("事务状态(TransactionResolution)")])]),s._v(" "),t("p",[s._v("RocketMQ 中事务消息发送过程中, 事务提交的状态标识, 服务端通过事务状态控制事务消息是否应该提交和投递. "),t("strong",[s._v("事务状态包括事务提交, 事务回滚和事务未决")]),s._v(". 更多信息参考: 事务消息.")]),s._v(" "),t("blockquote",[t("p",[s._v("消费者分组(ConsumerGroup)")])]),s._v(" "),t("p",[s._v("消费者分组是 RocketMQ 系统中"),t("strong",[s._v("承载多个消费行为一致的消费者的负载均衡分组")]),s._v(". 和消费者不同, 消费者分组并不是运行实体, 而是一个"),t("strong",[s._v("逻辑资源")]),s._v(". 在 RocketMQ 中, "),t("strong",[s._v("通过消费者分组内初始化多个消费者实现消费性能的水平扩展以及高可用容灾")]),s._v(". 更多信息参考: 消费者分组(ConsumerGroup).")]),s._v(" "),t("blockquote",[t("p",[s._v("消费者(Consumer)")])]),s._v(" "),t("p",[s._v("消费者是 RocketMQ 中用来"),t("strong",[s._v("接收并处理消息的运行实体")]),s._v(". 消费者通常被集成在业务系统中, 从服务端获取消息, 并将消息转化成业务可理解的信息, 供业务逻辑处理. 更多信息参考: 消费者(Consumer).")]),s._v(" "),t("blockquote",[t("p",[s._v("消费结果(ConsumeResult)")])]),s._v(" "),t("p",[s._v("RocketMQ 中 PushConsumer 消费监听器"),t("strong",[s._v("处理消息完成后返回的处理结果, 用来标识本次消息是否正确处理")]),s._v(". 消费结果包含"),t("strong",[s._v("消费成功和消费失败")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("订阅关系(Subscription)")])]),s._v(" "),t("p",[s._v("订阅关系是 RocketMQ 系统中"),t("strong",[s._v("消费者获取消息, 处理消息的规则和状态配置")]),s._v(". 订阅关系由消费者分组动态注册到服务端系统, 并在后续的消息传输中按照订阅关系定义的过滤规则进行消息匹配和消费进度维护. 更多信息参考: 订阅关系(Subscription).")]),s._v(" "),t("blockquote",[t("p",[s._v("消息过滤")])]),s._v(" "),t("p",[t("strong",[s._v("消费者可以通过订阅指定消息标签(Tag)对消息进行过滤, 确保最终只接收被过滤后的消息合集")]),s._v(". 过滤规则的计算和匹配在 RocketMQ 的服务端完成. 更多信息参考: 消息过滤.")]),s._v(" "),t("blockquote",[t("p",[s._v("重置消费位点")])]),s._v(" "),t("p",[s._v("以时间轴为坐标, 在消息持久化存储的时间范围内, "),t("strong",[s._v("重新设置消费者分组对已订阅主题的消费进度, 设置完成后消费者将接收设定时间点之后, 由生产者发送到 RocketMQ 服务端的消息")]),s._v(". 更多信息参考: 重置消费位点(回溯消费).")]),s._v(" "),t("blockquote",[t("p",[s._v("消息轨迹")])]),s._v(" "),t("p",[t("strong",[s._v("在一条消息从生产者发出到消费者接收并处理过程中, 由各个相关节点的时间, 地点等数据汇聚而成的完整链路信息")]),s._v(". 通过消息轨迹能清晰定位消息从生产者发出, 经由 RocketMQ 服务端, 投递给消费者的完整链路, 方便定位排查问题.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息堆积")])]),s._v(" "),t("p",[s._v("生产者已经将消息发送到 RocketMQ 的服务端, 但由于消费者的消费能力有限, 未能在短时间内将所有消息正确消费掉, 此时"),t("strong",[s._v("在服务端保存着未被消费的消息, 该状态即消息堆积")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("事务消息")])]),s._v(" "),t("p",[s._v("事务消息是 RocketMQ 提供的一种高级消息类型, 支持"),t("strong",[s._v("在分布式场景下保障消息生产和本地事务的最终一致性")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("定时/延时消息")])]),s._v(" "),t("p",[s._v("定时/延时消息是 RocketMQ 提供的一种高级消息类型, "),t("strong",[s._v("消息被发送至服务端后, 在指定时间后才能被消费者消费")]),s._v(". 通过设置一定的定时时间可以实现"),t("strong",[s._v("分布式场景的延时调度触发效果")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("顺序消息")])]),s._v(" "),t("p",[s._v("顺序消息是 RocketMQ 提供的一种高级消息类型, "),t("strong",[s._v("支持消费者按照发送消息的先后顺序获取消息")]),s._v(", 从而实现业务场景中的顺序处理.")]),s._v(" "),t("h3",{attrs:{id:"领域模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#领域模型"}},[s._v("#")]),s._v(" 领域模型")]),s._v(" "),t("h4",{attrs:{id:"领域模型概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#领域模型概述"}},[s._v("#")]),s._v(" 领域模型概述")]),s._v(" "),t("h5",{attrs:{id:"rocketmq领域模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rocketmq领域模型"}},[s._v("#")]),s._v(" RocketMQ领域模型")]),s._v(" "),t("p",[s._v("RocketMQ 是一款典型的分布式架构下的中间件产品, 使用"),t("strong",[s._v("异步通信方式和发布订阅的消息传输模型")]),s._v(". 通信方式和传输模型的具体说明, 请参见下文"),t("strong",[s._v("通信方式介绍")]),s._v("和"),t("strong",[s._v("消息传输模型")]),s._v("介绍. RocketMQ 产品具备异步通信的优势, 系统拓扑简单, 上下游耦合较弱, 主要应用于异步解耦, 流量削峰填谷等场景.")]),s._v(" "),t("p",[s._v("对于"),t("strong",[s._v("主题模型")]),s._v("的实现来说"),t("strong",[s._v("每个消息中间件的底层设计都是不一样的")]),s._v(", 比如 Kafka 中的 "),t("strong",[s._v("分区")]),s._v(", RocketMQ 中的 "),t("strong",[s._v("队列")]),s._v(", RabbitMQ 中的 "),t("strong",[s._v("Exchange")]),s._v(". 可以理解为 "),t("strong",[s._v("主题模型/发布订阅模型 就是一个标准")]),s._v(", 那些中间件只不过照着这个标准去实现而已.")]),s._v(" "),t("p",[s._v("RocketQM 消息模型如下图所示.")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240825152228-7xzqjfp.png",alt:"image"}}),s._v("​")]),s._v(" "),t("p",[s._v("如上图所示, RocketMQ 中"),t("strong",[s._v("消息的生命周期主要分为")]),s._v("​"),t("mark",[t("strong",[s._v("消息生产, 消息存储, 消息消费")])]),s._v("这三部分.")]),s._v(" "),t("p",[t("strong",[s._v("生产者生产消息并发送至 RocketMQ 服务端, 消息被存储在服务端的主题中, 消费者通过订阅主题消费消息")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("消息生产")])]),s._v(" "),t("p",[t("strong",[s._v("生产者(Producer)")]),s._v(" : 用于产生消息的运行实体, 一般集成于业务调用链路的上游. 生产者是轻量级匿名无身份的.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息存储")])]),s._v(" "),t("p",[t("strong",[s._v("主题(Topic)")]),s._v(" : RocketMQ 消息传输和存储的分组容器, 主题内部由多个队列组成, 消息的存储和水平扩展实际是通过主题内的队列实现的.")]),s._v(" "),t("p",[t("strong",[s._v("队列(MessageQueue)")]),s._v(" : RocketMQ 消息传输和存储的实际单元容器, 类比于其他消息队列中的"),t("strong",[s._v("分区")]),s._v(". RocketMQ 通过流式特性的"),t("strong",[s._v("无限队列")]),s._v("结构来存储消息, "),t("strong",[s._v("消息在队列内具备顺序性存储特征")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("消息(Message)")]),s._v(" : RocketMQ 的最小传输单元. "),t("strong",[s._v("消息具备不可变性, 在初始化发送和完成存储后即不可变")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("消息消费")])]),s._v(" "),t("p",[t("strong",[s._v("消费者分组(ConsumerGroup)")]),s._v(" : RocketMQ 发布订阅模型中定义的独立的消费身份分组, 用于统一管理底层运行的多个消费者(Consumer). "),t("strong",[s._v("同一个消费组的多个消费者必须保持消费逻辑和配置一致, 共同分担该消费组订阅的消息, 实现消费能力的水平扩展")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("消费者(Consumer)")]),s._v(" : RocketMQ 消费消息的运行实体, 一般集成在业务调用链路的下游. 消费者必须被指定到某一个消费组中.")]),s._v(" "),t("p",[t("strong",[s._v("订阅关系(Subscription)")]),s._v(" : RocketMQ 发布订阅模型中"),t("strong",[s._v("消息过滤, 重试, 消费进度的规则配置")]),s._v(". 订阅关系以消费组粒度进行管理, 消费组通过定义订阅关系控制指定消费组下的消费者如何实现消息过滤, 消费重试及消费进度恢复等. RocketMQ 的订阅关系除过滤表达式之外都是"),t("strong",[s._v("持久化")]),s._v("的, 即服务端重启或请求断开, 订阅关系依然保留.")]),s._v(" "),t("h5",{attrs:{id:"通信方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通信方式"}},[s._v("#")]),s._v(" 通信方式")]),s._v(" "),t("p",[s._v("分布式系统架构思想下, 将复杂系统拆分为多个独立的"),t("strong",[s._v("子模块")]),s._v(", 例如微服务模块. 此时就需要考虑"),t("strong",[s._v("子模块间的远程通信")]),s._v(", 典型的通信模式分为以下两种, "),t("strong",[s._v("一种是同步的 RPC 远程调用; 一种是基于中间件代理的异步通信方式")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("同步RPC调用模型")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/syncarchi-ebbd41e1afd6adf432792ee2d7a91748-20240422213136-3uinp43.png",alt:"同步调用"}})]),s._v(" "),t("p",[s._v("同步 RPC 调用模型下, 不同系统之间"),t("strong",[s._v("直接进行调用通信")]),s._v(", 每个请求直接从调用方发送到被调用方, 然后要求被调用方立即返回响应结果给调用方, 以确定本次调用结果是否成功. "),t("strong",[s._v("注意")]),s._v(": 此处的同步并不代表 RPC 的编程接口方式, RPC也可以有异步非阻塞调用的编程方式, 但本质上仍然是需要在指定时间内得到目标端的直接响应.")]),s._v(" "),t("blockquote",[t("p",[s._v("异步通信模型")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/asyncarchi-e7ee18dd77aca472fb80bb2238d9528b-20240422213136-4t02gve.png",alt:"异步调用"}})]),s._v(" "),t("p",[s._v("异步消息通信模式下, "),t("strong",[s._v("各子系统之间无需强耦合直接连接, 调用方只需要将请求转化成异步事件(消息)发送给中间代理, 发送成功即可认为该异步链路调用完成, 剩下的工作中间代理会负责将事件可靠通知到下游的调用系统, 确保任务执行完成")]),s._v(". 该中间代理一般就是"),t("strong",[s._v("消息中间件")]),s._v(".")]),s._v(" "),t("p",[s._v("异步通信的优势如下:")]),s._v(" "),t("ul",[t("li",[s._v("系统拓扑简单. 由于调用方和被调用方统一和中间代理通信, 系统是星型结构, 易于维护和管理.")]),s._v(" "),t("li",[t("strong",[s._v("上下游耦合性弱")]),s._v(". 上下游系统之间弱耦合, 结构更灵活, 由中间代理负责缓冲和异步恢复.  上下游系统间可以独立升级和变更, 不会互相影响.")]),s._v(" "),t("li",[s._v("容量削峰填谷. 基于消息的中间代理往往具备很强的流量缓冲和整形能力, 业务流量高峰到来时不会击垮下游.")])]),s._v(" "),t("h5",{attrs:{id:"消息传输模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消息传输模型"}},[s._v("#")]),s._v(" 消息传输模型")]),s._v(" "),t("p",[s._v("主流的消息中间件的传输模型主要为"),t("strong",[s._v("点对点模型和发布订阅模型")]),s._v(". (参考: 消息传输模型).")]),s._v(" "),t("p",[s._v("RocketMQ 使用的传输模型为"),t("strong",[s._v("发布订阅模型")]),s._v(", 因此也具有发布订阅模型的特点.")]),s._v(" "),t("h4",{attrs:{id:"rocketmq部署架构🌟"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rocketmq部署架构🌟"}},[s._v("#")]),s._v(" RocketMQ部署架构🌟")]),s._v(" "),t("h5",{attrs:{id:"_1-基本架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本架构"}},[s._v("#")]),s._v(" 1.基本架构")]),s._v(" "),t("p",[s._v("RocketMQ 架构中有四大角色 "),t("strong",[s._v("NameServer, Broker, Producer, Consumer")]),s._v(".")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("Broker")]),s._v(": 主要负责消息的"),t("strong",[s._v("存储, 投递和查询以及服务高可用保证")]),s._v(". 其实就是消息队列服务器, 生产者生产消息到 Broker, 消费者从 Broker 拉取消息并消费.")]),s._v(" "),t("li",[t("strong",[s._v("NameServer")]),s._v(": 其实也是一个 "),t("strong",[s._v("注册中心")]),s._v(", 主要提供两个功能: "),t("strong",[s._v("Broker 管理和路由信息管理")]),s._v(". Broker 会"),t("strong",[s._v("将自己的信息注册到 NameServer")]),s._v(", 此时 NameServer 就存放了很多 Broker 的信息(Broker 的路由表), "),t("strong",[s._v("消费者和生产者就从 NameServer 中获取路由表然后照着路由表的信息于对应的 Broker 进行通信")]),s._v("(生产者和消费者定期会向 NameServer 去查询相关的 Broker 的信息).")]),s._v(" "),t("li",[t("strong",[s._v("Producer")]),s._v(": "),t("strong",[s._v("消息发布")]),s._v("的角色, 就是"),t("strong",[s._v("生产者")]),s._v(", 支持分布式集群方式部署.")]),s._v(" "),t("li",[t("strong",[s._v("Consumer")]),s._v(": "),t("strong",[s._v("消息消费")]),s._v("的角色, 就是"),t("strong",[s._v("消费者")]),s._v(", 支持分布式集群方式部署. 支持以 "),t("strong",[s._v("push 推, pull 拉两种模式")]),s._v("对消息进行消费. 同时也支持集群方式和广播方式的消费, 它提供实时消息订阅机制.")])]),s._v(" "),t("p",[s._v("四个组件关系如下图所示.")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20230211215719467.png",alt:""}}),s._v("​")]),s._v(" "),t("h5",{attrs:{id:"_2-集群架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-集群架构"}},[s._v("#")]),s._v(" 2.集群架构")]),s._v(" "),t("p",[s._v("RocketMQ 生产环境下的架构更加复杂, 因为上面的四个角色都是需要做"),t("strong",[s._v("集群")]),s._v("的.")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20200728144455669.png",alt:"image-20200728144455669"}})]),s._v(" "),t("p",[s._v("集群架构与之前的架构图也没什么区别, 主要是一些细节上的差别.")]),s._v(" "),t("p",[s._v("第一, Broker 做了集群并且还进行了"),t("strong",[s._v("主从部署")]),s._v(", 由于"),t("strong",[s._v("消息分布在各个 Broker 上")]),s._v(". 一旦某个 Broker 宕机, 则该 Broker 上的消息读写都会受到影响. 所以 RocketMQ 提供了 "),t("strong",[s._v("master/slave")]),s._v(" 的结构, salve 定时从 master 同步数据(同步刷盘或者异步刷盘), 如果 master 宕机, 则 slave 提供消费服务, 但是不能写入消息.")]),s._v(" "),t("p",[s._v("第二, 为了保证 "),t("strong",[s._v("HA")]),s._v(", NameServer 也做了"),t("strong",[s._v("集群部署")]),s._v(", 但是注意它是"),t("strong",[s._v("去中心化")]),s._v("的. 也就意味着"),t("strong",[s._v("它没有主节点")]),s._v(", NameServer 的所有节点是"),t("strong",[s._v("没有进行信息同步")]),s._v("的, 在 RocketMQ 中是通过单个 Broker 和"),t("strong",[s._v("所有 NameServer 保持长连接")]),s._v(", 并且在每隔 30 秒 Broker 会向所有 Nameserver "),t("strong",[s._v("发送心跳")]),s._v(", 心跳包含了自身的 Topic 配置信息, 这个步骤就对应这上面的 Routing Info.")]),s._v(" "),t("p",[s._v("第三, "),t("strong",[s._v("生产者")]),s._v("需要向 Broker "),t("strong",[s._v("发送消息")]),s._v("的时候, 需要先"),t("strong",[s._v("从 NameServer 获取关于 Broker 的路由信息")]),s._v(", 然后通过"),t("strong",[s._v("轮询")]),s._v("的方法去向每个队列中生产数据以达到"),t("strong",[s._v("负载均衡")]),s._v("的效果.")]),s._v(" "),t("p",[s._v("第四, "),t("strong",[s._v("消费者")]),s._v("通过 NameServer 获取所有 Broker 的路由信息后, 向 "),t("strong",[s._v("Broker 发送 Pull 请求")]),s._v("来获取消息数据. Consumer 可以以两种模式启动: "),t("strong",[s._v("广播")]),s._v("(Broadcast)"),t("strong",[s._v("和集群")]),s._v("(Cluster). 广播模式下, 一条消息会发送给同一个消费组中的所有消费者, 集群模式下消息只会发送给一个消费者.")]),s._v(" "),t("h4",{attrs:{id:"broker模型🌟"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#broker模型🌟"}},[s._v("#")]),s._v(" Broker模型🌟")]),s._v(" "),t("h5",{attrs:{id:"基础-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础-2"}},[s._v("#")]),s._v(" 基础")]),s._v(" "),t("p",[t("strong",[s._v("Broker 就是消息服务器")]),s._v(". 一个 Topic 中存在多个队列, 一个 Topic 分布在多个 Broker 上, 一个 Broker 可以配置多个 Topic , 它们是多对多的关系. 如果某个 Topic 消息量很大, 应该给它多配置多个"),t("strong",[s._v("队列")]),s._v("(提高并发能力), 并且尽量多分布在不同 Broker 上, 以减轻某个 Broker 的压力. Topic 消息量都比较均匀的情况下, 如果某个 broker 上的队列越多, 则该 broker 压力越大. 所以一般需要配置多个 Broker.")]),s._v(" "),t("p",[s._v("Broker 与 Topic 的关系如下所示:")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20230211214523542.png",alt:""}})]),s._v(" "),t("h5",{attrs:{id:"broker角色"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#broker角色"}},[s._v("#")]),s._v(" Broker角色")]),s._v(" "),t("p",[t("strong",[s._v("Broker 角色分为 ASYNC_MASTER(异步主机), SYNC_MASTER(同步主机)以及 SLAVE(从机)")]),s._v(" . 如果对消息的可靠性要求比较严格, 可以采用 SYNC_MASTER 加 SLAVE 的部署方式. 如果对消息可靠性要求不高, 可以采用ASYNC_MASTER 加 SLAVE 的部署方式.")]),s._v(" "),t("h5",{attrs:{id:"broker参数配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#broker参数配置"}},[s._v("#")]),s._v(" Broker参数配置")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"center"}},[s._v("参数名")]),s._v(" "),t("th",[s._v("默认值")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("listenPort")]),s._v(" "),t("td",[s._v("10911")]),s._v(" "),t("td",[s._v("接受客户端连接的监听端口")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("namesrvAddr")]),s._v(" "),t("td",[s._v("null")]),s._v(" "),t("td",[s._v("nameServer 地址")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("brokerIP1")]),s._v(" "),t("td",[s._v("网卡的 InetAddress")]),s._v(" "),t("td",[s._v("当前 broker 监听的 IP")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("brokerIP2")]),s._v(" "),t("td",[s._v("跟 brokerIP1 一样")]),s._v(" "),t("td",[s._v("存在主从 broker 时, 如果在 broker 主节点上配置了 brokerIP2 属性, broker 从节点会连接主节点配置的 brokerIP2 进行同步")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("brokerName")]),s._v(" "),t("td",[s._v("null")]),s._v(" "),t("td",[s._v("broker 的名称")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("brokerClusterName")]),s._v(" "),t("td",[s._v("DefaultCluster")]),s._v(" "),t("td",[s._v("本 broker 所属的 Cluser 名称")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("brokerId")]),s._v(" "),t("td",[s._v("0")]),s._v(" "),t("td",[s._v("broker id, 0 表示 master, 其他的正整数表示 slave")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("storePathCommitLog")]),s._v(" "),t("td",[s._v("$HOME/store/commitlog/")]),s._v(" "),t("td",[s._v("存储 commit log 的路径")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("storePathConsumerQueue")]),s._v(" "),t("td",[s._v("$HOME/store/consumequeue/")]),s._v(" "),t("td",[s._v("存储 consume queue 的路径")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("mapedFileSizeCommitLog")]),s._v(" "),t("td",[s._v("1024 * 1024 * 1024(1G)")]),s._v(" "),t("td",[s._v("commit log 的映射文件大小")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("deleteWhen")]),s._v(" "),t("td",[s._v("04")]),s._v(" "),t("td",[s._v("在每天的什么时间删除已经超过文件保留时间的 commit log")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("fileReservedTime")]),s._v(" "),t("td",[s._v("72")]),s._v(" "),t("td",[s._v("以小时计算的文件保留时间")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("brokerRole")]),s._v(" "),t("td",[s._v("ASYNC_MASTER")]),s._v(" "),t("td",[s._v("SYNC_MASTER/ASYNC_MASTER/SLAVE")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("flushDiskType")]),s._v(" "),t("td",[s._v("ASYNC_FLUSH")]),s._v(" "),t("td",[s._v("SYNC_FLUSH/ASYNC_FLUSH SYNC_FLUSH 模式下的 broker 保证在收到确认生产者之前将消息刷盘. ASYNC_FLUSH 模式下的 broker 则利用刷盘一组消息的模式, 可以取得更好的性能.")])])])]),s._v(" "),t("h5",{attrs:{id:"最佳实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践"}},[s._v("#")]),s._v(" 最佳实践")]),s._v(" "),t("blockquote",[t("p",[s._v("Broker崩溃以后有什么影响?")])]),s._v(" "),t("p",[t("strong",[s._v("Master 节点崩溃")]),s._v(". 消息不能再发送到该 Broker 集群, 但是如果有另一个可用的 Broker 集群, 那么在主题存在的条件下仍然可以发送消息. 消息仍然可以从 Slave 节点消费.")]),s._v(" "),t("p",[t("strong",[s._v("一些 Slave 节点崩溃")]),s._v(". 只要有另一个工作的 Slave, 就不会影响发送消息. 对消费消息也不会产生影响, 除非消费者组设置为优先从该 Slave 消费. 默认情况下, 消费者组从 Master 消费.")]),s._v(" "),t("p",[t("strong",[s._v("所有 Slave 节点崩溃")]),s._v(". 向 Master 发送消息不会有任何影响, 但如果 Master是 SYNC_MASTER, Producer会得到一个 SLAVE_NOT_AVAILABLE, 表示消息没有发送给任何 Slave. 对消费消息也没有影响, 除非消费者组设置为优先从 Slave 消费. 默认情况下, 消费者组从 Master 消费.")]),s._v(" "),t("blockquote",[t("p",[s._v("如何增加一个新的Broker?")])]),s._v(" "),t("p",[t("strong",[s._v("启动一个新的 Broker 并将其注册到 NameServer 中的 Broker 列表里")]),s._v(".")]),s._v(" "),t("p",[s._v("默认只自动创建内部系统 Topic 和 Consumer Group. 如果您希望在新节点上拥有您的业务主题和消费者组, 请从现有的 Broker 中复制它们. RocketMQ 提供了管理工具和命令行来处理此问题.")]),s._v(" "),t("blockquote",[t("p",[s._v("FlushDiskType")])]),s._v(" "),t("p",[t("strong",[s._v("SYNC_FLUSH(同步刷新)相比于 ASYNC_FLUSH(异步处理)会损失很多性能")]),s._v(", 但是也更可靠, 所以需要根据实际的业务场景做好权衡.")]),s._v(" "),t("h4",{attrs:{id:"nameserver🌟"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nameserver🌟"}},[s._v("#")]),s._v(" NameServer🌟")]),s._v(" "),t("blockquote",[t("p",[s._v("NameServer 干啥用的? 直接 Producer, Consumer 和 Broker 直接进行生产消息, 消费消息不就好了么?")])]),s._v(" "),t("p",[s._v("Broker 是需要保证高可用的, 如果整个系统仅仅靠着一个 Broker 来维持的话, 那么这个 Broker 的压力会很大, 所以需要使用多个 Broker 来保证 "),t("strong",[s._v("负载均衡")]),s._v(". 如果消费者和生产者"),t("strong",[s._v("直接")]),s._v("和多个 Broker 相连, 那么当 Broker 修改的时候必定会"),t("strong",[s._v("牵连着每个生产者和消费者")]),s._v(", 这样就会产生"),t("strong",[s._v("耦合问题")]),s._v(", 而 "),t("strong",[s._v("NameServer 注册中心")]),s._v("就是用来解决这个问题的.")]),s._v(" "),t("blockquote",[t("p",[s._v("RocketMQ 为什么不使用 ZooKeeper 作为注册中心? 以及自制的 NameServer 优缺点?")])]),s._v(" "),t("p",[s._v("ZooKeeper 作为支持顺序一致性的中间件, 在某些情况下, 它"),t("strong",[s._v("为了满足一致性, 会丢失一定时间内的可用性")]),s._v(", RocketMQ 需要"),t("strong",[s._v("注册中心只是为了发现组件地址")]),s._v(", 在某些情况下, RocketMQ 的注册中心"),t("strong",[s._v("可以出现数据不一致性")]),s._v(", 这同时也是 NameServer 的缺点, 因为 NameServer 集群间"),t("strong",[s._v("互不通信")]),s._v(", 它们之间的注册信息可能会不一致. 另外, 当有新的服务器加入时, NameServer 并"),t("strong",[s._v("不会立马通知")]),s._v("到 Produer, 而是由 Produer 定时去请求 NameServer 获取最新的 Broker/Consumer 信息.")]),s._v(" "),t("h4",{attrs:{id:"主题-topic"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主题-topic"}},[s._v("#")]),s._v(" 主题(Topic)")]),s._v(" "),t("h5",{attrs:{id:"定义与模型关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义与模型关系"}},[s._v("#")]),s._v(" 定义与模型关系")]),s._v(" "),t("p",[s._v("主题是 RocketMQ 中消息传输和存储的顶层容器, 用于"),t("strong",[s._v("标识同一类业务逻辑的消息")]),s._v(". 主题的作用主要如下:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("定义数据的分类隔离:")]),s._v("  在 RocketMQ 的方案设计中, 建议"),t("strong",[s._v("将不同业务类型的数据拆分到不同的主题中管理, 通过主题实现存储的隔离性和订阅隔离性")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("定义数据的身份和权限:")]),s._v("  RocketMQ 的消息本身是"),t("strong",[s._v("匿名无身份")]),s._v("的, 同一分类的消息使用相同的主题来做身份识别和权限管理.")])]),s._v(" "),t("p",[s._v("在整个 RocketMQ 的领域模型中, 主题所处的流程和位置如下:")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240825152228-7xzqjfp.png",alt:"image"}}),s._v("​")]),s._v(" "),t("p",[s._v("主题是 RocketMQ 的顶层存储, 所有"),t("strong",[s._v("消息资源的定义都在主题内部完成")]),s._v(", 但主题是一个逻辑概念, 并不是实际的消息容器.")]),s._v(" "),t("p",[t("strong",[s._v("主题内部由多个队列组成, 消息的存储和水平扩展能力最终是由队列实现的; 并且针对主题的所有约束和属性设置, 最终也是通过主题内部的队列来实现")]),s._v(".")]),s._v(" "),t("h5",{attrs:{id:"内部属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内部属性"}},[s._v("#")]),s._v(" 内部属性")]),s._v(" "),t("blockquote",[t("p",[s._v("主题名称")])]),s._v(" "),t("p",[s._v("定义: 主题的名称, 用于标识主题, 主题名称集群内全局唯一.")]),s._v(" "),t("p",[s._v("取值: 由用户创建主题时定义.")]),s._v(" "),t("blockquote",[t("p",[s._v("队列列表")])]),s._v(" "),t("p",[s._v("定义: 队列作为主题的组成单元, "),t("strong",[s._v("是消息存储的实际容器, 一个主题内包含一个或多个队列, 消息实际存储在主题的各队列内")]),s._v(".")]),s._v(" "),t("p",[s._v("取值: 系统根据队列数量给主题分配队列, 队列数量创建主题时定义.")]),s._v(" "),t("p",[s._v("约束: 一个主题内至少包含一个队列.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息类型")])]),s._v(" "),t("p",[s._v("定义: 主题所支持的消息类型.")]),s._v(" "),t("p",[s._v("取值: 创建主题时选择"),t("strong",[s._v("消息类型")]),s._v(". RocketMQ 支持的主题类型如下:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("Normal")]),s._v(": 普通消息(参考: 普通消息), 消息本身无特殊语义, 消息之间也"),t("strong",[s._v("没有任何关联")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("FIFO")]),s._v(": 顺序消息(参考: 顺序消息), RocketMQ 通过消"),t("strong",[s._v("息分组 MessageGroup 标记一组特定消息的先后顺序, 可以保证消息的投递顺序严格按照消息发送时的顺序")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("Delay")]),s._v(": 定时/延时消息(参考: 定时延时消息), 通过指定延时时间控制消息生产后不要立即投递, 而是在延时间隔后才对消费者可见.")]),s._v(" "),t("li",[t("strong",[s._v("Transaction")]),s._v(": 事务消息(参考: 事务消息), RocketMQ 支持分布式事务消息, 支持应用数据库更新和消息调用的事务一致性保障.")])]),s._v(" "),t("p",[s._v("约束: RocketMQ 从 5.0 版本开始, 支持强制校验消息类型, 即"),t("strong",[s._v("每个主题只允许发送一种消息类型的消息")]),s._v(", 这样可以更好的运维和管理生产系统, 避免混乱. 强制校验功能默认开启.")]),s._v(" "),t("h5",{attrs:{id:"行为约束"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#行为约束"}},[s._v("#")]),s._v(" 行为约束")]),s._v(" "),t("blockquote",[t("p",[s._v("消息类型强制校验")])]),s._v(" "),t("p",[s._v("RocketMQ 5.x 版本支持将消息类型拆分到主题中进行独立运维和处理, 因此系统会对发送的消息类型和主题定的消息类型进行强制校验, 若校验不通过, 则消息发送请求会被拒绝, 并返回类型不匹配异常. 校验原则如下:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消息类型必须一致")]),s._v(": 发送的消息的类型, 必须和目标主题定义的消息类型一致.")]),s._v(" "),t("li",[t("strong",[s._v("主题类型必须单一")]),s._v(": 每个主题只支持一种消息类型, 不允许将多种类型的消息发送到同一个主题中.")])]),s._v(" "),t("blockquote",[t("p",[s._v("常见错误使用场景")])]),s._v(" "),t("ul",[t("li",[s._v("发送的消息类型不匹配例如, 创建主题时消息类型定义为顺序消息, 发送消息时发送事务消息到该主题中, 此时消息发送请求会被拒绝, 并返回类型不匹配异常.")]),s._v(" "),t("li",[s._v("单一消息主题混用例如, 创建主题时消息类型定义为普通消息, 发送消息时同时发送普通消息和顺序消息到该主题中, 则顺序消息的发送请求会被拒绝, 并返回类型不匹配异常.")])]),s._v(" "),t("h5",{attrs:{id:"使用示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用示例"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),t("p",[s._v("RocketMQ 5.0 版本下"),t("strong",[s._v("创建主题")]),s._v("操作, 推荐使用 mqadmin 工具, 需要注意的是, 对于消息类型需要通过属性参数添加. 示例如下:")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" mqadmin updateTopic "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("nameserver_address"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("topic_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("cluster_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" +message.type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("message_type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("其中 message_type 根据消息类型设置成 "),t("code",[s._v("Normal/FIFO/Delay/Transaction")]),s._v("​. 如果不设置, 默认为 Normal 类型.")]),s._v(" "),t("h5",{attrs:{id:"使用建议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用建议"}},[s._v("#")]),s._v(" 使用建议")]),s._v(" "),t("blockquote",[t("p",[s._v("按照业务分类合理拆分主题")])]),s._v(" "),t("p",[s._v("RocketMQ 的主题拆分设计应遵循大类统一原则, 即"),t("strong",[s._v("将相同业务域内同一功能属性的消息划分为同一主题")]),s._v(". 拆分主题时, 可以从以下角度考虑拆分粒度:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消息类型是否一致")]),s._v(": 不同类型的消息, 如顺序消息和普通消息需要使用不同的主题.")]),s._v(" "),t("li",[t("strong",[s._v("消息业务是否关联")]),s._v(": 如果业务没有直接关联, 比如, 淘宝交易消息和盒马物流消息没有业务交集, 需要使用不同的消息主题; 同样是淘宝交易消息, 女装类订单和男装类订单可以使用同一个订单. 当然, 如果业务量较大或其他子模块应用处理业务时需要进一步拆分订单类型, 您也可以将男装订单和女装订单的消息拆分到两个主题中.")]),s._v(" "),t("li",[t("strong",[s._v("消息量级是否一样")]),s._v(": 数量级不同或时效性不同的业务消息建议使用不同的主题, 例如某些业务消息量很小但是时效性要求很强, 如果跟某些万亿级消息量的业务使用同一个主题, 会增加消息的等待时长.")])]),s._v(" "),t("p",[t("strong",[s._v("正确拆分示例:")]),s._v("  线上商品购买场景下, 订单交易如订单创建, 支付, 取消等流程消息使用一个主题, 物流相关消息使用一个主题, 积分管理相关消息使用一个主题.")]),s._v(" "),t("p",[t("strong",[s._v("错误拆分示例")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("拆分粒度过粗: 会导致业务隔离性差, 不利于独立运维和故障处理. 例如, 所有交易消息和物流消息都共用一个主题.")]),s._v(" "),t("li",[s._v("拆分粒度过细: 会消耗大量主题资源, 造成系统负载过重. 例如, 按照用户 ID 区分, 每个用户 ID 使用一个主题.")])]),s._v(" "),t("blockquote",[t("p",[s._v("单一主题只收发一种类型消息, 避免混用")])]),s._v(" "),t("p",[s._v("RocketMQ 主题的设计原则为"),t("mark",[t("strong",[s._v("通过主题隔离业务, 不同业务逻辑的消息建议使用不同的主题")])]),s._v(". 同一业务逻辑消息的类型都相同, 因此, 对于指定主题, 应该只收发同一种类型的消息.")]),s._v(" "),t("h4",{attrs:{id:"队列-messagequeue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#队列-messagequeue"}},[s._v("#")]),s._v(" 队列(MessageQueue)")]),s._v(" "),t("h5",{attrs:{id:"定义与模型关系-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义与模型关系-2"}},[s._v("#")]),s._v(" 定义与模型关系")]),s._v(" "),t("p",[s._v("队列是 RocketMQ 中"),t("strong",[s._v("消息存储和传输的实际容器")]),s._v(", 也是 RocketMQ 消息的最小存储单元. RocketMQ 的"),t("strong",[s._v("所有主题都是由多个队列组成, 以此实现队列数量的水平拆分和队列内部的流式存储")]),s._v(".")]),s._v(" "),t("p",[s._v("队列的主要作用如下:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("存储顺序性")]),s._v(": 队列天然具备顺序性, 即"),t("strong",[s._v("消息按照进入队列的顺序写入存储, 同一队列间的消息天然存在顺序关系, 队列头部为最早写入的消息, 队列尾部为最新写入的消息")]),s._v(". 消息在队列中的位置和消息之间的顺序通过位点("),t("strong",[s._v("Offset")]),s._v(")进行标记管理.")]),s._v(" "),t("li",[t("strong",[s._v("流式操作语义")]),s._v(": RocketMQ 基于队列的存储模型可确保消息"),t("strong",[s._v("从任意位点读取任意数量的消息")]),s._v(", 以此实现类似聚合读取, 回溯读取等特性, 这些特性是 RabbitMQ, ActiveMQ 等非队列存储模型不具备的.")])]),s._v(" "),t("p",[s._v("在整个 RocketMQ 的领域模型中, 队列所处的流程和位置如下:")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240825152228-7xzqjfp.png",alt:"image"}}),s._v("​")]),s._v(" "),t("p",[s._v("RocketMQ 默认提供消息可靠存储机制, "),t("strong",[s._v("所有发送成功的消息都被持久化存储到队列中, 配合生产者和消费者客户端的调用可实现至少投递一次的可靠性语义")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("RocketMQ 确保所有消息至少传递一次, 因为还可以重置消费位点进行重复消费")]),s._v(". 在大多数情况下, 消息不会重复.")]),s._v(" "),t("p",[t("strong",[s._v("RocketMQ 队列模型和 Kafka 的分区(Partition)模型类似")]),s._v(". 在 RocketMQ 消息收发模型中, 队列属于主题的一部分, 虽然所有的消息资源以主题粒度管理, 但实际的操作实现是面向队列. 例如, 生产者指定某个主题, 向主题内发送消息, 但实际消息发送到该主题下的某个队列中.")]),s._v(" "),t("p",[s._v("RocketMQ 中"),t("strong",[s._v("通过修改队列数量, 以此实现横向的水平扩容和缩容")]),s._v(".")]),s._v(" "),t("h5",{attrs:{id:"使用建议-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用建议-2"}},[s._v("#")]),s._v(" 使用建议")]),s._v(" "),t("p",[s._v("每个主题下会由一到多个队列来存储消息, 每个主题对应的队列数与消息类型以及实例所处地域(Region)相关.")]),s._v(" "),t("p",[s._v("在开发过程中, "),t("strong",[s._v("建议不要对队列名称做任何假设和绑定")]),s._v(". 如果在代码中自定义拼接队列名称并和其他操作进行绑定, 一旦服务端版本升级, 可能会出现队列名称无法解析的兼容性问题.")]),s._v(" "),t("blockquote",[t("p",[s._v("按照实际业务消耗设置队列数")])]),s._v(" "),t("p",[s._v("RocketMQ 的队列数可在创建主题或变更主题时设置修改, 队列数量的设置应"),t("strong",[s._v("遵循少用够用原则")]),s._v(", 避免随意增加队列数量.")]),s._v(" "),t("p",[s._v("主题内队列数过多可能对导致如下问题:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("集群元数据膨胀")]),s._v(": RocketMQ 会以队列粒度采集指标和监控数据, 队列过多容易造成管控元数据膨胀.")]),s._v(" "),t("li",[t("strong",[s._v("客户端压力过大")]),s._v(": RocketMQ 的消息读写都是针对队列进行操作, 队列过多对应更多的轮询请求, 增加系统负荷.")])]),s._v(" "),t("blockquote",[t("p",[s._v("常见需要队列增加的场景")])]),s._v(" "),t("p",[t("strong",[s._v("需要增加队列实现物理节点负载均衡")]),s._v(": RocketMQ 每个主题的"),t("strong",[s._v("多个队列可以分布在不同的服务节点上, 在集群水平扩容增加节点后, 为了保证集群流量的负载均衡")]),s._v(", 建议在新的服务节点上新增队列, 或将旧的队列迁移到新的服务节点上.")]),s._v(" "),t("h4",{attrs:{id:"消息-message"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消息-message"}},[s._v("#")]),s._v(" 消息(Message)")]),s._v(" "),t("h5",{attrs:{id:"定义与模型关系-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义与模型关系-3"}},[s._v("#")]),s._v(" 定义与模型关系")]),s._v(" "),t("p",[s._v("消息是 RocketMQ 中的"),t("strong",[s._v("最小数据传输单元")]),s._v(". 生产者将业务数据的负载和拓展属性包装成消息发送到 RocketMQ 服务端, 服务端按照相关语义将消息投递到消费端进行消费.")]),s._v(" "),t("p",[s._v("RocketMQ 的消息模型具备如下特点:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消息不可变性")]),s._v(": 消息本质上是已经产生并确定的事件, 一旦产生后, "),t("strong",[s._v("消息的内容不会发生改变")]),s._v(". 即使经过传输链路的控制也不会发生变化, 消费端获取的消息都是只读消息视图.")]),s._v(" "),t("li",[t("strong",[s._v("消息持久化")]),s._v(": RocketMQ 会默认"),t("strong",[s._v("对消息进行持久化")]),s._v(", 即"),t("strong",[s._v("将接收到的消息存储到 RocketMQ 服务端的存储文件中, 保证消息的可回溯性和系统故障场景下的可恢复性")]),s._v(".")])]),s._v(" "),t("p",[s._v("在整个 RocketMQ 的领域模型中, 消息所处的流程和位置如下:")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240825152228-7xzqjfp.png",alt:"image"}}),s._v("​")]),s._v(" "),t("ol",[t("li",[s._v("消息由生产者初始化并发送到 RocketMQ 服务端.")]),s._v(" "),t("li",[s._v("消息按照到达 RocketMQ 服务端的顺序存储到队列中.")]),s._v(" "),t("li",[s._v("消费者按照指定的订阅关系从 RocketMQ 服务端中获取消息并消费.")])]),s._v(" "),t("h5",{attrs:{id:"内部属性-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内部属性-2"}},[s._v("#")]),s._v(" 内部属性")]),s._v(" "),t("p",[s._v("下面是消息中包含的属性.")]),s._v(" "),t("blockquote",[t("p",[s._v("主题名称")])]),s._v(" "),t("p",[s._v("定义: 当前消息所属的主题的名称. 集群内全局唯一.")]),s._v(" "),t("p",[s._v("取值: 从客户端 SDK 接口获取.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息类型")])]),s._v(" "),t("p",[s._v("定义: 当前消息的类型.")]),s._v(" "),t("p",[s._v("取值: 从客户端 SDK 接口获取. RocketMQ 支持的消息类型如下: 普通消息, 顺序消息, 延时消息, 事务消息.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息队列")])]),s._v(" "),t("p",[s._v("定义: 实际存储当前消息的队列.")]),s._v(" "),t("p",[s._v("取值: 由服务端指定并填充.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息位点")])]),s._v(" "),t("p",[s._v("定义: 当前消息存储在队列中的位置.")]),s._v(" "),t("p",[s._v("取值: 由服务端指定并填充. 取值范围: 0~long.Max.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息ID")])]),s._v(" "),t("p",[s._v("定义: "),t("strong",[s._v("消息的唯一标识, 集群内每条消息的 ID 全局唯一")]),s._v(".")]),s._v(" "),t("p",[s._v("取值: 生产者客户端系统自动生成. 固定为数字和大写字母组成的 32 位字符串.")]),s._v(" "),t("blockquote",[t("p",[s._v("索引Key列表(可选)")])]),s._v(" "),t("p",[s._v("定义: 消息的索引键, 可通过设置不同的 Key 区分消息和快速查找消息.")]),s._v(" "),t("p",[s._v("取值: 由生产者客户端定义.")]),s._v(" "),t("blockquote",[t("p",[s._v("过滤标签Tag(可选)")])]),s._v(" "),t("p",[s._v("定义: 消息的过滤标签. 消费者可通过 Tag 对消息进行过滤, 仅接收指定标签的消息.")]),s._v(" "),t("p",[s._v("取值: 由生产者客户端定义.")]),s._v(" "),t("p",[s._v("约束: 一条消息仅支持设置一个标签.")]),s._v(" "),t("blockquote",[t("p",[s._v("定时时间(可选)")])]),s._v(" "),t("p",[s._v("定义: 定时场景下, 消息触发延时投递的毫秒级时间戳.")]),s._v(" "),t("p",[s._v("取值: 由消息生产者定义.")]),s._v(" "),t("p",[s._v("约束: 最大可设置定时时长为 40 天.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息发送时间")])]),s._v(" "),t("p",[s._v("定义: 消息发送时, 生产者客户端系统的本地毫秒级时间戳.")]),s._v(" "),t("p",[s._v("取值: 由生产者客户端系统填充.")]),s._v(" "),t("p",[s._v("说明: 客户端系统时钟和服务端系统时钟可能存在偏差, 消息发送时间是以客户端系统时钟为准.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息保存时间戳")])]),s._v(" "),t("p",[s._v("定义: 消息在 RocketMQ 服务端完成存储时, 服务端系统的本地毫秒级时间戳. 对于定时消息和事务消息, 消息保存时间指的是消息生效对消费方可见的服务端系统时间.")]),s._v(" "),t("p",[s._v("取值: 由服务端系统填充.")]),s._v(" "),t("p",[s._v("说明: 客户端系统时钟和服务端系统时钟可能存在偏差, 消息保留时间是以服务端系统时钟为准.")]),s._v(" "),t("blockquote",[t("p",[s._v("消费重试次数")])]),s._v(" "),t("p",[s._v("定义: 消息消费失败后, RocketMQ 服务端重新投递的次数. 每次重试后, 重试次数加 1.")]),s._v(" "),t("p",[s._v("取值: 由服务端系统标记. 首次消费, 重试次数为 0; 消费失败首次重试时, 重试次数为 1.")]),s._v(" "),t("blockquote",[t("p",[s._v("业务自定义属性")])]),s._v(" "),t("p",[s._v("定义: 生产者可以自定义设置的扩展信息.")]),s._v(" "),t("p",[s._v("取值: 由消息生产者自定义, 按照字符串键值对设置.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息负载")])]),s._v(" "),t("p",[s._v("定义: "),t("strong",[s._v("业务消息的实际报文数据")]),s._v(".")]),s._v(" "),t("p",[s._v("取值: 由生产者负责序列化编码, 按照二进制字节传输.")]),s._v(" "),t("h5",{attrs:{id:"使用建议-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用建议-3"}},[s._v("#")]),s._v(" 使用建议")]),s._v(" "),t("blockquote",[t("p",[s._v("单条消息不建议传输超大负载")])]),s._v(" "),t("p",[s._v("作为一款消息中间件产品, RocketMQ 一般传输的是都是"),t("strong",[s._v("业务事件数据")]),s._v(". 单个原子消息事件的数据大小需要严格控制, 如果单条消息过大容易造成网络传输层压力, 不利于异常重试和流量控制.")]),s._v(" "),t("p",[s._v("生产环境中如果需要传输超大负载, 建议按照"),t("strong",[s._v("固定大小做报文拆分, 或者结合文件存储")]),s._v("等方法进行传输.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息中转时做好不可变设计")])]),s._v(" "),t("p",[s._v("RocketMQ 服务端 5.x 版本中, 消息本身不可编辑, 消费端获取的消息都是"),t("strong",[s._v("只读消息视图")]),s._v(". 但在历史版本 3.x 和 4.x 版本中消息不可变性没有强约束, 因此如果需要在使用过程中对消息进行中转操作, 务必将消息重新初始化.")]),s._v(" "),t("p",[s._v("正确使用示例如下:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" m "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Consumer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("receive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" m2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("buildFrom")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Producer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("m2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("错误使用示例如下:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" m "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Consumer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("receive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("update")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Producer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"生产者-producer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生产者-producer"}},[s._v("#")]),s._v(" 生产者(Producer)")]),s._v(" "),t("h5",{attrs:{id:"定义与模型关系-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义与模型关系-4"}},[s._v("#")]),s._v(" 定义与模型关系")]),s._v(" "),t("p",[s._v("生产者是 RocketMQ 系统中用来"),t("strong",[s._v("构建并传输消息到服务端的运行实体")]),s._v(". 生产者通常被集成在业务系统中, 将"),t("strong",[s._v("业务消息按照要求封装成消息(Message)并发送至服务端")]),s._v(".")]),s._v(" "),t("p",[s._v("在消息生产者中, 可以定义如下传输行为:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("发送方式")]),s._v(": 生产者可通过 API 接口设置消息发送的方式. RocketMQ 支持"),t("strong",[s._v("同步传输和异步传输")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("批量发送")]),s._v(": 生产者可通过 API 接口设置消息批量传输的方式. 例如, 批量发送的消息条数或消息大小.")]),s._v(" "),t("li",[t("strong",[s._v("事务行为")]),s._v(": RocketMQ 支持事务消息, 对于事务消息需要生产者配合进行事务检查等行为保障事务的最终一致性.")])]),s._v(" "),t("p",[t("strong",[s._v("生产者和主题的关系为多对多关系")]),s._v(", 即同一个生产者可以向多个主题发送消息, 对于平台类场景如果需要发送消息到多个主题, 并不需要创建多个生产者; 同一个主题也可以接收多个生产者的消息, 以此可以实现生产者性能的水平扩展和容灾.")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/image-20240825201852-r6gjbvl.png",alt:"image"}})]),s._v(" "),t("p",[s._v("在 RocketMQ 的领域模型中, 生产者的位置和流程如下:")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240825152228-7xzqjfp.png",alt:"image"}}),s._v("​")]),s._v(" "),t("ol",[t("li",[s._v("消息由生产者初始化并发送到 RocketMQ 服务端.")]),s._v(" "),t("li",[s._v("消息按照到达 RocketMQ 服务端的顺序存储到主题的指定队列中.")]),s._v(" "),t("li",[s._v("消费者按照指定的订阅关系从 RocketMQ 服务端中获取消息并消费.")])]),s._v(" "),t("h5",{attrs:{id:"内部属性-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内部属性-3"}},[s._v("#")]),s._v(" 内部属性")]),s._v(" "),t("p",[s._v("下面是生产者包含的内部属性信息.")]),s._v(" "),t("blockquote",[t("p",[s._v("客户端ID")])]),s._v(" "),t("p",[s._v("定义: 生产者客户端的标识, 用于区分不同的生产者. 集群内全局唯一.")]),s._v(" "),t("p",[s._v("取值: 客户端 ID 由 RocketMQ 的 SDK 自动生成, 主要用于日志查看, 问题定位等运维场景, 不支持修改.")]),s._v(" "),t("blockquote",[t("p",[s._v("通信参数")])]),s._v(" "),t("p",[t("strong",[s._v("接入点信息(必选)")]),s._v(" : 连接服务端的接入地址, 用于识别服务端集群. 接入点必须按格式配置, 建议使用域名, 避免使用 IP 地址, 防止节点变更无法进行热点迁移.")]),s._v(" "),t("p",[t("strong",[s._v("身份认证信息(可选)")]),s._v(" : 客户端用于身份验证的凭证信息.  仅在服务端开启身份识别和认证时需要传输.")]),s._v(" "),t("p",[t("strong",[s._v("请求超时时间(可选)")]),s._v(" : 客户端网络请求调用的超时时间.")]),s._v(" "),t("blockquote",[t("p",[s._v("预绑定主题列表")])]),s._v(" "),t("p",[s._v("定义: RocketMQ 的生产者需要将消息发送到的目标主题列表, 主要作用如下:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("事务消息(必须设置)")]),s._v(" : 事务消息场景下, 生产者在故障, 重启恢复时, 需要检查事务消息的主题中是否有未提交的事务消息. 避免生产者发送新消息后, 主题中的旧事务消息一直处于未提交状态, 造成业务延迟.")]),s._v(" "),t("li",[t("strong",[s._v("非事务消息(建议设置)")]),s._v(" : 服务端会在生产者初始化时根据预绑定主题列表, 检查目标主题的访问权限和合法性, 而不需要等到应用启动后再检查. 若未设置, 或后续消息发送的目标主题动态变更, RocketMQ 会对目标主题进行动态补充检验.")])]),s._v(" "),t("p",[s._v("约束: 对于事务消息, 预绑定列表必须设置, 且需要和事务检查器一起配合使用.")]),s._v(" "),t("blockquote",[t("p",[s._v("事务检查器")])]),s._v(" "),t("p",[s._v("定义: RocketMQ 的事务消息机制中, 为保证异常场景下事务的最终一致性, 生产者需要主动实现事务检查器的接口.")]),s._v(" "),t("p",[s._v("发送事务消息时, 事务检查器必须设置, 且需要和预绑定主题列表一起配合使用.")]),s._v(" "),t("blockquote",[t("p",[s._v("发送重试策略")])]),s._v(" "),t("p",[s._v("定义: 生产者在消息发送失败时的重试策略.")]),s._v(" "),t("h5",{attrs:{id:"使用建议-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用建议-4"}},[s._v("#")]),s._v(" 使用建议")]),s._v(" "),t("blockquote",[t("p",[s._v("不建议单一进程创建大量生产者")])]),s._v(" "),t("p",[s._v("RocketMQ 的生产者和主题是多对多的关系, 支持同一个生产者向多个主题发送消息. 对于生产者的创建和初始化, 建议遵循够用即可, 最大化复用原则, 如果有需要发送消息到多个主题的场景, 无需为每个主题都创建一个生产者.")]),s._v(" "),t("blockquote",[t("p",[s._v("不建议频繁创建和销毁生产者")])]),s._v(" "),t("p",[s._v("RocketMQ 的生产者是可以"),t("strong",[s._v("重复利用的底层资源")]),s._v(", 类似数据库的连接池. 因此不需要在每次发送消息时动态创建生产者, 且在发送结束后销毁生产者. 这样频繁的创建销毁会在服务端产生大量短连接请求, 严重影响系统性能.")]),s._v(" "),t("p",[s._v("正确示例:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Producer")]),s._v(" p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ProducerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" m "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\np"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("典型错误示例:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Producer")]),s._v(" p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ProducerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" m "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h4",{attrs:{id:"消费者分组-consumergroup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消费者分组-consumergroup"}},[s._v("#")]),s._v(" 消费者分组(ConsumerGroup)")]),s._v(" "),t("h5",{attrs:{id:"定义与模型关系-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义与模型关系-5"}},[s._v("#")]),s._v(" 定义与模型关系")]),s._v(" "),t("p",[t("strong",[s._v("消费者分组是 RocketMQ 系统中承载多个消费行为一致的消费者的负载均衡分组")]),s._v(".")]),s._v(" "),t("p",[s._v("和消费者不同, 消费者分组并不是运行实体, 而是一个逻辑资源. 在 RocketMQ 中, "),t("strong",[s._v("通过消费者分组内初始化多个消费者实现消费性能的水平扩展以及高可用容灾")]),s._v(".")]),s._v(" "),t("p",[s._v("在消费者分组中, 统一定义以下"),t("strong",[s._v("消费行为")]),s._v(", 同一分组下的多个消费者将按照分组内统一的消费行为和负载均衡策略消费消息.")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("订阅关系")]),s._v(": RocketMQ 以消费者分组的粒度管理订阅关系, 实现订阅关系的管理和追溯. 具体信息参考: 订阅关系(Subscription).")]),s._v(" "),t("li",[t("strong",[s._v("投递顺序性")]),s._v(": RocketMQ 的服务端将消息投递给消费者消费时, 支持顺序投递和并发投递, 投递方式在消费者分组中统一配置.")]),s._v(" "),t("li",[t("strong",[s._v("消费重试策略")]),s._v(": 消费者消费消息失败时的重试策略, 包括重试次数, 死信队列设置等. 具体信息参考: 消费重试.")])]),s._v(" "),t("p",[s._v("在 RocketMQ 的领域模型中, "),t("strong",[s._v("消费者分组的位置和流程")]),s._v("如下:")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240825152228-7xzqjfp.png",alt:"image"}}),s._v("​")]),s._v(" "),t("ol",[t("li",[s._v("消息由生产者初始化并发送到 RocketMQ 服务端.")]),s._v(" "),t("li",[s._v("消息按照到达 RocketMQ 服务端的顺序存储到主题的指定队列中.")]),s._v(" "),t("li",[s._v("消费者按照指定的订阅关系从 RocketMQ 服务端中获取消息并消费.")])]),s._v(" "),t("h5",{attrs:{id:"内部属性-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内部属性-4"}},[s._v("#")]),s._v(" 内部属性")]),s._v(" "),t("p",[s._v("消费者分组可能包含的属性如下.")]),s._v(" "),t("blockquote",[t("p",[s._v("消费者分组名称")])]),s._v(" "),t("p",[s._v("定义: 消费者分组的名称, 用于区分不同的消费者分组. 集群内全局唯一.")]),s._v(" "),t("p",[s._v("取值: 消费者分组由用户设置并创建.")]),s._v(" "),t("blockquote",[t("p",[s._v("投递顺序性")])]),s._v(" "),t("p",[s._v("定义: 消费者消费消息时, RocketMQ 向消费者客户端投递消息的顺序. 根据不同的消费场景, RocketMQ 提供"),t("strong",[s._v("顺序投递和并发投递")]),s._v("两种方式.")]),s._v(" "),t("p",[s._v("取值: 默认投递方式为并发投递.")]),s._v(" "),t("blockquote",[t("p",[s._v("消费重试策略")])]),s._v(" "),t("p",[s._v("定义: 消费者消费消息失败时, 系统的重试策略. 消费者消费消息失败时, 系统会按照重试策略, 将指定消息投递给消费者重新消费.")]),s._v(" "),t("p",[s._v("取值: 重试策略包括:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("最大重试次数")]),s._v(": 表示消息可以重新被投递的最大次数, 超过最大重试次数还没被成功消费, 消息将被投递至死信队列或丢弃.")]),s._v(" "),t("li",[t("strong",[s._v("重试间隔")]),s._v(": RocketMQ 服务端重新投递消息的间隔时间.")])]),s._v(" "),t("p",[s._v("约束: 重试间隔仅在 PushConsumer 消费类型下有效.")]),s._v(" "),t("blockquote",[t("p",[s._v("订阅关系")])]),s._v(" "),t("p",[s._v("定义: 当前消费者分组关联的订阅关系集合. 包括消费者订阅的主题, 以及消息的过滤规则等. 订阅关系由消费者动态注册到消费者分组中, RocketMQ 服务端会持久化订阅关系并匹配消息的消费进度.")]),s._v(" "),t("h5",{attrs:{id:"使用建议-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用建议-5"}},[s._v("#")]),s._v(" 使用建议")]),s._v(" "),t("blockquote",[t("p",[s._v("按照业务合理拆分分组")])]),s._v(" "),t("p",[s._v("RocketMQ 的消费者和主题是多对多的关系, 对于消费者分组的拆分设计, 建议遵循以下原则:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消费者的投递顺序一致")]),s._v(": 同一消费者分组下所有消费者的消费投递顺序是相同的, 统一都是顺序投递或并发投递, 不同业务场景不能混用消费者分组.")]),s._v(" "),t("li",[t("strong",[s._v("消费者业务类型一致")]),s._v(": 一般消费者分组和主题对应, 不同业务域对消息消费的要求不同, 例如消息过滤属性, 消费重试策略不同. 因此, 不同业务域主题的消费建议使用不同的消费者分组, 避免一个消费者分组消费超过10个主题.")])]),s._v(" "),t("h4",{attrs:{id:"消费者-consumer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消费者-consumer"}},[s._v("#")]),s._v(" 消费者(Consumer)")]),s._v(" "),t("h5",{attrs:{id:"定义与模型关系-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义与模型关系-6"}},[s._v("#")]),s._v(" 定义与模型关系")]),s._v(" "),t("p",[t("strong",[s._v("消费者是 RocketMQ 中用来接收并处理消息的运行实体")]),s._v(". 消费者通常被集成在业务系统中, 从 RocketMQ 服务端获取消息, 并将消息转化成业务可理解的信息, 供业务逻辑处理.")]),s._v(" "),t("p",[s._v("在消息消费端, 可以定义如下"),t("strong",[s._v("传输行为")]),s._v(":")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消费者身份")]),s._v(": 消费者必须关联一个指定的消费者分组, 以获取分组内统一定义的行为配置和消费状态.")]),s._v(" "),t("li",[t("strong",[s._v("消费者类型")]),s._v(": RocketMQ 面向不同的开发场景提供了多样的消费者类型, 包括 PushConsumer 类型, SimpleConsumer 类型, PullConsumer 类型(仅推荐流处理场景使用)等.")]),s._v(" "),t("li",[t("strong",[s._v("消费者本地运行配置")]),s._v(": 消费者根据不同的消费者类型, 控制消费者客户端本地的运行配置. 例如消费者客户端的线程数, 消费并发度等, 实现不同的传输效果.")])]),s._v(" "),t("p",[s._v("在 RocketMQ 的领域模型中, 消费者的位置和流程如下:")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240825152228-7xzqjfp.png",alt:"image"}}),s._v("​")]),s._v(" "),t("ol",[t("li",[s._v("消息由生产者初始化并发送到 RocketMQ 服务端.")]),s._v(" "),t("li",[s._v("消息按照到达 RocketMQ 服务端的顺序存储到主题的指定队列中.")]),s._v(" "),t("li",[s._v("消费者按照指定的订阅关系从 RocketMQ 服务端中获取消息并消费.")])]),s._v(" "),t("h5",{attrs:{id:"内部属性-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内部属性-5"}},[s._v("#")]),s._v(" 内部属性")]),s._v(" "),t("p",[s._v("下面是消费者可能包含的属性信息.")]),s._v(" "),t("blockquote",[t("p",[s._v("消费者分组名称")])]),s._v(" "),t("p",[s._v("定义: 当前消费者关联的消费者分组名称, 消费者必须关联到指定的消费者分组, 通过消费者分组获取消费行为. 更多信息.")]),s._v(" "),t("p",[s._v("取值: 消费者分组为 RocketMQ 的逻辑资源, 需要提前通过控制台或 OpenAPI 创建.")]),s._v(" "),t("blockquote",[t("p",[s._v("客户端ID")])]),s._v(" "),t("p",[s._v("定义: 消费者客户端的标识, 用于区分不同的消费者. 集群内全局唯一.")]),s._v(" "),t("p",[s._v("取值: 客户端 ID 由 RocketMQ 的 SDK 自动生成, 主要用于日志查看, 问题定位等运维场景, 不支持修改.")]),s._v(" "),t("blockquote",[t("p",[s._v("通信参数")])]),s._v(" "),t("p",[t("strong",[s._v("接入点信息(必选)")]),s._v(" : 连接服务端的接入地址, 用于识别服务端集群. 接入点必须按格式配置, 建议使用域名, 避免使用IP地址, 防止节点变更无法进行热点迁移.")]),s._v(" "),t("p",[t("strong",[s._v("身份认证信息(可选)")]),s._v(" : 客户端用于身份验证的凭证信息. 仅在服务端开启身份识别和认证时需要传输.")]),s._v(" "),t("p",[t("strong",[s._v("请求超时时间(可选)")]),s._v(" : 客户端网络请求调用的超时时间.")]),s._v(" "),t("blockquote",[t("p",[s._v("预绑定订阅关系列表")])]),s._v(" "),t("p",[s._v("定义: 指定消费者的订阅关系列表. RocketMQ 服务端可在消费者初始化阶段, 根据预绑定的订阅关系列表对目标主题进行权限及合法性校验, 无需等到应用启动后才能校验.")]),s._v(" "),t("p",[s._v("取值: "),t("strong",[s._v("建议在消费者初始化阶段明确订阅关系即要订阅的主题列表")]),s._v(", 若未设置, 或订阅的主题动态变更, RocketMQ 会对目标主题进行动态补充校验.")]),s._v(" "),t("blockquote",[t("p",[s._v("消费监听器")])]),s._v(" "),t("p",[s._v("定义: RocketMQ 服务端将消息推送给消费者后, 消费者调用消息消费逻辑的监听器.")]),s._v(" "),t("p",[s._v("取值: 由消费者客户端本地配置.")]),s._v(" "),t("p",[s._v("约束: 使用 PushConsumer 类型的消费者消费消息时, 消费者客户端必须设置消费监听器.")]),s._v(" "),t("h5",{attrs:{id:"行为约束-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#行为约束-2"}},[s._v("#")]),s._v(" 行为约束")]),s._v(" "),t("p",[s._v("在 RocketMQ 领域模型中, 消费者的管理通过消费者分组实现, 同一分组内的消费者共同分摊消息进行消费. 因此, 为了保证分组内消息的正常负载和消费.")]),s._v(" "),t("p",[s._v("RocketMQ 要求"),t("strong",[s._v("同一分组下的所有消费者")]),s._v("以下消费行为保持一致:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("投递顺序")])]),s._v(" "),t("li",[t("strong",[s._v("消费重试策略")])])]),s._v(" "),t("h5",{attrs:{id:"使用建议-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用建议-6"}},[s._v("#")]),s._v(" 使用建议")]),s._v(" "),t("blockquote",[t("p",[s._v("不建议在单一进程内创建大量消费者")])]),s._v(" "),t("p",[s._v("RocketMQ 的消费者在通信协议层面支持非阻塞传输模式, 网络通信效率较高, 并且支持多线程并发访问. 因此, "),t("strong",[s._v("大部分场景下, 单一进程内同一个消费分组只需要初始化唯一的一个消费者即可")]),s._v(", 开发过程中应避免以相同的配置初始化多个消费者.")]),s._v(" "),t("blockquote",[t("p",[s._v("不建议频繁创建和销毁消费者")])]),s._v(" "),t("p",[s._v("RocketMQ 的消费者是可以"),t("strong",[s._v("重复利用的底层资源, 类似数据库的连接池")]),s._v(". 因此不需要在每次接收消息时动态创建消费者, 且在消费完成后销毁消费者. 这样频繁地创建销毁会在服务端产生大量短连接请求, 严重影响系统性能.")]),s._v(" "),t("p",[s._v("正确示例:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Consumer")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" m"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("receive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// process message")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("典型错误示例:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Consumer")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" m "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("receive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//process message")]),s._v("\n    c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h4",{attrs:{id:"订阅关系-subscription"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#订阅关系-subscription"}},[s._v("#")]),s._v(" 订阅关系(Subscription)")]),s._v(" "),t("h5",{attrs:{id:"定义与模型关系-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义与模型关系-7"}},[s._v("#")]),s._v(" 定义与模型关系")]),s._v(" "),t("p",[s._v("订阅关系是 RocketMQ 系统中"),t("strong",[s._v("消费者获取消息, 处理消息的规则和状态配置")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("订阅关系由消费者分组动态注册到服务端系统, 并在后续的消息传输中按照订阅关系定义的过滤规则进行消息匹配和消费进度维护")]),s._v(".")]),s._v(" "),t("p",[s._v("通过配置订阅关系, 可控制如下传输行为:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消息过滤规则")]),s._v(": 用于控制消费者在消费消息时, 选择主题内的哪些消息进行消费, 设置消费过滤规则可以高效地过滤消费者需要的消息集合, 灵活根据不同的业务场景设置不同的消息接收范围. 具体信息参考: 消息过滤.")]),s._v(" "),t("li",[t("strong",[s._v("消费状态")]),s._v(": RocketMQ 服务端默认提供订阅关系持久化的能力, 即消费者分组在服务端注册订阅关系后, 当消费者离线并再次上线后, 可以获取离线前的消费进度并继续消费.")])]),s._v(" "),t("p",[s._v("在 RocketMQ 的领域模型中, 订阅关系的位置和流程如下:")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240825152228-7xzqjfp.png",alt:"image"}}),s._v("​")]),s._v(" "),t("ol",[t("li",[s._v("消息由生产者初始化并发送到 RocketMQ 服务端.")]),s._v(" "),t("li",[s._v("消息按照到达 RocketMQ 服务端的顺序存储到主题的指定队列中.")]),s._v(" "),t("li",[t("strong",[s._v("消费者按照指定的订阅关系从 RocketMQ 服务端中获取消息并消费")]),s._v(".")])]),s._v(" "),t("h5",{attrs:{id:"订阅关系判断原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#订阅关系判断原则"}},[s._v("#")]),s._v(" 订阅关系判断原则")]),s._v(" "),t("p",[s._v("RocketMQ 的订阅关系按照消费者分组和主题粒度设计, 因此, "),t("strong",[s._v("一个订阅关系指的是指定某个消费者分组对于某个主题的订阅")]),s._v(", 判断原则如下:")]),s._v(" "),t("p",[s._v("(1) "),t("strong",[s._v("不同消费者分组对于同一个主题的订阅相互独立")]),s._v(". 如下图所示, 消费者分组 Group A 和消费者分组 Group B 分别以不同的订阅关系订阅了同一个主题 Topic A, 这两个订阅关系"),t("strong",[s._v("互相独立, 可以各自定义, 不受影响")]),s._v(".")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/image-20240825202448-jivhi4j.png",alt:"image"}})]),s._v(" "),t("p",[s._v("(2) "),t("strong",[s._v("同一个消费者分组对于不同主题的订阅也相互独立")]),s._v(". 如下图所示, 消费者分组 Group A 订阅了两个主题 Topic A 和 Topic B, 对于 Group A 中的消费者来说, 订阅的 Topic A 为一个订阅关系, 订阅的 Topic B 为另外一个订阅关系, 且这"),t("strong",[s._v("两个订阅关系互相独立, 可以各自定义, 不受影响")]),s._v(".")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240825203052-x4izu2m.png",alt:"image"}}),s._v("​")]),s._v(" "),t("h5",{attrs:{id:"内部属性-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内部属性-6"}},[s._v("#")]),s._v(" 内部属性")]),s._v(" "),t("blockquote",[t("p",[s._v("过滤类型")])]),s._v(" "),t("p",[s._v("定义: 消息过滤规则的类型. "),t("strong",[s._v("订阅关系中设置消息过滤规则后, 系统将按照过滤规则匹配主题中的消息, 只将符合条件的消息投递给消费者消费, 实现消息的再次分类")]),s._v(".")]),s._v(" "),t("p",[s._v("取值:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("TAG 过滤")]),s._v(": 按照 Tag 字符串进行全文过滤匹配.")]),s._v(" "),t("li",[s._v("SQL92 过滤: 按照 SQL 语法对消息属性进行过滤匹配.")])]),s._v(" "),t("blockquote",[t("p",[s._v("过滤表达式")])]),s._v(" "),t("p",[s._v("定义: 自定义的过滤规则表达式.")]),s._v(" "),t("h5",{attrs:{id:"行为约束-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#行为约束-3"}},[s._v("#")]),s._v(" 行为约束")]),s._v(" "),t("blockquote",[t("p",[s._v("订阅关系一致")])]),s._v(" "),t("p",[s._v("RocketMQ 是按照消费者分组粒度管理订阅关系, 因此, "),t("strong",[s._v("同一消费者分组内的消费者在消费逻辑上必须保持一致")]),s._v(", 否则会出现消费冲突, 导致部分消息消费异常.")]),s._v(" "),t("p",[s._v("正确示例")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Consumer c1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Consumer")]),s._v(" c1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("groupA"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nc1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topicA"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TagA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Consumer c2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Consumer")]),s._v(" c2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("groupA"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nc2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topicA"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TagA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("错误示例")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Consumer c1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Consumer")]),s._v(" c1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("groupA"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nc1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topicA"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TagA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Consumer c2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Consumer")]),s._v(" c2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("groupA"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nc2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topicA"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TagB"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h5",{attrs:{id:"使用建议-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用建议-7"}},[s._v("#")]),s._v(" 使用建议")]),s._v(" "),t("blockquote",[t("p",[s._v("建议不要频繁修改订阅关系")])]),s._v(" "),t("p",[s._v("在 RocketMQ 领域模型中, "),t("strong",[s._v("订阅关系关联了过滤规则, 消费进度等元数据和相关配置, 同时系统需要保证消费者分组下的所有消费者的消费行为, 消费逻辑, 负载策略等一致, 整体运算逻辑比较复杂")]),s._v(". 因此, 不建议在生产环境中通过频繁修改订阅关系来实现业务逻辑的变更, 这样可能会导致客户端一直处于负载均衡调整和变更的过程, 从而影响消息接收.")]),s._v(" "),t("h5",{attrs:{id:"订阅关系一致"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#订阅关系一致"}},[s._v("#")]),s._v(" 订阅关系一致")]),s._v(" "),t("p",[t("strong",[s._v("订阅关系一致是指, 同一个消费者组下所有消费者实例所订阅的 Topic, Tag 必须完全一致")]),s._v(". 如果订阅关系(消费者分组名-Topic-Tag)不一致, "),t("strong",[s._v("会导致消费消息紊乱, 甚至消息丢失")]),s._v(".")]),s._v(" "),t("h6",{attrs:{id:"_1-正确订阅关系示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-正确订阅关系示例"}},[s._v("#")]),s._v(" 1.正确订阅关系示例")]),s._v(" "),t("blockquote",[t("p",[s._v("订阅的Topic一样, 且过滤表达式一致")])]),s._v(" "),t("p",[s._v("如下图所示, 同一 ConsumerGroup 下的三个 Consumer 实例 C1, C2 和 C3 分别都订阅了 TopicA, 且订阅 TopicA 的 Tag 也都是 Tag1, 符合订阅关系一致原则.")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/image-20240825203437-8yxu1ur.png",alt:"image"}})]),s._v(" "),t("p",[s._v("正确示例代码: C1, C2, C3 的订阅关系一致, 即 C1, C2, C3 订阅消息的代码必须完全一致, 代码示例如下:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PushConsumer")]),s._v(" consumer1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" provider"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newPushConsumerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setConsumerGroup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GroupA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsumer1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TopicA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TagA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpressionType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PushConsumer")]),s._v(" consumer2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" provider"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newPushConsumerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setConsumerGroup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GroupA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsumer2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TopicA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TagA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpressionType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PushConsumer")]),s._v(" consumer3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" provider"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newPushConsumerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setConsumerGroup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GroupA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsumer3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TopicA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TagA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpressionType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("信息: RocketMQ 强调订阅关系一致, "),t("strong",[s._v("核心是指相同 ConsumerGroup 的每个 Consumer 之间一致, 因为在服务端视角看来一个 Group 下的所有 Consumer 都应该是相同的副本逻辑")]),s._v(".")]),s._v(" "),t("p",[s._v("强调订阅关系一致, 并不是指一个 Consumer 不能订阅多个 Topic, 每个 Consumer 仍然可以按照需要订阅多个 Topic, 但前提是相同消费者分组下的 Consumer 要一致.")]),s._v(" "),t("h6",{attrs:{id:"_2-订阅关系不一致的排查"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-订阅关系不一致的排查"}},[s._v("#")]),s._v(" 2.订阅关系不一致的排查")]),s._v(" "),t("p",[t("strong",[s._v("问题描述")])]),s._v(" "),t("p",[s._v("在使用 RocketMQ 时, 可能会出现订阅关系不一致的情况, 具体的问题现象如下:")]),s._v(" "),t("ul",[t("li",[s._v("RocketMQ 控制台中订阅关系是否一致显示为否.")]),s._v(" "),t("li",[s._v("消费者(Consumer)实例未收到订阅的消息.")])]),s._v(" "),t("p",[t("strong",[s._v("请参考以下步骤进行检查")])]),s._v(" "),t("p",[t("strong",[s._v("可在消息 RocketMQ 的控制台或者 CLi 工具查看指定 Group 的订阅关系是否一致")]),s._v(". 若查询结果不一致, 请参见(常见订阅关系不一致问题)排查 Consumer 实例的消费代码.")]),s._v(" "),t("ol",[t("li",[s._v("检查 Consumer 实例中与订阅相关的配置代码, 确保配置同一个 ConsumerGroup 的所有 Consumer 实例均订阅相同的 Topic 及 Tag.")]),s._v(" "),t("li",[s._v("使用控制台或者 Cli 命令 ConsumerConnection 查看生效的订阅关系是否一致.")]),s._v(" "),t("li",[s._v("测试并确认消息能够被预期的 Consumer 实例所消费.")])]),s._v(" "),t("h6",{attrs:{id:"_3-常见订阅关系不一致问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-常见订阅关系不一致问题"}},[s._v("#")]),s._v(" 3.常见订阅关系不一致问题")]),s._v(" "),t("blockquote",[t("p",[s._v("同一ConsumerGroup下的Consumer实例订阅的Topic不同(3.x, 4.x SDK适用)")])]),s._v(" "),t("p",[s._v("在早期 3.x/4.x 版本的 SDK 中, 如下图所示, 同一 ConsumerGroup 下的三个 Consumer 实例 C1, C2 和 C3 分别订阅了 TopicA, TopicB 和 TopicC, 订阅的 Topic 不一致, 不符合订阅关系一致性原则.")]),s._v(" "),t("p",[s._v("备注: "),t("strong",[s._v("5.x 版本 SDK 已经支持同一个 ConsumerGroup 下的 Consumer 实例订阅不同的Topic")]),s._v(".")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/image-20240825203600-bkid0ye.png",alt:"image"}})]),s._v(" "),t("blockquote",[t("p",[s._v("同一ConsumerGroup下的Consumer实例订阅的Topic相同, 但订阅的Tag不一致")])]),s._v(" "),t("p",[s._v("如下图所示, 同一 ConsumerGroup 下的三个 Consumer 实例 C1, C2 和 C3 分别都订阅了 TopicA, 但是 C1 订阅 TopicA 的 Tag 为 "),t("strong",[s._v("Tag1")]),s._v(", C2 和 C3 订阅的 TopicA 的 Tag 为 "),t("strong",[s._v("Tag2")]),s._v(", 订阅同一 Topic 的 Tag 不一致, "),t("strong",[s._v("不符合订阅关系一致性原则")]),s._v(".")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/image-20240825203729-iduc7yn.png",alt:"image"}})]),s._v(" "),t("p",[s._v("**错误示例代码: **")]),s._v(" "),t("p",[s._v("Consumer 实例 2-1:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PushConsumer")]),s._v(" consumer1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" provider"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newPushConsumerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setConsumerGroup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GroupA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsumer1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TopicA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Tag1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpressionType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("Consumer 实例 2-2:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PushConsumer")]),s._v(" consumer2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" provider"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newPushConsumerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setConsumerGroup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GroupA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsumer2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TopicA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Tag2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpressionType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("Consumer 实例 2-3:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PushConsumer")]),s._v(" consumer3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" provider"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newPushConsumerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setConsumerGroup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GroupA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsumer3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TopicA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Tag2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpressionType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"功能特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#功能特性"}},[s._v("#")]),s._v(" 功能特性")]),s._v(" "),t("h4",{attrs:{id:"普通消息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#普通消息"}},[s._v("#")]),s._v(" 普通消息")]),s._v(" "),t("h5",{attrs:{id:"基础-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础-3"}},[s._v("#")]),s._v(" 基础")]),s._v(" "),t("blockquote",[t("p",[s._v("什么是普通消息")])]),s._v(" "),t("p",[s._v("普通消息是 RocketMQ 基本消息功能, 支持生产者和消费者的异步解耦通信. 普通消息是 RocketMQ 中最基础的消息, 区别于有特性的顺序消息, 定时/延时消息和事务消息.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息类型一致性")])]),s._v(" "),t("p",[s._v("普通消息仅支持使用 MessageType 为 Normal 主题, 即普通消息只能发送至类型为普通消息的主题中, 发送的消息的类型必须和主题的类型一致.")]),s._v(" "),t("h5",{attrs:{id:"功能原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#功能原理"}},[s._v("#")]),s._v(" 功能原理")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240825204003-idkl4at.png",alt:"image"}}),s._v("​")]),s._v(" "),t("blockquote",[t("p",[s._v("普通消息生命周期")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("初始化")]),s._v(": 消息被生产者构建并完成初始化, 待发送到服务端的状态.")]),s._v(" "),t("li",[t("strong",[s._v("待消费")]),s._v(": 消息被发送到服务端, "),t("strong",[s._v("对消费者可见, 等待消费者消费的状态")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("消费中")]),s._v(": 消息被消费者获取, 并按照消费者"),t("strong",[s._v("本地的业务逻辑")]),s._v("进行处理的过程. 此时服务端会等待消费者"),t("strong",[s._v("完成消费并提交消费结果")]),s._v(", 如果一定时间后没有收到消费者的响应, RocketMQ 会对消息进行重试处理. 具体信息参考: 消费重试.")]),s._v(" "),t("li",[t("strong",[s._v("消费提交")]),s._v(": 消费者完成消费处理, 并"),t("strong",[s._v("向服务端提交消费结果, 服务端标记当前消息已经被处理(包括消费成功和失败)")]),s._v(" . RocketMQ 默认支持保留所有消息, 此时"),t("strong",[s._v("消息数据并不会立即被删除, 只是逻辑标记已消费. 消息在保存时间到期或存储空间不足被删除前, 消费者仍然可以回溯消息重新消费")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("消息删除")]),s._v(": RocketMQ 按照消息"),t("strong",[s._v("保存机制滚动清理最早的消息数据")]),s._v(", 将消息从物理文件中删除. 更多信息参考: 消息存储和清理机制.")])]),s._v(" "),t("h5",{attrs:{id:"使用示例-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-2"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),t("blockquote",[t("p",[s._v("创建主题")])]),s._v(" "),t("p",[s._v("RocketMQ 5.0 版本下创建主题操作, 推荐使用 mqadmin 工具, 需要注意的是, 对于消息类型需要通过属性参数添加. 示例如下:")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" mqadmin updateTopic "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("nameserver_address"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("topic_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("cluster_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" +message.type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NORMAL\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("发送与消费消息")])]),s._v(" "),t("p",[t("strong",[s._v("普通消息支持设置消息索引键, 消息过滤标签等信息, 用于消息过滤和搜索查找")]),s._v(". 以 Java 语言为例, 收发普通消息的示例代码如下:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 普通消息发送. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageBuilder")]),s._v(" messageBuilder "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageBuilderImpl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" message "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" messageBuilder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTopic")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"topic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消息索引键, 可根据关键字精确查找某条消息. ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setKeys")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageKey"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消息Tag, 用于消费端根据指定Tag过滤消息. ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTag")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageTag"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消息体. ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setBody")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageBody"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBytes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送消息, 需要关注发送结果, 并捕获失败等异常. ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SendReceipt")]),s._v(" sendReceipt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" producer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("message"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sendReceipt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getMessageId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("消费消息示例如下:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费示例一: 使用PushConsumer消费普通消息, 只需要在消费监听器中处理即可. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageListener")]),s._v(" messageListener "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumeResult")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("consume")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageView")]),s._v(" messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 根据消费结果返回状态. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumeResult")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SUCCESS")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费示例二: 使用SimpleConsumer消费普通消息, 主动获取消息进行消费处理并提交消费结果. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageView")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" messageViewList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    messageViewList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" simpleConsumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("receive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Duration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ofSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    messageViewList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费处理完成后, 需要主动调用ACK提交消费结果. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            simpleConsumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ack")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果遇到系统流控等原因造成拉取失败, 需要重新发起获取消息请求. ")]),s._v("\n    e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("h5",{attrs:{id:"使用建议-8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用建议-8"}},[s._v("#")]),s._v(" 使用建议")]),s._v(" "),t("blockquote",[t("p",[s._v("设置全局唯一业务索引键, 方便问题追踪")])]),s._v(" "),t("p",[s._v("RocketMQ 支持自定义索引键(消息的 Key), 在"),t("strong",[s._v("消息查询和轨迹查询时, 可以通过索引键高效精确地查询到消息")]),s._v(". 因此, 发送消息时, "),t("mark",[t("strong",[s._v("建议设置业务上唯一的信息作为索引, 方便后续快速定位消息")])]),s._v(". 例如, 订单ID, 用户ID等.")]),s._v(" "),t("h5",{attrs:{id:"应用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[s._v("#")]),s._v(" 应用场景")]),s._v(" "),t("p",[s._v("普通消息一般应用于"),t("strong",[s._v("微服务解耦, 事件驱动, 数据集成")]),s._v("等场景, 这些场景大多数要求数据传输通道具有可靠传输的能力, 且"),t("strong",[s._v("对消息的处理时机, 处理顺序没有特别要求")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("典型场景一: 微服务异步解耦")])]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/onlineprocess-cfd38e3de3a5fc1ee76f17331cc5b828-20240422214103-hjoe2wb.png",alt:"在线消息处理"}}),s._v("​")]),s._v(" "),t("p",[s._v("如上图所示, 以在线的电商交易场景为例, 上游订单系统将用户下单支付这一业务事件封装成独立的普通消息并发送至 RocketMQ 服务端, 下游按需从服务端订阅消息并按照本地消费逻辑处理下游任务. "),t("strong",[s._v("每个消息之间都是相互独立的, 且不需要产生关联")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("典型场景二: 数据集成传输")])]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/offlineprocess-027f6f1642db3d78ff29890abbe38bf8-20240422214104-ar6joga.png",alt:"数据传输"}}),s._v("​")]),s._v(" "),t("p",[s._v("如上图所示, 以"),t("strong",[s._v("离线的日志收集")]),s._v("场景为例, 通过埋点组件收集前端应用的相关操作日志, 并转发到 RocketMQ. 每条消息都是一段日志数据, RocketMQ 不做任何处理, 只需要"),t("strong",[s._v("将日志数据可靠投递到下游的存储系统和分析系统")]),s._v("即可, 后续功能由后端应用完成.")]),s._v(" "),t("h4",{attrs:{id:"定时延时消息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定时延时消息"}},[s._v("#")]),s._v(" 定时延时消息")]),s._v(" "),t("h5",{attrs:{id:"基础-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础-4"}},[s._v("#")]),s._v(" 基础")]),s._v(" "),t("p",[s._v("定时消息是 RocketMQ 提供的一种高级消息类型, 消息被发送至服务端后, 在"),t("strong",[s._v("指定时间后才能被消费者消费")]),s._v(". 通过设置一定的定时时间可以实现分布式场景的延时调度触发效果.")]),s._v(" "),t("p",[s._v("定时消息和延时消息本质相同, 都是服务端"),t("strong",[s._v("根据消息设置的定时时间在某一固定时刻将消息投递给消费者消费")]),s._v(". 因此, 下文统一用定时消息描述.")]),s._v(" "),t("h5",{attrs:{id:"功能原理-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#功能原理-2"}},[s._v("#")]),s._v(" 功能原理")]),s._v(" "),t("blockquote",[t("p",[s._v("定时时间设置原则")])]),s._v(" "),t("ul",[t("li",[s._v("RocketMQ 定时消息设置的定时时间是一个"),t("strong",[s._v("预期触发的系统时间戳")]),s._v(", 延时时间也需要转换成当前系统时间后的某一个时间戳, 而不是一段延时时长.")]),s._v(" "),t("li",[s._v("定时时间的格式为毫秒级的 Unix 时间戳, 需要将要设置的时刻转换成时间戳形式.")]),s._v(" "),t("li",[s._v("定时时间必须设置在定时时长范围内, 超过范围则定时不生效, 服务端会立即投递消息.")]),s._v(" "),t("li",[s._v("定时时长最大值默认为 24 小时, 不支持自定义修改.")]),s._v(" "),t("li",[s._v("定时时间必须设置为当前时间之后, 若设置到当前时间之前, 则定时不生效, 服务端会立即投递消息.")])]),s._v(" "),t("p",[s._v("示例如下:")]),s._v(" "),t("ul",[t("li",[s._v("定时消息: 例如, 当前系统时间为 2022-06-09 17:30:00, 您希望消息在下午 19:20:00 定时投递, 则定时时间为 2022-06-09 19:20:00, 转换成时间戳格式为 1654773600000.")]),s._v(" "),t("li",[s._v("延时消息: 例如, 当前系统时间为 2022-06-09 17:30:00, 您希望延时 1 个小时后投递消息, 则您需要根据当前时间和延时时长换算成定时时刻, 即消息投递时间为 2022-06-09 18:30:00, 转换为时间戳格式为 1654770600000.")])]),s._v(" "),t("p",[s._v("RocketMQ 定时消息的定时时长参数精确到毫秒级, 但是默认精度为 1000ms, 即"),t("strong",[s._v("定时消息为秒级精度")]),s._v(".")]),s._v(" "),t("p",[s._v("RocketMQ 定时消息的状态支持持久化存储, 系统由于故障重启后, 仍支持按照原来设置的定时时间触发消息投递. 若存储系统异常重启, "),t("strong",[s._v("可能会导致定时消息投递出现一定延迟")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("定时消息生命周期")])]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240825204130-4y286tg.png",alt:"image"}}),s._v("​")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("初始化")]),s._v(": 消息被生产者构建并完成初始化, 待发送到服务端的状态.")]),s._v(" "),t("li",[t("strong",[s._v("定时中")]),s._v(": 消息被发送到服务端, 和普通消息不同的是, "),t("strong",[s._v("服务端不会直接构建消息索引, 而是会将定时消息单独存储在定时存储系统中, 等待定时时刻到达")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("待消费")]),s._v(": 定时时刻到达后, "),t("strong",[s._v("服务端将消息重新写入普通存储引擎, 对下游消费者可见, 等待消费者消费的状态")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("消费中")]),s._v(": 消息被消费者获取, 并按照消费者本地的业务逻辑进行处理的过程. 此时服务端会等待消费者完成消费并提交消费结果, 如果一定时间后没有收到消费者的响应, RocketMQ 会对消息进行重试处理.")]),s._v(" "),t("li",[t("strong",[s._v("消费提交")]),s._v(": 消费者完成消费处理, 并向服务端提交消费结果, 服务端标记当前消息已经被处理(包括消费成功和失败). RocketMQ 默认支持保留所有消息, 此时消息数据并不会立即被删除, 只是逻辑标记已消费. 消息在保存时间到期或存储空间不足被删除前, 消费者仍然可以回溯消息重新消费.")]),s._v(" "),t("li",[t("strong",[s._v("消息删除")]),s._v(": RocketMQ 按照消息保存机制滚动清理最早的消息数据, 将消息从物理文件中删除.")])]),s._v(" "),t("blockquote",[t("p",[s._v("消息类型一致性")])]),s._v(" "),t("p",[s._v("定时消息仅支持在 "),t("strong",[s._v("MessageType 为 Delay 的主题内使用")]),s._v(", 即定时消息只能发送至类型为定时消息的主题中, 发送的消息的类型必须和主题的类型一致.")]),s._v(" "),t("h5",{attrs:{id:"使用示例-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-3"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),t("blockquote",[t("p",[s._v("创建主题")])]),s._v(" "),t("p",[s._v("RocketMQ 5.0 版本下创建主题操作, 推荐使用 mqadmin 工具, 需要注意的是, 对于消息类型需要通过属性参数添加. 示例如下:")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" mqadmin updateTopic "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("nameserver_address"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("topic_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("cluster_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" +message.type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("DELAY\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("发送消息")])]),s._v(" "),t("p",[s._v("和普通消息相比, 定时消费发送时, 必须设置"),t("strong",[s._v("定时触发的目标时间戳")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("创建延迟主题")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("/bin/mqadmin updateTopic "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" DefaultCluster "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" DelayTopic "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" +message.type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("DELAY\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("-c 集群名称")]),s._v(" "),t("li",[s._v("-t Topic名称")]),s._v(" "),t("li",[s._v("-n nameserver地址")]),s._v(" "),t("li",[s._v("-a 额外属性, 本例给主题添加了 "),t("code",[s._v("message.type")]),s._v("​ 为 "),t("code",[s._v("DELAY")]),s._v("​ 的属性用来支持延迟消息")])]),s._v(" "),t("p",[s._v("以 Java 语言为例, 使用定时消息示例参考如下:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定时/延时消息发送")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageBuilder")]),s._v(" messageBuilder "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageBuilderImpl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 以下示例表示: 延迟时间为10分钟之后的Unix时间戳. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),s._v(" deliverTimeStamp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentTimeMillis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10L")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" message "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" messageBuilder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTopic")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"topic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消息索引键, 可根据关键字精确查找某条消息. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setKeys")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageKey"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消息Tag, 用于消费端根据指定Tag过滤消息. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTag")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageTag"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setDeliveryTimestamp")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("deliverTimeStamp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消息体")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setBody")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageBody"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBytes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送消息, 需要关注发送结果, 并捕获失败等异常. ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SendReceipt")]),s._v(" sendReceipt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" producer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("message"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sendReceipt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getMessageId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("p",[s._v("消息消费示例:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费示例一: 使用PushConsumer消费定时消息, 只需要在消费监听器处理即可. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageListener")]),s._v(" messageListener "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumeResult")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("consume")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageView")]),s._v(" messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getDeliveryTimestamp")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 根据消费结果返回状态. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumeResult")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SUCCESS")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费示例二: 使用SimpleConsumer消费定时消息, 主动获取消息进行消费处理并提交消费结果. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageView")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" messageViewList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    messageViewList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" simpleConsumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("receive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Duration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ofSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    messageViewList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费处理完成后, 需要主动调用ACK提交消费结果. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            simpleConsumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ack")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果遇到系统流控等原因造成拉取失败, 需要重新发起获取消息请求. ")]),s._v("\n    e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("h5",{attrs:{id:"使用建议-9"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用建议-9"}},[s._v("#")]),s._v(" 使用建议")]),s._v(" "),t("blockquote",[t("p",[s._v("避免创建大量相同定时时刻的消息")])]),s._v(" "),t("p",[s._v("定时消息的实现逻辑需要先经过定时存储等待触发, 定时时间到达后才会被投递给消费者. 因此, "),t("strong",[s._v("如果将大量定时消息的定时时间设置为同一时刻, 则到达该时刻后会有大量消息同时需要被处理, 会造成系统压力过大, 导致消息分发延迟, 影响定时精度")]),s._v(".")]),s._v(" "),t("h5",{attrs:{id:"应用场景-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-2"}},[s._v("#")]),s._v(" 应用场景")]),s._v(" "),t("p",[s._v("在分布式定时调度触发, 任务超时处理等场景, 需要实现精准, 可靠的定时事件触发. 使用 RocketMQ 的定时消息可以"),t("strong",[s._v("简化定时调度任务的开发逻辑, 实现高性能, 可扩展, 高可靠的定时触发能力")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("典型场景一: 分布式定时调度")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/delaywork-e9647b539ae35898102a336a27d3ad94-20240422214120-vvv7pjl.png",alt:"定时消息"}})]),s._v(" "),t("p",[s._v("在分布式定时调度场景下, 需要实现各类精度的定时任务, 例如每天 5 点执行文件清理, 每隔 2 分钟触发一次消息推送等需求. 传统基于数据库的定时调度方案在分布式场景下, 性能不高, 实现复杂. 基于 RocketMQ 的"),t("strong",[s._v("定时消息可以封装出多种类型的定时触发器")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("典型场景二: 任务超时处理")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/scheduletask-1944aea7bf2a4a4c56be4d90ead4f1f3-20240422214120-dix6mzp.png",alt:"超时任务处理"}})]),s._v(" "),t("p",[s._v("以电商交易场景为例, "),t("mark",[t("strong",[s._v("订单下单后暂未支付, 此时不可以直接关闭订单, 而是需要等待一段时间后才能关闭订单")])]),s._v(". 使用 RocketMQ 定时消息可以实现超时任务的检查触发.")]),s._v(" "),t("p",[s._v("基于定时消息的超时任务处理具备如下优势:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("精度高, 开发门槛低")]),s._v(": 基于消息通知方式不存在定时阶梯间隔. 可以轻松实现任意精度事件触发, 无需业务去重.")]),s._v(" "),t("li",[t("strong",[s._v("高性能可扩展")]),s._v(": 传统的数据库扫描方式较为复杂, 需要频繁调用接口扫描, 容易产生性能瓶颈. RocketMQ 的定时消息具有高并发和水平扩展的能力.")])]),s._v(" "),t("h4",{attrs:{id:"顺序消息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#顺序消息"}},[s._v("#")]),s._v(" 顺序消息")]),s._v(" "),t("h5",{attrs:{id:"基础-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础-5"}},[s._v("#")]),s._v(" 基础")]),s._v(" "),t("blockquote",[t("p",[s._v("什么是顺序消息")])]),s._v(" "),t("p",[s._v("顺序消息是 RocketMQ 提供的一种高级消息类型, 支持"),t("strong",[s._v("消费者按照发送消息的先后顺序获取消息")]),s._v(", 从而实现业务场景中的顺序处理. 相比其他类型消息, 顺序消息在发送, 存储和投递的处理过程中, 更多"),t("strong",[s._v("强调多条消息间的先后顺序关系")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("顺序消息的顺序关系通过消息组(MessageGroup)判定和识别, 发送顺序消息时需要为每条消息设置归属的消息组, 相同消息组的多条消息之间遵循先进先出的顺序关系, 不同消息组, 无消息组的消息之间不涉及顺序性")]),s._v(".")]),s._v(" "),t("p",[s._v("基于消息组的顺序判定逻辑, 支持按照业务逻辑做细粒度拆分, 可以在满足业务局部顺序的前提下提高系统的并行度和吞吐能力.")]),s._v(" "),t("h5",{attrs:{id:"功能原理-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#功能原理-3"}},[s._v("#")]),s._v(" 功能原理")]),s._v(" "),t("blockquote",[t("p",[s._v("如何保证消息的顺序性")])]),s._v(" "),t("p",[s._v("消息的顺序性分为两部分, "),t("strong",[s._v("生产顺序性和消费顺序性")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("生产顺序性")]),s._v(": RocketMQ 通过"),t("strong",[s._v("生产者和服务端的协议保障单个生产者串行地发送消息, 并按序存储和持久化")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("如需保证消息生产的顺序性")]),s._v(", 则必须满足以下条件:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("单一生产者")]),s._v(": 消息生产的顺序性仅支持单一生产者, 不同生产者分布在不同的系统, 即使设置相同的消息组, 不同生产者之间产生的消息也无法判定其先后顺序.")]),s._v(" "),t("li",[t("strong",[s._v("串行发送")]),s._v(": 生产者客户端支持多线程安全访问, 但如果生产者使用多线程并行发送, 则不同线程间产生的消息将无法判定其先后顺序.")])]),s._v(" "),t("p",[s._v("满足以上条件的生产者, 将顺序消息发送至 RocketMQ 后, 会保证设置了同一消息组的消息, "),t("strong",[s._v("按照发送顺序存储在同一队列中")]),s._v(". 服务端顺序存储逻辑如下:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("相同消息组的消息按照先后顺序被存储在同一个队列")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("不同消息组的消息可以混合在同一个队列中, 且不保证连续")]),s._v(".")])]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240830225324-uk6asey.png",alt:"image"}}),s._v("​")]),s._v(" "),t("p",[s._v("如上图所示, 消息组 1 和消息组 4 的消息混合存储在队列 1 中, RocketMQ 保证消息组 1 中的消息 G1-M1, G1-M2, G1-M3 是按发送顺序存储, 且消息组 4 的消息 G4-M1, G4-M2 也是按顺序存储, 但消息组 1 和消息组 4 中的消息不涉及顺序关系.")]),s._v(" "),t("p",[t("strong",[s._v("消费顺序性")]),s._v(": RocketMQ 通过消费者和服务端的协议保障消息消费严格按照存储的先后顺序来处理.")]),s._v(" "),t("p",[s._v("如需"),t("strong",[s._v("保证消息消费的顺序性")]),s._v(", 则必须满足以下条件:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("投递顺序")]),s._v(": RocketMQ 通过客户端 SDK 和服务端通信协议保障消息按照服务端存储顺序投递, 但业务方消费消息时需要严格按照"),t("strong",[s._v("接收-处理-应答")]),s._v("的语义处理消息, 避免因异步处理导致消息乱序. 备注: 消费者类型为 PushConsumer 时, "),t("strong",[s._v("RocketMQ 保证消息按照存储顺序一条一条投递给消费者")]),s._v(", 若消费者类型为 SimpleConsumer, 则消费者有可能一次拉取多条消息. 此时, "),t("strong",[s._v("消息消费的顺序性需要由业务方自行保证")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("有限重试")]),s._v(": RocketMQ 顺序消息投递仅在重试次数限定范围内, 即一条消息如果一直重试失败, 超过最大重试次数后"),t("strong",[s._v("将不再重试, 跳过这条消息消费, 不会一直阻塞后续消息处理")]),s._v(". 对于需要严格保证消费顺序的场景, 请务设置合理的重试次数, 避免参数不合理导致消息乱序.")])]),s._v(" "),t("p",[s._v("如果使用普通消息, Producer 生产消息的时候可能会向同一主题的不同消息队列发送消息. 比如此时有几个消息分别是同一个订单的创建, 支付, 发货, 在轮询的策略下这三个消息会"),t("strong",[s._v("被发送到不同队列")]),s._v(", 因为在"),t("strong",[s._v("不同的队列此时就无法使用 RocketMQ 带来的队列有序特性来保证消息有序性")]),s._v("了. 要解决此问题, 只需要"),t("strong",[s._v("将同一语义下的消息放入同一个队列")]),s._v("(比如这里是同一个订单), 那就可以使用 "),t("strong",[s._v("Hash 取模法")]),s._v(" 来"),t("strong",[s._v("保证同一个订单在同一个队列")]),s._v("中就行了.")]),s._v(" "),t("blockquote",[t("p",[s._v("生产顺序性和消费顺序性组合")])]),s._v(" "),t("p",[s._v("如果消息需要严格按照先进先出(FIFO)的原则处理, 即"),t("strong",[s._v("先发送的先消费, 后发送的后消费")]),s._v(", 则必须要同时满足生产顺序性和消费顺序性.")]),s._v(" "),t("p",[s._v("一般业务场景下, 同一个生产者可能对接多个下游消费者, 不一定所有的消费者业务都需要顺序消费, 可以将生产顺序性和消费顺序性进行差异化组合, 应用于不同的业务场景. 例如发送顺序消息, 但使用非顺序的并发消费方式来提高吞吐能力. 更多组合方式如下表所示:")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("生产顺序")]),s._v(" "),t("th",[s._v("消费顺序")]),s._v(" "),t("th",[s._v("顺序性效果")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("设置消息组, 保证消息顺序发送.")]),s._v(" "),t("td",[s._v("顺序消费")]),s._v(" "),t("td",[s._v("按照消息组粒度, 严格保证消息顺序. 同一消息组内的消息的消费顺序和发送顺序完全一致.")])]),s._v(" "),t("tr",[t("td",[s._v("设置消息组, 保证消息顺序发送.")]),s._v(" "),t("td",[s._v("并发消费")]),s._v(" "),t("td",[s._v("并发消费, 尽可能按时间顺序处理.")])]),s._v(" "),t("tr",[t("td",[s._v("未设置消息组, 消息乱序发送.")]),s._v(" "),t("td",[s._v("顺序消费")]),s._v(" "),t("td",[s._v("按队列存储粒度, 严格顺序. 基于 RocketMQ 本身队列的属性, 消费顺序和队列存储的顺序一致, 但不保证和发送顺序一致.")])]),s._v(" "),t("tr",[t("td",[s._v("未设置消息组, 消息乱序发送.")]),s._v(" "),t("td",[s._v("并发消费")]),s._v(" "),t("td",[s._v("并发消费, 尽可能按照时间顺序处理.")])])])]),s._v(" "),t("blockquote",[t("p",[s._v("顺序消息生命周期")])]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240825204232-sc2tfqj.png",alt:"image"}}),s._v("​")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("初始化")]),s._v(": 消息被生产者构建并完成初始化, 待发送到服务端的状态.")]),s._v(" "),t("li",[t("strong",[s._v("待消费")]),s._v(": 消息被发送到服务端, 对消费者可见, 等待消费者消费的状态.")]),s._v(" "),t("li",[t("strong",[s._v("消费中")]),s._v(": 消息被消费者获取, 并按照消费者本地的业务逻辑进行处理的过程. 此时服务端会等待消费者完成消费并提交消费结果, 如果一定时间后没有收到消费者的响应, RocketMQ 会对消息进行重试处理.")]),s._v(" "),t("li",[t("strong",[s._v("消费提交")]),s._v(": 消费者完成消费处理, 并向服务端提交消费结果, 服务端标记当前消息已经被处理(包括消费成功和失败). RocketMQ 默认支持保留所有消息, 此时消息数据并不会立即被删除, 只是逻辑标记已消费. 消息在保存时间到期或存储空间不足被删除前, 消费者仍然可以回溯消息重新消费.")]),s._v(" "),t("li",[t("strong",[s._v("消息删除")]),s._v(": RocketMQ 按照消息保存机制滚动清理最早的消息数据, 将消息从物理文件中删除.")])]),s._v(" "),t("p",[t("strong",[s._v("备注:")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消息消费失败或消费超时, 会触发服务端重试逻辑, 重试消息属于新的消息, 原消息的生命周期已结束")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("顺序消息消费失败进行消费重试时, 为保障消息的顺序性, 后续消息不可被消费, 必须等待前面的消息消费完成后才能被处理")]),s._v(".")])]),s._v(" "),t("blockquote",[t("p",[s._v("消息类型一致性")])]),s._v(" "),t("p",[s._v("顺序消息仅支持使用 "),t("strong",[s._v("MessageType 为 FIFO 的主题")]),s._v(", 即顺序消息只能发送至类型为顺序消息的主题中, 发送的消息的类型必须和主题的类型一致.")]),s._v(" "),t("h5",{attrs:{id:"使用示例-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-4"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),t("blockquote",[t("p",[s._v("创建主题")])]),s._v(" "),t("p",[s._v("RocketMQ 5.0 版本下创建主题操作, 推荐使用 mqadmin 工具, 需要注意的是, 对于消息类型需要通过属性参数添加. 示例如下:")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" mqadmin updateTopic "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("nameserver_address"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("topic_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("cluster_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" +message.type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("FIFO\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("发送消息")])]),s._v(" "),t("p",[s._v("和普通消息发送相比, "),t("strong",[s._v("顺序消息发送必须要设置消息组")]),s._v(". 消息组的粒度建议按照业务场景, 尽可能细粒度设计, 以便实现业务拆分和并发扩展.")]),s._v(" "),t("blockquote",[t("p",[s._v("创建FIFO主题")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("./bin/mqadmin updateTopic "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" DefaultCluster "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" FIFOTopic "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" +message.type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("FIFO\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("-c 集群名称")]),s._v(" "),t("li",[s._v("-t Topic名称")]),s._v(" "),t("li",[s._v("-n nameserver地址")]),s._v(" "),t("li",[s._v("-o 创建顺序消息")])]),s._v(" "),t("p",[s._v("以 Java 语言为例, 收发顺序消息的示例代码如下:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 顺序消息发送. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageBuilder")]),s._v(" messageBuilder "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageBuilderImpl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" message "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" messageBuilder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTopic")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"topic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消息索引键, 可根据关键字精确查找某条消息. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setKeys")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageKey"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消息Tag, 用于消费端根据指定Tag过滤消息. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTag")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageTag"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置顺序消息的排序分组, 该分组尽量保持离散, 避免热点排序分组. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setMessageGroup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fifoGroup001"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消息体. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setBody")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageBody"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBytes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送消息, 需要关注发送结果, 并捕获失败等异常")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SendReceipt")]),s._v(" sendReceipt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" producer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("message"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sendReceipt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getMessageId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("p",[s._v("消息消费示例:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费顺序消息时, 需要确保当前消费者分组是顺序投递模式, 否则仍然按并发乱序投递. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费示例一: 使用PushConsumer消费顺序消息, 只需要在消费监听器处理即可. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageListener")]),s._v(" messageListener "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumeResult")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("consume")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageView")]),s._v(" messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 根据消费结果返回状态. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumeResult")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SUCCESS")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费示例二: 使用SimpleConsumer消费顺序消息, 主动获取消息进行消费处理并提交消费结果. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 需要注意的是, 同一个MessageGroup的消息, 如果前序消息没有消费完成, 再次调用Receive是获取不到后续消息的. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageView")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" messageViewList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    messageViewList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" simpleConsumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("receive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Duration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ofSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    messageViewList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费处理完成后, 需要主动调用ACK提交消费结果. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            simpleConsumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ack")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果遇到系统流控等原因造成拉取失败, 需要重新发起获取消息请求. ")]),s._v("\n    e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br")])]),t("h5",{attrs:{id:"使用建议-10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用建议-10"}},[s._v("#")]),s._v(" 使用建议")]),s._v(" "),t("blockquote",[t("p",[s._v("建议串行消费, 避免批量消费导致乱序")])]),s._v(" "),t("p",[s._v("消息消费"),t("strong",[s._v("建议串行处理, 避免一次消费多条消息, 否则可能出现乱序情况")]),s._v(".")]),s._v(" "),t("p",[s._v("例如: 发送顺序为 1->2->3->4, 消费时批量消费, 消费顺序为 1->23(批量处理, 失败)->23(重试处理)->4, 此时可能"),t("strong",[s._v("由于消息 3 的失败导致消息 2 被重复处理, 最后导致消息消费乱序")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("消息组尽可能打散, 避免集中导致热点")])]),s._v(" "),t("p",[s._v("RocketMQ 保证相同消息组的消息存储在同一个队列中, 如果不同业务场景的消息都集中在少量或一个消息组中, 则这些消息存储压力都会"),t("strong",[s._v("集中到服务端的少量队列或一个队列中")]),s._v(". 容易导致性能热点, 且不利于扩展. "),t("strong",[s._v("一般建议的消息组设计会采用订单 ID, 用户 ID 作为顺序参考, 即同一个终端用户的消息保证顺序, 不同用户的消息无需保证顺序")]),s._v(".")]),s._v(" "),t("p",[s._v("因此"),t("strong",[s._v("建议将业务以消息组粒度进行拆分")]),s._v(", 例如, 将订单 ID, 用户 ID 作为消息组关键字, 可实现同一终端用户的消息按照顺序处理, 不同用户的消息无需保证顺序.")]),s._v(" "),t("h5",{attrs:{id:"应用场景-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-3"}},[s._v("#")]),s._v(" 应用场景")]),s._v(" "),t("p",[s._v("在"),t("strong",[s._v("有序事件处理, 撮合交易, 数据实时增量同步")]),s._v("等场景下, 异构系统间需要维持"),t("strong",[s._v("强一致的状态同步")]),s._v(", 上游的事件变更需要按照顺序传递到下游进行处理. 在这类场景下使用 RocketMQ 的顺序消息可以有效保证数据传输的顺序性.")]),s._v(" "),t("blockquote",[t("p",[s._v("典型场景一: 撮合交易")])]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/fifo_trade-a8bac55b8fb3fceb995891c64c2f0a5a-20240422214145-8cl0k93.png",alt:"交易撮合"}}),s._v("​")]),s._v(" "),t("p",[s._v("以证券, 股票交易撮合场景为例, "),t("strong",[s._v("对于出价相同的交易单, 坚持按照先出价先交易的原则")]),s._v(", 下游处理订单的系统需要严格按照出价顺序来处理订单.")]),s._v(" "),t("blockquote",[t("p",[s._v("典型场景二: 数据实时增量同步")])]),s._v(" "),t("p",[t("strong",[s._v("普通消息")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/tradewithnormal-5273283ffa54ec08017f356227411f83-20240422214145-tc7d6pt.png",alt:"普通消息"}})]),s._v(" "),t("p",[t("strong",[s._v("顺序消息")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/tradewithfifo-30884dfeb909c54d7379641fcec437fa-20240422214145-s7p2m7m.png",alt:"顺序消息"}})]),s._v(" "),t("p",[s._v("以"),t("strong",[s._v("数据库变更增量同步")]),s._v("场景为例, "),t("strong",[s._v("上游源端数据库按需执行增删改操作, 将二进制操作日志作为消息")]),s._v(", 通过RocketMQ 传输到下游搜索系统, 下游系统按顺序还原消息数据, 实现状态数据按序刷新. "),t("strong",[s._v("如果是普通消息则可能会导致状态混乱, 和预期操作结果不符, 基于顺序消息可以实现下游状态和上游操作结果一致")]),s._v(".")]),s._v(" "),t("h4",{attrs:{id:"事务消息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务消息"}},[s._v("#")]),s._v(" 事务消息")]),s._v(" "),t("h5",{attrs:{id:"功能原理-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#功能原理-4"}},[s._v("#")]),s._v(" 功能原理")]),s._v(" "),t("blockquote",[t("p",[s._v("什么是事务消息")])]),s._v(" "),t("p",[s._v("事务消息是 RocketMQ 提供的一种高级消息类型, 支持在分布式场景下"),t("strong",[s._v("保障消息生产和本地事务的最终一致性")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("事务消息处理流程")])]),s._v(" "),t("p",[s._v("事务消息交互流程如下图所示.")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240830230155-l0pjfod.png",alt:"image"}}),s._v("​")]),s._v(" "),t("ol",[t("li",[t("p",[t("strong",[s._v("生产者将消息发送至 RocketMQ 服务端")]),s._v(".")])]),s._v(" "),t("li",[t("p",[s._v("RocketMQ 服务端"),t("strong",[s._v("将消息持久化")]),s._v('成功之后, 向生产者返回 Ack 确认消息已经发送成功, 此时消息被标记为 "'),t("strong",[s._v("暂不能投递")]),s._v('", 这种状态下的消息即为'),t("strong",[s._v("半事务消息")]),s._v(".")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("生产者开始执行本地事务逻辑")]),s._v(".")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("生产者根据本地事务执行结果向服务端提交二次确认结果(Commit 或是 Rollback)")]),s._v(" , 服务端收到确认结果后处理逻辑如下:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("二次确认结果为 Commit: 服务端将半事务消息标记为可投递, 并投递给消费者")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("二次确认结果为 Rollback: 服务端将回滚事务, 不会将半事务消息投递给消费者")]),s._v(".")])])]),s._v(" "),t("li",[t("p",[s._v("在断网或者是生产者应用重启的特殊情况下, 若服务端未收到发送者提交的二次确认结果, 或服务端收到的二次确认结果为 Unknown 未知状态, 经过固定时间后, "),t("strong",[s._v("服务端将对消息生产者即生产者集群中任一生产者实例发起消息回查")]),s._v(". 服务端回查的间隔时间默认值: 60秒.")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("生产者收到消息回查后, 需要检查对应消息的本地事务执行的最终结果")]),s._v(".")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("生产者根据检查到的本地事务的最终状态再次提交二次确认, 服务端仍按照步骤 4 对半事务消息进行处理")]),s._v(".")])])]),s._v(" "),t("blockquote",[t("p",[s._v("事务消息生命周期")])]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240825204408-9usjcp4.png",alt:"image"}}),s._v("​")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("初始化")]),s._v(": 半事务消息被生产者构建并完成初始化, 待发送到服务端的状态.")]),s._v(" "),t("li",[t("strong",[s._v("事务待提交")]),s._v(": 半事务消息被发送到服务端, 和普通消息不同, "),t("strong",[s._v("并不会直接被服务端持久化, 而是会被单独存储到事务存储系统中, 等待第二阶段本地事务返回执行结果后再提交")]),s._v(". 此时消息对下游消费者不可见.")]),s._v(" "),t("li",[t("strong",[s._v("消息回滚")]),s._v(": 第二阶段"),t("strong",[s._v("如果事务执行结果明确为回滚, 服务端会将半事务消息回滚, 该事务消息流程终止")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("提交待消费")]),s._v(": 第二阶段"),t("strong",[s._v("如果事务执行结果明确为提交, 服务端会将半事务消息重新存储到普通存储系统中, 此时消息对下游消费者可见, 等待被消费者获取并消费")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("消费中")]),s._v(": 消息被消费者获取, 并按照消费者本地的业务逻辑进行处理的过程. 此时服务端会等待消费者完成消费并提交消费结果, 如果一定时间后没有收到消费者的响应, RocketMQ 会对消息进行重试处理.")]),s._v(" "),t("li",[t("strong",[s._v("消费提交")]),s._v(": 消费者完成消费处理, 并向服务端提交消费结果, 服务端标记当前消息已经被处理(包括消费成功和失败). RocketMQ 默认支持保留所有消息, 此时消息数据并不会立即被删除, 只是逻辑标记已消费. 消息在保存时间到期或存储空间不足被删除前, 消费者仍然可以回溯消息重新消费.")]),s._v(" "),t("li",[t("strong",[s._v("消息删除")]),s._v(": RocketMQ 按照消息保存机制滚动清理最早的消息数据, 将消息从物理文件中删除.")])]),s._v(" "),t("h5",{attrs:{id:"使用限制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用限制"}},[s._v("#")]),s._v(" 使用限制")]),s._v(" "),t("blockquote",[t("p",[s._v("消息类型一致性")])]),s._v(" "),t("p",[s._v("事务消息仅支持在 "),t("strong",[s._v("MessageType 为 Transaction 的主题内使用")]),s._v(", 即事务消息只能发送至类型为事务消息的主题中, 发送的消息的类型必须和主题的类型一致.")]),s._v(" "),t("blockquote",[t("p",[s._v("消费事务性")])]),s._v(" "),t("p",[t("strong",[s._v("事务消息保证本地主分支事务和下游消息发送事务的一致性, 但不保证消息消费结果和上游事务的一致性")]),s._v(". 因此需要下游业务分支自行保证消息正确处理, 建议消费端做好消费重试, 如果有短暂失败可以利用重试机制保证最终处理成功.")]),s._v(" "),t("blockquote",[t("p",[s._v("中间状态可见性")])]),s._v(" "),t("p",[t("strong",[s._v("RocketMQ 事务消息为最终一致性, 即在消息提交到下游消费端处理完成之前, 下游分支和上游事务之间的状态会不一致. 因此, 事务消息仅适合接受异步执行的事务场景.")])]),s._v(" "),t("blockquote",[t("p",[s._v("事务超时机制")])]),s._v(" "),t("p",[s._v("RocketMQ 事务消息的生命周期存在超时机制, 即半事务消息被生产者发送服务端后, 如果在指定时间内服务端无法确认提交或者回滚状态, 则消息默认会被回滚.")]),s._v(" "),t("h5",{attrs:{id:"使用示例-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-5"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),t("blockquote",[t("p",[s._v("创建主题")])]),s._v(" "),t("p",[s._v("RocketMQ 5.0版本下创建主题操作, 推荐使用 mqadmin 工具, 需要注意的是, 对于消息类型需要通过属性参数添加. 示例如下:")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" mqadmin updateTopic "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("nameserver_address"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("topic_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("cluster_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" +message.type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("TRANSACTION\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("发送消息")])]),s._v(" "),t("p",[s._v("事务消息相比普通消息发送时需要修改以下几点:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("发送事务消息前, 需要开启事务并关联本地的事务执行")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("为保证事务一致性, 在构建生产者时, 必须设置事务检查器和预绑定事务消息发送的主题列表, 客户端内置的事务检查器会对绑定的事务主题做异常状态恢复")]),s._v(".")])]),s._v(" "),t("blockquote",[t("p",[s._v("创建事务主题")])]),s._v(" "),t("p",[s._v("NORMAL 类型 Topic 不支持 TRANSACTION 类型消息, 生产消息会报错.")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("./bin/mqadmin updatetopic "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" localhost:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" TestTopic "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" DefaultCluster "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" +message.type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("TRANSACTION\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("-c 集群名称")]),s._v(" "),t("li",[s._v("-t Topic名称")]),s._v(" "),t("li",[s._v("-n nameserver地址")]),s._v(" "),t("li",[s._v("-a 额外属性, 本例给主题添加了 "),t("code",[s._v("message.type")]),s._v("​ 为 "),t("code",[s._v("TRANSACTION")]),s._v("​ 的属性用来支持事务消息")])]),s._v(" "),t("p",[s._v("以 Java 语言为例, 使用事务消息示例参考如下:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 演示demo, 模拟订单表查询服务, 用来确认订单事务是否提交成功. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("checkOrderById")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" orderId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 演示demo, 模拟本地事务的执行结果. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("doLocalTransaction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientServiceProvider")]),s._v(" provider "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientServiceProvider")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageBuilder")]),s._v(" messageBuilder "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageBuilderImpl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 构造事务生产者: 事务消息需要生产者构建一个事务检查器, 用于检查确认异常半事务的中间状态. ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Producer")]),s._v(" producer "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" provider"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newProducerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTransactionChecker")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n                 * 事务检查器一般是根据业务的ID去检查本地事务是否正确提交还是回滚, 此处以订单ID属性为例. \n                 * 在订单表找到了这个订单, 说明本地事务插入订单的操作已经正确提交; 如果订单表没有订单, 说明本地事务已经回滚. \n                 */")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" orderId "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getProperties")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"OrderId"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Strings")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isNullOrEmpty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("orderId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 错误的消息, 直接返回Rollback. ")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TransactionResolution")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ROLLBACK")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("checkOrderById")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("orderId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TransactionResolution")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COMMIT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TransactionResolution")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ROLLBACK")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开启事务分支. ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Transaction")]),s._v(" transaction"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        transaction "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" producer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("beginTransaction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 事务分支开启失败, 直接退出. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" message "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" messageBuilder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTopic")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"topic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消息索引键, 可根据关键字精确查找某条消息. ")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setKeys")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageKey"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消息Tag, 用于消费端根据指定Tag过滤消息. ")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTag")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageTag"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 一般事务消息都会设置一个本地事务关联的唯一ID, 用来做本地事务回查的校验. ")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("addProperty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"OrderId"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消息体. ")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setBody")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageBody"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBytes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送半事务消息")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SendReceipt")]),s._v(" sendReceipt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        sendReceipt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" producer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("message"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" transaction"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 半事务消息发送失败, 事务可以直接退出并回滚. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 执行本地事务, 并确定本地事务结果. \n     * 1. 如果本地事务提交成功, 则提交消息事务. \n     * 2. 如果本地事务提交失败, 则回滚消息事务. \n     * 3. 如果本地事务未知异常, 则不处理, 等待事务消息回查. \n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" localTransactionOk "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("doLocalTransaction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("localTransactionOk"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            transaction"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("commit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 业务可以自身对实时性的要求选择是否重试, 如果放弃重试, 可以依赖事务消息回查机制进行事务状态的提交. ")]),s._v("\n            e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            transaction"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rollback")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 建议记录异常信息, 回滚异常时可以无需重试, 依赖事务消息回查机制进行事务状态的提交. ")]),s._v("\n            e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br")])]),t("h5",{attrs:{id:"使用建议-11"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用建议-11"}},[s._v("#")]),s._v(" 使用建议")]),s._v(" "),t("blockquote",[t("p",[s._v("避免大量未决事务导致超时")])]),s._v(" "),t("p",[s._v("RocketMQ 支持在"),t("strong",[s._v("事务提交阶段异常的情况下发起事务回查, 保证事务一致性")]),s._v(". 但生产者应该尽量避免本地事务返回未知结果. 大量的事务检查会导致系统性能受损, 容易导致事务处理延迟.")]),s._v(" "),t("blockquote",[t("p",[s._v('需要正确处理"进行中"的事务')])]),s._v(" "),t("p",[t("strong",[s._v("消息回查时, 对于正在进行中的事务不要返回 Rollback 或 Commit 结果, 应继续保持 Unknown 的状态")]),s._v(". 一般出现消息回查时事务正在处理的原因为: 事务执行较慢, 消息回查太快. 解决方案如下:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("将第一次事务回查时间设置较大一些")]),s._v(", 但可能导致依赖回查的事务提交延迟较大.")]),s._v(" "),t("li",[s._v("程序能正确识别正在进行中的事务.")])]),s._v(" "),t("h5",{attrs:{id:"应用场景-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-4"}},[s._v("#")]),s._v(" 应用场景")]),s._v(" "),t("blockquote",[t("p",[s._v("分布式事务的诉求")])]),s._v(" "),t("p",[s._v("分布式系统调用的特点为"),t("strong",[s._v("一个核心业务逻辑的执行, 同时需要调用多个下游业务进行处理")]),s._v(". 因此, "),t("strong",[s._v("如何保证核心业务和多个下游业务的执行结果完全一致, 是分布式事务需要解决的主要问题")]),s._v(".")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/tradetrans01-636d42fb6584de6c51692d0889af5c2d-20240422214206-xpwoorj.png",alt:"事务消息诉求"}})]),s._v(" "),t("p",[s._v("以电商交易场景为例, 用户支付订单这一核心操作的同时会涉及到下游物流发货, 积分变更, 购物车状态清空等多个子系统的变更. 当前业务的"),t("strong",[s._v("处理分支")]),s._v("包括:")]),s._v(" "),t("ul",[t("li",[s._v("主分支订单系统状态更新: 由未支付变更为支付成功.")]),s._v(" "),t("li",[s._v("物流系统状态新增: 新增待发货物流记录, 创建订单物流记录.")]),s._v(" "),t("li",[s._v("积分系统状态变更: 变更用户积分, 更新用户积分表.")]),s._v(" "),t("li",[s._v("购物车系统状态变更: 清空购物车, 更新用户购物车记录.")])]),s._v(" "),t("p",[t("strong",[s._v("传统XA事务方案: 性能不足")])]),s._v(" "),t("p",[s._v("为了保证上述四个分支的执行结果一致性, 典型方案是"),t("strong",[s._v("基于 XA 协议")]),s._v("的分布式事务系统来实现. 将四个调用分支封装成包含四个独立事务分支的大事务. 基于 XA 分布式事务的方案可以满足业务处理结果的正确性, 但最大的缺点是"),t("strong",[s._v("多分支环境下资源锁定范围大, 并发度低, 随着下游分支的增加, 系统性能会越来越差")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("基于普通消息方案: 一致性保障困难")])]),s._v(" "),t("p",[s._v("将上述基于 XA 事务的方案进行简化, 将订单系统变更作为"),t("strong",[s._v("本地事务")]),s._v(", 剩下的系统变更作为普通消息的下游来执行, 事务分支简化成"),t("strong",[s._v("普通消息+订单表事务")]),s._v(", 充分利用消息异步化的能力缩短链路, 提高并发度.")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/transwithnormal-f7d951385520fc18aea8d85f0cd86c27-20240422214206-g1dw9g9.png",alt:"普通消息方案"}})]),s._v(" "),t("p",[s._v("该方案中消息下游分支和订单系统变更的主分支很容易"),t("strong",[s._v("出现不一致的现象")]),s._v(", 例如:")]),s._v(" "),t("ul",[t("li",[s._v("消息发送成功, 订单没有执行成功, 需要回滚整个事务.")]),s._v(" "),t("li",[s._v("订单执行成功, 消息没有发送成功, 需要额外补偿才能发现不一致.")]),s._v(" "),t("li",[s._v("消息发送超时未知, 此时无法判断需要回滚订单还是提交订单变更.")])]),s._v(" "),t("p",[t("strong",[s._v("基于 RocketMQ 分布式事务消息: 支持最终一致性")])]),s._v(" "),t("p",[s._v("上述普通消息方案中, 普通消息和订单事务无法保证一致的原因, 本质上是由于"),t("strong",[s._v("普通消息无法像单机数据库事务一样, 具备提交, 回滚和统一协调的能力")]),s._v(".")]),s._v(" "),t("p",[s._v("而"),t("strong",[s._v("基于 RocketMQ 实现的分布式事务消息功能, 在普通消息基础上, 支持二阶段的提交能力. 将二阶段提交和本地事务绑定, 实现全局提交结果的一致性")]),s._v(".")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/tradewithtrans-25be17fcdedb8343a0d2633e693d126d-20240422214206-v7x2zty.png",alt:"事务消息"}})]),s._v(" "),t("p",[s._v("RocketMQ 事务消息的方案, 具备高性能, 可扩展, 业务开发简单的优势. 具体事务消息的原理和流程, 请参见下文的功能原理.")]),s._v(" "),t("h4",{attrs:{id:"消息发送重试和流控机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消息发送重试和流控机制"}},[s._v("#")]),s._v(" 消息发送重试和流控机制")]),s._v(" "),t("p",[s._v("本文介绍 RocketMQ 的"),t("strong",[s._v("消息发送重试机制和消息流控机制")]),s._v(".")]),s._v(" "),t("p",[s._v("RocketMQ 的"),t("strong",[s._v("消息发送重试机制")]),s._v("主要解答如下问题:")]),s._v(" "),t("ul",[t("li",[s._v("部分节点异常是否影响消息发送?")]),s._v(" "),t("li",[s._v("请求重试是否会阻塞业务调用?")]),s._v(" "),t("li",[s._v("请求重试会带来什么不足?")])]),s._v(" "),t("h5",{attrs:{id:"消息发送重试机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消息发送重试机制"}},[s._v("#")]),s._v(" 消息发送重试机制")]),s._v(" "),t("h6",{attrs:{id:"重试基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重试基本概念"}},[s._v("#")]),s._v(" 重试基本概念")]),s._v(" "),t("p",[t("strong",[s._v("RocketMQ 客户端连接服务端发起消息发送请求时, 可能会因为网络故障, 服务异常等原因导致调用失败. 为保证消息的可靠性, RocketMQ 在客户端 SDK 中内置请求重试逻辑, 尝试通过重试发送达到最终调用成功的效果")]),s._v(".")]),s._v(" "),t("p",[s._v("同步发送和异步发送模式均支持消息发送重试.")]),s._v(" "),t("blockquote",[t("p",[s._v("重试触发条件")])]),s._v(" "),t("p",[s._v("触发消息发送重试机制的条件如下:")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("客户端消息发送请求调用失败或请求超时")])]),s._v(" "),t("li",[t("p",[s._v("网络异常造成连接失败或请求超时.")])]),s._v(" "),t("li",[t("p",[s._v("服务端节点处于重启或下线等状态造成连接失败.")])]),s._v(" "),t("li",[t("p",[s._v("服务端运行慢造成请求超时.")])]),s._v(" "),t("li",[t("p",[s._v("服务端返回失败错误码:")]),s._v(" "),t("ul",[t("li",[s._v("系统逻辑错误: 因运行逻辑不正确造成的错误.")]),s._v(" "),t("li",[s._v("系统流控错误: 因容量超限造成的流控错误.")])])])]),s._v(" "),t("p",[s._v("备注: 对于事务消息, 只会进行"),t("strong",[s._v("透明重试")]),s._v("(transparent retries), 网络超时或异常等场景不会进行重试.")]),s._v(" "),t("h6",{attrs:{id:"重试流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重试流程"}},[s._v("#")]),s._v(" 重试流程")]),s._v(" "),t("p",[t("strong",[s._v("生产者在初始化时设置消息发送最大重试次数")]),s._v(", 当出现上述触发条件的场景时, 生产者客户端会按照设置的重试次数一直重试发送消息, 直到消息发送成功或达到最大重试次数重试结束, 并在最后一次重试失败后返回调用错误响应.")]),s._v(" "),t("ul",[t("li",[s._v("同步发送: 调用线程会一直阻塞, 直到某次重试成功或最终重试失败, 抛出错误码和异常.")]),s._v(" "),t("li",[s._v("异步发送: 调用线程不会阻塞, 但调用结果会通过异常事件或者成功事件返回.")])]),s._v(" "),t("h6",{attrs:{id:"重试间隔"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重试间隔"}},[s._v("#")]),s._v(" 重试间隔")]),s._v(" "),t("p",[s._v("除服务端返回系统流控错误场景外, 其他触发条件触发重试后, "),t("strong",[s._v("均会立即进行重试, 无等待间隔")]),s._v(".")]),s._v(" "),t("p",[s._v("若由于服务端返回流控错误触发重试, 系统会按照"),t("strong",[s._v("指数退避策略")]),s._v("进行延迟重试. 指数退避算法通过以下参数控制重试行为:")]),s._v(" "),t("ul",[t("li",[s._v("INITIAL_BACKOFF: 第一次失败重试前后需等待多久, 默认值: 1秒.")]),s._v(" "),t("li",[s._v("MULTIPLIER: 指数退避因子, 即退避倍率, 默认值: 1.6.")]),s._v(" "),t("li",[s._v("JITTER: 随机抖动因子, 默认值: 0.2.")]),s._v(" "),t("li",[s._v("MAX_BACKOFF: 等待间隔时间上限, 默认值: 120秒")]),s._v(" "),t("li",[s._v("MIN_CONNECT_TIMEOUT: 最短重试间隔, 默认值: 20秒.")])]),s._v(" "),t("p",[t("strong",[s._v("建议算法如下:")])]),s._v(" "),t("div",{staticClass:"language-unknow line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("ConnectWithBackoff()\n  current_backoff = INITIAL_BACKOFF\n  current_deadline = now() + INITIAL_BACKOFF\n  while (TryConnect(Max(current_deadline, now() + MIN_CONNECT_TIMEOUT)) != SUCCESS)\n    SleepUntil(current_deadline)\n    current_backoff = Min(current_backoff * MULTIPLIER, MAX_BACKOFF)\n    current_deadline = now() + current_backoff + UniformRandom(-JITTER * current_backoff, JITTER * current_backoff)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h6",{attrs:{id:"功能约束"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#功能约束"}},[s._v("#")]),s._v(" 功能约束")]),s._v(" "),t("p",[t("strong",[s._v("链路耗时阻塞评估")]),s._v(": 从上述重试机制可以看出, 在重试流程中生产者仅能控制最大重试次数. 若由于系统异常触发了 SDK 内置的重试逻辑, 则服务端需要等待最终重试结果, 可能会导致消息发送请求链路被阻塞. 对于某些实时调用类场景, "),t("strong",[s._v("需要合理评估每次调用请求的超时时间以及最大重试次数, 避免影响全链路的耗时")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("最终异常兜底")]),s._v(": RocketMQ 客户端内置的发送请求重试机制并不能保证消息发送一定成功. 当最终重试仍然失败时, 业务方调用需要捕获异常, 并做好冗余保护处理, 避免消息发送结果不一致.")]),s._v(" "),t("p",[t("strong",[s._v("消息重复问题")]),s._v(": 因远程调用的不确定性, 当 RocketMQ 客户端因请求超时触发消息发送重试流程, 此时客户端无法感知服务端的处理结果, 客户端进行的"),t("strong",[s._v("消息发送重试可能会产生消息重复问题")]),s._v(", 业务逻辑需要自行处理消息重复问题.")]),s._v(" "),t("h5",{attrs:{id:"消息流控机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消息流控机制"}},[s._v("#")]),s._v(" 消息流控机制")]),s._v(" "),t("p",[s._v("RocketMQ 的"),t("strong",[s._v("流控机制")]),s._v("主要解答如下问题:")]),s._v(" "),t("ul",[t("li",[s._v("系统在什么情况下会触发流控?")]),s._v(" "),t("li",[s._v("触发流控时客户端行为是什么?")]),s._v(" "),t("li",[s._v("应该如何避免触发流控, 以及如何应对突发流控?")])]),s._v(" "),t("blockquote",[t("p",[s._v("消息流控定义")])]),s._v(" "),t("p",[s._v("消息流控指的是"),t("strong",[s._v("系统容量或水位过高, RocketMQ 服务端会通过快速失败返回流控错误来避免底层资源承受过高压力")]),s._v(".")]),s._v(" "),t("h6",{attrs:{id:"触发条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#触发条件"}},[s._v("#")]),s._v(" 触发条件")]),s._v(" "),t("p",[s._v("RocketMQ 的消息流控触发条件如下:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("存储压力大")]),s._v(": 参考消费进度管理的原理机制, 消费者分组的初始消费位点为当前队列的最大消费位点. 若某些场景例如"),t("strong",[s._v("业务上新等需要回溯到指定时刻前开始消费, 此时队列的存储压力会瞬间飙升, 触发消息流控")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("服务端请求任务排队溢出")]),s._v(": 若消费者消费能力不足, 导致队列中有大量堆积消息, 当堆积消息超过一定数量后会触发消息流控, 减少下游消费系统压力.")])]),s._v(" "),t("h6",{attrs:{id:"流控行为"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#流控行为"}},[s._v("#")]),s._v(" 流控行为")]),s._v(" "),t("p",[s._v("当系统触发消息发送流控时, "),t("strong",[s._v("客户端会收到系统限流错误和异常")]),s._v(", 错误码信息如下:")]),s._v(" "),t("ul",[t("li",[s._v("reply-code: 530")]),s._v(" "),t("li",[s._v("reply-text: TOO_MANY_REQUESTS")])]),s._v(" "),t("p",[s._v("客户端收到系统流控错误码后, 会"),t("strong",[s._v("根据指数退避策略进行消息发送重试")]),s._v(".")]),s._v(" "),t("h6",{attrs:{id:"处理建议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#处理建议"}},[s._v("#")]),s._v(" 处理建议")]),s._v(" "),t("p",[t("strong",[s._v("如何避免触发消息流控")]),s._v(": 触发限流的根本原因是系统容量或水位过高, 可以利用可观测性功能监控系统水位容量等, 保证底层资源充足, 避免触发流控机制.")]),s._v(" "),t("p",[t("strong",[s._v("突发消息流控处理")]),s._v(": 如果因为突发原因触发消息流控, 且客户端内置的重试流程执行失败, 则建议业务方将请求调用临时替换到其他系统进行应急处理.")]),s._v(" "),t("h4",{attrs:{id:"消费者分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消费者分类"}},[s._v("#")]),s._v(" 消费者分类")]),s._v(" "),t("p",[s._v("RocketMQ 支持 "),t("mark",[t("strong",[s._v("PushConsumer, SimpleConsumer 以及 PullConsumer")])]),s._v(" 这三种类型的消费者, 本文分别从使用方式, 实现原理, 可靠性重试和适用场景等方面介绍这三种类型的消费者.")]),s._v(" "),t("p",[s._v("RocketMQ 面向不同的业务场景提供了不同消费者类型, "),t("strong",[s._v("每种消费者类型的集成方式和控制方式都不一样")]),s._v(". 了解如下问题, 可以帮助选择更匹配业务场景的消费者类型.")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("如何实现并发消费")]),s._v(": 消费者如何使用并发的多线程机制处理消息, 以此提高消息处理效率?")]),s._v(" "),t("li",[t("strong",[s._v("如何实现同步, 异步消息处理")]),s._v(": 对于不同的集成场景, 消费者获取消息后可能会将消息异步分发到业务逻辑中处理, 此时, 消息异步化处理如何实现?")]),s._v(" "),t("li",[t("strong",[s._v("如何实现消息可靠处理")]),s._v(": 消费者处理消息时如何返回响应结果? 如何在消息异常情况进行重试, 保证消息的可靠处理?")])]),s._v(" "),t("p",[s._v("以上问题的具体答案, 请参考下文.")]),s._v(" "),t("h5",{attrs:{id:"功能概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#功能概述"}},[s._v("#")]),s._v(" 功能概述")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/image-20240830231712-mcxg4jw.png",alt:"image"}})]),s._v(" "),t("p",[s._v("如上图所示, RocketMQ 的消费者处理消息时主要经过以下阶段: "),t("mark",[t("strong",[s._v("消息获取->消息处理->消费状态提交")])]),s._v(".")]),s._v(" "),t("p",[s._v("针对以上几个阶段, RocketMQ 提供了不同的消费者类型: "),t("strong",[s._v("PushConsumer, SimpleConsumer 和 PullConsumer")]),s._v(". 这几种类型的消费者通过不同的实现方式和接口可满足不同业务场景下的消费需求.")]),s._v(" "),t("p",[s._v("具体差异如下:")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"center"}},[s._v("对比项")]),s._v(" "),t("th",[s._v("PushConsumer")]),s._v(" "),t("th",[s._v("SimpleConsumer")]),s._v(" "),t("th",[s._v("PullConsumer")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("接口方式")]),s._v(" "),t("td",[t("strong",[s._v("使用监听器回调接口返回消费结果")]),s._v(", 消费者仅允许在监听器范围内处理消费逻辑.")]),s._v(" "),t("td",[s._v("业务方自行实现消息处理, 并主动调用接口返回消费结果.")]),s._v(" "),t("td",[t("strong",[s._v("业务方自行按队列拉取消息, 并可选择性地提交消费结果")])])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("消费并发度管理")]),s._v(" "),t("td",[s._v("由 SDK 管理消费并发度.")]),s._v(" "),t("td",[s._v("由业务方消费逻辑自行管理消费线程.")]),s._v(" "),t("td",[s._v("由业务方消费逻辑自行管理消费线程.")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("负载均衡粒度")]),s._v(" "),t("td",[s._v("5.0 SDK 是消息粒度, 更均衡, 早期版本是队列维度")]),s._v(" "),t("td",[s._v("消息粒度, 更均衡")]),s._v(" "),t("td",[s._v("队列粒度, 吞吐攒批性能更好, 但容易不均衡")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("接口灵活度")]),s._v(" "),t("td",[s._v("高度封装, 不够灵活.")]),s._v(" "),t("td",[t("strong",[s._v("原子接口, 可灵活自定义")]),s._v(".")]),s._v(" "),t("td",[s._v("原子接口, 可灵活自定义.")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("适用场景")]),s._v(" "),t("td",[s._v("适用于无自定义流程的业务消息开发场景.")]),s._v(" "),t("td",[t("strong",[s._v("适用于需要高度自定义业务流程的业务开发场景")]),s._v(".")]),s._v(" "),t("td",[s._v("仅推荐在"),t("strong",[s._v("流处理框架场景")]),s._v("下集成使用")])])])]),s._v(" "),t("p",[s._v("在实际使用场景中, "),t("strong",[s._v("PullConsumer 仅推荐在流处理框架中集成使用, 大多数消息收发场景使用 PushConsumer 和 SimpleConsumer 就可以满足需求")]),s._v(".")]),s._v(" "),t("p",[s._v("若业务场景发生变更, 或当前使用的消费者类型不适合当前业务, 可以选择在 PushConsumer 和 SimpleConsumer 之间"),t("strong",[s._v("变更")]),s._v("消费者类型. "),t("strong",[s._v("变更消费者类型不影响当前 RocketMQ 资源的使用和业务处理")]),s._v(".")]),s._v(" "),t("p",[s._v("注意: 生产环境中相同的 ConsumerGroup 下严禁混用 PullConsumer 和其他两种消费者, 否则会导致消息消费异常.")]),s._v(" "),t("h5",{attrs:{id:"pushconsumer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pushconsumer"}},[s._v("#")]),s._v(" PushConsumer")]),s._v(" "),t("p",[s._v("PushConsumers 是一种"),t("strong",[s._v("高度封装的消费者类型")]),s._v(", 消费消息仅通过消费监听器处理业务并返回消费结果. 消息的获取, 消费状态提交以及消费重试都通过 RocketMQ 的客户端 SDK 完成.")]),s._v(" "),t("blockquote",[t("p",[s._v("使用方式")])]),s._v(" "),t("p",[s._v("PushConsumer 的使用方式比较固定, 在消费者初始化时注册一个消费监听器, 并在消费监听器内部实现消息处理逻辑. 由 RocketMQ 的 SDK "),t("strong",[s._v("在后台完成消息获取, 触发监听器调用以及进行消息重试处理")]),s._v(".")]),s._v(" "),t("p",[s._v("示例代码如下:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费示例: 使用PushConsumer消费普通消息. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientServiceProvider")]),s._v(" provider "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientServiceProvider")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadService")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" topic "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YourTopic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),s._v(" filterExpression "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YourFilterTag"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpressionType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PushConsumer")]),s._v(" pushConsumer "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" provider"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newPushConsumerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消费者分组. ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setConsumerGroup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YourConsumerGroup"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置接入点. ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setClientConfiguration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientConfiguration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setEndpoints")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YourEndpoint"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置预绑定的订阅关系. ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setSubscriptionExpressions")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Collections")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("singletonMap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" filterExpression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消费监听器. ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setMessageListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumeResult")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("consume")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageView")]),s._v(" messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费消息并返回处理结果. ")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumeResult")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SUCCESS")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("p",[s._v("PushConsumer 的消费监听器执行结果分为以下三种情况:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("返回消费成功")]),s._v(": 以 Java SDK 为例, 返回 "),t("code",[s._v("ConsumeResult.SUCCESS")]),s._v("​, 表示该消息处理成功, 服务端按照消费结果更新消费进度.")]),s._v(" "),t("li",[t("strong",[s._v("返回消费失败")]),s._v(": 以 Java SDK 为例, 返回 "),t("code",[s._v("ConsumeResult.FAILURE")]),s._v("​, 表示该消息处理失败, 需要根据消费重试逻辑判断是否进行重试消费.")]),s._v(" "),t("li",[t("strong",[s._v("出现非预期失败")]),s._v(": 例如抛异常等行为, 该结果按照消费失败处理, 需要根据消费重试逻辑判断是否进行重试消费.")])]),s._v(" "),t("p",[s._v("PushConsumer 消费消息时, 若消息处理逻辑出现预期之外的阻塞导致消息处理一直无法执行成功, SDK 会按照消费"),t("strong",[s._v("超时处理强制提交消费失败结果")]),s._v(", 并按照消费重试逻辑进行处理.")]),s._v(" "),t("p",[s._v("注意: 出现消费超时情况时, SDK 虽然提交消费失败结果, 但是当前消费线程可能仍然无法响应中断, 还会继续处理消息.")]),s._v(" "),t("blockquote",[t("p",[s._v("内部原理")])]),s._v(" "),t("p",[s._v("在 PushConsumer 类型中, 消息的实时处理能力是基于 SDK 内部的典型 "),t("strong",[s._v("Reactor 线程模型")]),s._v("实现的. 如下图所示, SDK 内置了一个长轮询线程, "),t("strong",[s._v("先将消息异步拉取(pull)到 SDK 内置的缓存队列中, 再分别提交到消费线程中, 触发监听器执行本地消费逻辑")]),s._v(".")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/pushconsumer-26b909b090d4f911a40d5050d3ceba1d-20240422214326-2aj4nia.png",alt:"PushConsumer原理"}}),s._v("​")]),s._v(" "),t("blockquote",[t("p",[s._v("可靠性重试")])]),s._v(" "),t("p",[s._v("PushConsumer 消费者类型中, 客户端 SDK 和消费逻辑的唯一边界是"),t("strong",[s._v("消费监听器接口")]),s._v(". 客户端 SDK 严格按照监听器的返回结果判断消息是否消费成功, 并做可靠性重试. 所有消息必须"),t("strong",[s._v("以同步方式进行消费处理")]),s._v(", 并在监听器接口结束时返回调用结果, 不允许再做异步化分发.")]),s._v(" "),t("p",[s._v("使用 PushConsumer 消费者消费时, "),t("strong",[s._v("不允许使用以下方式处理消息, 否则无法保证消息的可靠性")]),s._v(".")]),s._v(" "),t("ul",[t("li",[s._v("错误方式一: 消息还未处理完成, 就提前返回消费成功结果. 此时如果消息消费失败, RocketMQ 服务端是无法感知的, 因此不会进行消费重试.")]),s._v(" "),t("li",[s._v("错误方式二: 在消费监听器内将消息再次分发到自定义的其他线程, 消费监听器提前返回消费结果. 此时如果消息消费失败, RocketMQ 服务端同样无法感知, 因此也不会进行消费重试.")])]),s._v(" "),t("blockquote",[t("p",[s._v("顺序性保障")])]),s._v(" "),t("p",[s._v("基于 RocketMQ 顺序消息的定义, 如果消费者分组"),t("strong",[s._v("设置了顺序消费模式")]),s._v(", 则 PushConsumer 在触发消费监听器时, 严格遵循消息的先后顺序. 业务处理逻辑无感知即可保证消息的消费顺序.")]),s._v(" "),t("p",[s._v("消息消费按照顺序处理的前提是遵循同步提交原则, 如果业务逻辑自定义实现了异步分发, 则 RocketMQ 无法保证消息的顺序性.")]),s._v(" "),t("blockquote",[t("p",[s._v("适用场景")])]),s._v(" "),t("p",[t("strong",[s._v("PushConsumer 严格限制了消息同步处理及每条消息的处理超时时间")]),s._v(", 适用于以下场景:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消息处理时间可预估场景")]),s._v(": 如果不确定消息处理耗时, 经常有预期之外的长时间耗时的消息, PushConsumer 的可靠性保证会频繁触发消息重试机制造成大量重复消息.")]),s._v(" "),t("li",[t("strong",[s._v("无异步化, 高级定制场景")]),s._v(": PushConsumer 限制了消费逻辑的线程模型, 由客户端 SDK 内部按最大吞吐量触发消息处理. 该模型开发逻辑简单, 但是不允许使用异步化和自定义处理流程.")])]),s._v(" "),t("h5",{attrs:{id:"simpleconsumer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#simpleconsumer"}},[s._v("#")]),s._v(" SimpleConsumer")]),s._v(" "),t("p",[s._v("SimpleConsumer 是一种接口原子型的消费者类型, 消息的获取, 消费状态提交以及消费重试都是"),t("strong",[s._v("通过")]),s._v("​"),t("mark",[t("strong",[s._v("消费者业务逻辑")])]),s._v("​"),t("strong",[s._v("主动发起调用完成")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("使用方式")])]),s._v(" "),t("p",[s._v("SimpleConsumer 的使用涉及多个接口调用, "),t("strong",[s._v("由业务逻辑按需调用接口获取消息, 然后分发给业务线程处理消息, 最后按照处理的结果调用提交接口, 返回服务端当前消息的处理结果")]),s._v(". 示例如下:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费示例: 使用 SimpleConsumer 消费普通消息, 主动获取消息处理并提交.  ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientServiceProvider")]),s._v(" provider "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientServiceProvider")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadService")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" topic "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YourTopic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),s._v(" filterExpression "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YourFilterTag"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpressionType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SimpleConsumer")]),s._v(" simpleConsumer "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" provider"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newSimpleConsumerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消费者分组. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setConsumerGroup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YourConsumerGroup"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置接入点. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setClientConfiguration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientConfiguration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setEndpoints")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YourEndpoint"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置预绑定的订阅关系. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setSubscriptionExpressions")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Collections")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("singletonMap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" filterExpression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置从服务端接受消息的最大等待时间")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setAwaitDuration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Duration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ofSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// SimpleConsumer 需要主动获取消息并处理. ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageView")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" messageViewList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" simpleConsumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("receive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Duration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ofSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    messageViewList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费处理完成后, 需要主动调用 ACK 提交消费结果. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            simpleConsumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ack")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            logger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Failed to ack message, messageId={}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getMessageId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果遇到系统流控等原因造成拉取失败, 需要重新发起获取消息请求. ")]),s._v("\n    logger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Failed to receive message"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br")])]),t("p",[s._v("SimpleConsumer 主要涉及以下几个接口行为:")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("接口名称")]),s._v(" "),t("th",[s._v("主要作用")]),s._v(" "),t("th",[s._v("可修改参数")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("​"),t("code",[s._v("ReceiveMessage")]),s._v("​")]),s._v(" "),t("td",[s._v("消费者主动调用该接口从服务端获取消息. 说明由于服务端存储为分布式, 可能会出现服务端实际有消息, 但是返回为空的现象. 一般可通过重新发起 ReceiveMessage 调用或提高 ReceiveMessage 的并发度解决.")]),s._v(" "),t("td",[t("strong",[s._v("批量拉取消息数")]),s._v(": SimpleConsumer可以一次性批量获取多条消息实现批量消费, 该接口可修改批量获取的消息数量. "),t("strong",[s._v("消费不可见时间")]),s._v(": 消息的最长处理耗时, 该参数用于控制消费失败时的消息重试间隔. 消费者调用"),t("code",[s._v("ReceiveMessage")]),s._v("​接口时需要指定消费不可见时间.")])]),s._v(" "),t("tr",[t("td",[s._v("​"),t("code",[s._v("AckMessage")]),s._v("​")]),s._v(" "),t("td",[s._v("消费者成功消费消息后, 主动调用该接口向服务端返回消费成功响应.")]),s._v(" "),t("td",[s._v("无")])]),s._v(" "),t("tr",[t("td",[s._v("​"),t("code",[s._v("ChangeInvisibleDuration")]),s._v("​")]),s._v(" "),t("td",[s._v("消费重试场景下, 消费者可通过该接口修改消息处理时长, 即控制消息的重试间隔.")]),s._v(" "),t("td",[s._v("消费不可见时间: 调用本接口可修改"),t("code",[s._v("ReceiveMessage")]),s._v("​接口预设的消费不可见时间的参数值. 一般用于需要延长消息处理时长的场景.")])])])]),s._v(" "),t("blockquote",[t("p",[s._v("可靠性重试")])]),s._v(" "),t("p",[s._v("SimpleConsumer 消费者类型中, 客户端 SDK 和服务端通过 "),t("code",[s._v("ReceiveMessage")]),s._v("​ 和 "),t("code",[s._v("AckMessage")]),s._v("​ 接口通信. 客户端 SDK 如果处理消息成功则调用 "),t("code",[s._v("AckMessage")]),s._v("​ 接口; 如果处理失败只需要不回复 ACK 响应, 即可在定义的消费不可见时间到达后触发消费重试流程.")]),s._v(" "),t("blockquote",[t("p",[s._v("顺序性保障")])]),s._v(" "),t("p",[s._v("基于顺序消息的定义, SimpleConsumer 在处理顺序消息时, 会"),t("strong",[s._v("按照消息存储的先后顺序获取消息")]),s._v(". 即需要保持顺序的一组消息中, 如果前面的消息未处理完成, 则无法获取到后面的消息.")]),s._v(" "),t("blockquote",[t("p",[s._v("适用场景")])]),s._v(" "),t("p",[t("strong",[s._v("SimpleConsumer 提供原子接口, 用于消息获取和提交消费结果, 相对于 PushConsumer 方式更加灵活")]),s._v(".")]),s._v(" "),t("p",[s._v("SimpleConsumer 适用于以下场景:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消息处理时长不可控")]),s._v(": 如果消息处理时长无法预估, 经常有长时间耗时的消息处理情况. 建议使用 SimpleConsumer 消费类型, 可以在消费时自定义消息的预估处理时长, 若实际业务中预估的消息处理时长不符合预期, 也可以通过接口提前修改.")]),s._v(" "),t("li",[t("strong",[s._v("需要异步化, 批量消费等高级定制场景")]),s._v(": SimpleConsumer 在 SDK 内部没有复杂的线程封装, 完全由业务逻辑自由定制, 可以实现异步分发, 批量消费等高级定制场景.")]),s._v(" "),t("li",[t("strong",[s._v("需要自定义消费速率")]),s._v(": SimpleConsumer 是由业务逻辑主动调用接口获取消息, 因此可以自由调整获取消息的频率, 自定义控制消费速率.")])]),s._v(" "),t("h5",{attrs:{id:"pullconsumer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pullconsumer"}},[s._v("#")]),s._v(" PullConsumer")]),s._v(" "),t("p",[s._v("待补充.")]),s._v(" "),t("h5",{attrs:{id:"使用建议-12"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用建议-12"}},[s._v("#")]),s._v(" 使用建议")]),s._v(" "),t("blockquote",[t("p",[s._v("PushConsumer合理控制消费耗时,避免无限阻塞")])]),s._v(" "),t("p",[s._v("对于 PushConsumer 消费类型, 需要严格控制消息的消费耗时, 尽量"),t("strong",[s._v("避免出现消息处理超时导致消息重复")]),s._v(". 如果业务经常会出现一些预期外的长时间耗时的消息, 建议使用 SimpleConsumer, 并设置好消费不可见时间.")]),s._v(" "),t("blockquote",[t("p",[s._v("怎么设置消费者线程数?")])]),s._v(" "),t("p",[s._v("当"),t("strong",[s._v("启动消费者的时候, 可以设置属性")]),s._v(". 不同版本的参数名不一样.")]),s._v(" "),t("h4",{attrs:{id:"消息过滤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消息过滤"}},[s._v("#")]),s._v(" 消息过滤")]),s._v(" "),t("h5",{attrs:{id:"基础-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础-6"}},[s._v("#")]),s._v(" 基础")]),s._v(" "),t("p",[s._v("消费者订阅了某个主题后, RocketMQ 会将该主题中的所有消息投递给消费者. "),t("strong",[s._v("若消费者只需要关注部分消息, 可通过设置过滤条件在 RocketMQ 服务端进行过滤, 只获取到需要关注的消息子集, 避免接收到大量无效的消息")]),s._v(". 本文介绍消息过滤的定义, 原理, 分类及不同过滤方式的使用方法, 配置示例等.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息过滤定义")])]),s._v(" "),t("p",[t("mark",[t("strong",[s._v("过滤的含义指的是 RocketMQ 服务端将符合条件的消息投递给消费者, 而不是消费者将匹配到的消息过滤掉")])]),s._v(".")]),s._v(" "),t("p",[s._v("RocketMQ 的消息过滤功能通过生产者和消费者对消息的"),t("strong",[s._v("属性, 标签")]),s._v("进行定义, 并在 RocketMQ "),t("strong",[s._v("服务端根据过滤条件进行筛选匹配, 将符合条件的消息投递给消费者进行消费")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("应用场景")])]),s._v(" "),t("p",[s._v("RocketMQ 作为发布订阅模型的消息中间件广泛应用于上下游业务集成场景. 在实际业务场景中, 同一个主题下的消息往往会被"),t("strong",[s._v("多个不同的下游业务方处理, 各下游的处理逻辑不同, 只关注自身逻辑需要的消息子集")]),s._v(".")]),s._v(" "),t("p",[s._v("使用 RocketMQ 的"),t("strong",[s._v("消息过滤功能, 可以帮助消费者更高效地过滤自己需要的消息集合")]),s._v(", 避免大量无效消息投递给消费者, 降低下游系统处理压力.")]),s._v(" "),t("p",[s._v("RocketMQ 主要解决的"),t("strong",[s._v("单个业务域即同一个主题内不同消息子集的过滤问题")]),s._v(", 一般是基于同一业务下更具体的分类进行过滤匹配. 如果是需要对不同业务域的消息进行拆分, 建议使用不同主题处理不同业务域的消息.")]),s._v(" "),t("h5",{attrs:{id:"功能概述-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#功能概述-2"}},[s._v("#")]),s._v(" 功能概述")]),s._v(" "),t("blockquote",[t("p",[s._v("消息过滤原理")])]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/messagefilter0-ad2c8360f54b9a622238f8cffea12068-20240422214351-ejehgfo.png",alt:"消息过滤"}}),s._v("​")]),s._v(" "),t("p",[s._v("消息过滤主要通过以下几个关键流程实现:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("生产者")]),s._v(": 生产者在初始化消息时"),t("strong",[s._v("预先为消息设置一些属性和标签, 用于后续消费时指定过滤目标")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("消费者")]),s._v(": 消费者在初始化及后续消费流程中通过"),t("strong",[s._v("调用订阅关系注册接口")]),s._v(", 向服务端上报需要订阅指定主题的哪些消息, 即过滤条件.")]),s._v(" "),t("li",[t("strong",[s._v("服务端")]),s._v(": 消费者获取消息时会"),t("strong",[s._v("触发服务端的动态过滤计算, RocketMQ 服务端根据消费者上报的过滤条件的表达式进行匹配, 并将符合条件的消息投递给消费者")]),s._v(".")])]),s._v(" "),t("blockquote",[t("p",[s._v("消息过滤分类")])]),s._v(" "),t("p",[t("mark",[t("strong",[s._v("RocketMQ 支持 Tag 标签过滤和 SQL 属性过滤")])]),s._v(", 这两种过滤方式对比如下:")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"center"}},[s._v("对比项")]),s._v(" "),t("th",[s._v("Tag标签过滤")]),s._v(" "),t("th",[s._v("SQL属性过滤")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("过滤目标")]),s._v(" "),t("td",[s._v("消息的 Tag 标签.")]),s._v(" "),t("td",[s._v("消息的属性, 包括用户自定义属性以及系统属性(Tag 是一种系统属性).")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("过滤能力")]),s._v(" "),t("td",[s._v("精准匹配.")]),s._v(" "),t("td",[s._v("SQL 语法匹配.")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("适用场景")]),s._v(" "),t("td",[s._v("简单过滤场景, 计算逻辑简单轻量.")]),s._v(" "),t("td",[s._v("复杂过滤场景, 计算逻辑较复杂.")])])])]),s._v(" "),t("p",[s._v("具体的使用方式及示例, 请参见下文的 Tag 标签过滤和 SQL 属性过滤.")]),s._v(" "),t("p",[s._v("过滤表达式属于订阅关系的一部分, RocketMQ 的领域模型规定, 同一消费者分组内的多个消费者的订阅关系包括过滤表达式, 必须保持一致, 否则可能会导致部分消息消费不到.")]),s._v(" "),t("h5",{attrs:{id:"tag标签过滤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tag标签过滤"}},[s._v("#")]),s._v(" Tag标签过滤")]),s._v(" "),t("p",[s._v("Tag 标签过滤方式是 RocketMQ 提供的基础消息过滤能力, 基于生产者为消息设置的 Tag 标签进行匹配. "),t("strong",[s._v("生产者在发送消息时, 设置消息的 Tag 标签, 消费者需指定已有的 Tag 标签来进行匹配订阅")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("场景示例")])]),s._v(" "),t("p",[s._v("以下图电商交易场景为例, 从客户下单到收到商品这一过程会生产一系列消息:")]),s._v(" "),t("ul",[t("li",[s._v("订单消息")]),s._v(" "),t("li",[s._v("支付消息")]),s._v(" "),t("li",[s._v("物流消息")])]),s._v(" "),t("p",[s._v("这些消息会发送到名称为 Trade_Topic 的 Topic 中, 被各个不同的下游系统所订阅:")]),s._v(" "),t("ul",[t("li",[s._v("支付系统: 只需订阅支付消息.")]),s._v(" "),t("li",[s._v("物流系统: 只需订阅物流消息.")]),s._v(" "),t("li",[s._v("交易成功率分析系统: 需订阅订单和支付消息.")]),s._v(" "),t("li",[s._v("实时计算系统: 需要订阅所有和交易相关的消息.")])]),s._v(" "),t("p",[s._v("过滤效果如下图所示:")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/messagefilter-09e82bf396d7c4100ed742e8d0d2c185-20240422214351-ykzv7m7.png",alt:"Tag过滤"}}),s._v("​")]),s._v(" "),t("blockquote",[t("p",[s._v("Tag标签设置")])]),s._v(" "),t("ul",[t("li",[s._v("Tag 由生产者发送消息时设置, "),t("strong",[s._v("每条消息允许设置一个 Tag 标签")]),s._v(".")]),s._v(" "),t("li",[s._v("Tag 使用可见字符, 建议长度不超过 128 字符.")])]),s._v(" "),t("blockquote",[t("p",[s._v("Tag标签过滤规则")])]),s._v(" "),t("p",[s._v("Tag 标签过滤为"),t("strong",[s._v("精准字符串匹配")]),s._v(", 过滤规则设置格式如下:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("单 Tag 匹配")]),s._v(": 过滤表达式为目标 Tag. 表示只有消息标签为指定目标 Tag 的消息符合匹配条件, 会被发送给消费者.")]),s._v(" "),t("li",[t("strong",[s._v("多 Tag 匹配")]),s._v(": 多个 "),t("strong",[s._v("Tag 之间为或的关系")]),s._v(", 不同 Tag 间使用两个竖线(||)隔开. 例如, "),t("code",[s._v("Tag1||Tag2||Tag3")]),s._v("​, 表示标签为 Tag1 或 Tag2 或 Tag3 的消息都满足匹配条件, 都会被发送给消费者进行消费.")]),s._v(" "),t("li",[t("strong",[s._v("全部匹配")]),s._v(": 使用星号(*)作为全匹配表达式. 表示主题下的所有消息都将被发送给消费者进行消费.")])]),s._v(" "),t("blockquote",[t("p",[s._v("使用示例")])]),s._v(" "),t("p",[s._v("发送消息, 设置 Tag 标签.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" message "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" messageBuilder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTopic")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"topic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消息索引键, 可根据关键字精确查找某条消息. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setKeys")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageKey"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消息Tag, 用于消费端根据指定Tag过滤消息. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 该示例表示消息的Tag设置为"TagA". ')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTag")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TagA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消息体. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setBody")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageBody"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBytes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("订阅消息, 匹配单个 Tag 标签.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" topic "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Your Topic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 只订阅消息标签为"TagA"的消息.')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),s._v(" filterExpression "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TagA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpressionType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\npushConsumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" filterExpression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("订阅消息, 匹配多个 Tag 标签.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" topic "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Your Topic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 只订阅消息标签为"TagA", "TagB"或"TagC"的消息. ')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),s._v(" filterExpression "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TagA||TagB||TagC"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpressionType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\npushConsumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" filterExpression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("订阅消息, 匹配 Topic 中的所有消息, 不进行过滤.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" topic "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Your Topic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用Tag标签过滤消息, 订阅所有消息. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),s._v(" filterExpression "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpressionType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\npushConsumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" filterExpression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h5",{attrs:{id:"sql属性过滤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql属性过滤"}},[s._v("#")]),s._v(" SQL属性过滤")]),s._v(" "),t("p",[s._v("SQL 属性过滤是 RocketMQ 提供的高级消息过滤方式, 通过"),t("strong",[s._v("生产者为消息设置的属性(Key)及属性值(Value)进行匹配")]),s._v(". 生产者在发送消息时可设置多个属性, 消费者订阅时可设置 SQL 语法的过滤表达式过滤多个属性.")]),s._v(" "),t("p",[s._v("注意: Tag 是一种系统属性, 所以 SQL 过滤方式也兼容 Tag 标签过滤. 在 SQL 语法中, Tag 的属性名称为 TAGS.")]),s._v(" "),t("blockquote",[t("p",[s._v("使用场景示例")])]),s._v(" "),t("p",[s._v("以下图电商交易场景为例, 从客户下单到收到商品这一过程会生产一系列消息, 按照类型将消息分为"),t("strong",[s._v("订单消息和物流消息")]),s._v(", 其中给物流消息定义地域属性, 按照地域分为杭州和上海:")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("订单消息")])]),s._v(" "),t("li",[t("p",[s._v("物流消息")]),s._v(" "),t("ul",[t("li",[s._v("物流消息且地域为杭州")]),s._v(" "),t("li",[s._v("物流消息且地域为上海")])])])]),s._v(" "),t("p",[s._v("这些消息会发送到名称为 Trade_Topic 的 Topic 中, 被各个不同的系统所订阅:")]),s._v(" "),t("ul",[t("li",[s._v("物流系统 1: 只需订阅物流消息且消息地域为杭州.")]),s._v(" "),t("li",[s._v("物流系统 2: 只需订阅物流消息且消息地域为杭州或上海.")]),s._v(" "),t("li",[s._v("订单跟踪系统: 只需订阅订单消息.")]),s._v(" "),t("li",[s._v("实时计算系统: 需要订阅所有和交易相关的消息.")])]),s._v(" "),t("p",[s._v("过滤效果如下图所示:")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/messagefilter2-dbf55cf4a63ac6d3b9c5f02603ce92ce-20240422214351-dmzc7k4.png",alt:"sql过滤"}}),s._v("​")]),s._v(" "),t("blockquote",[t("p",[s._v("消息属性设置")])]),s._v(" "),t("p",[s._v("生产者发送消息时可以"),t("strong",[s._v("自定义消息属性, 每个属性都是一个自定义的键值对(Key-Value)")]),s._v(" . 每条消息支持设置多个属性.")]),s._v(" "),t("blockquote",[t("p",[s._v("SQL属性过滤规则")])]),s._v(" "),t("p",[s._v("SQL 属性过滤使用 SQL92 语法作为过滤规则表达式, 语法规范如下:")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("语法")]),s._v(" "),t("th",[s._v("说明")]),s._v(" "),t("th",[s._v("示例")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("IS NULL")]),s._v(" "),t("td",[s._v("判断属性不存在.")]),s._v(" "),t("td",[s._v("​"),t("code",[s._v("a IS NULL")]),s._v("​: 属性 a 不存在.")])]),s._v(" "),t("tr",[t("td",[s._v("IS NOT NULL")]),s._v(" "),t("td",[s._v("判断属性存在.")]),s._v(" "),t("td",[s._v("​"),t("code",[s._v("a IS NOT NULL")]),s._v("​: 属性 a 存在.")])]),s._v(" "),t("tr",[t("td",[t("em",[s._v(">")]),s._v("   >=   "),t("em",[s._v("<")]),s._v("   <=")]),s._v(" "),t("td",[s._v("用于比较数字, 不能用于比较字符串, 否则消费者客户端启动时会报错. "),t("strong",[s._v("说明")]),s._v("可转化为数字的字符串也被认为是数字.")]),s._v(" "),t("td",[s._v("​"),t("code",[s._v("a IS NOT NULL AND a > 100")]),s._v("​: 属性 a 存在且属性 a 的值大于 100. "),t("code",[s._v("a IS NOT NULL AND a > 'abc'")]),s._v("​: 错误示例, abc 为字符串, 不能用于比较大小.")])]),s._v(" "),t("tr",[t("td",[s._v("BETWEEN xxx AND xxx")]),s._v(" "),t("td",[s._v("用于比较数字, 不能用于比较字符串, 否则消费者客户端启动时会报错. 等价于>= xxx AND \\<= xxx. 表示属性值在两个数字之间.")]),s._v(" "),t("td",[s._v("​"),t("code",[s._v("a IS NOT NULL AND (a BETWEEN 10 AND 100)")]),s._v("​: 属性 a 存在且属性 a 的值大于等于 10 且小于等于 100.")])]),s._v(" "),t("tr",[t("td",[s._v("NOT BETWEEN xxx AND xxx")]),s._v(" "),t("td",[s._v("用于比较数字, 不能用于比较字符串, 否则消费者客户端启动会报错. 等价于\\< xxx OR > xxx, 表示属性值在两个值的区间之外.")]),s._v(" "),t("td",[s._v("​"),t("code",[s._v("a IS NOT NULL AND (a NOT BETWEEN 10 AND 100)")]),s._v("​: 属性 a 存在且属性 a 的值小于 10 或大于 100.")])]),s._v(" "),t("tr",[t("td",[s._v("IN (xxx, xxx)")]),s._v(" "),t("td",[s._v("表示属性的值在某个集合内. 集合的元素只能是字符串.")]),s._v(" "),t("td",[s._v("​"),t("code",[s._v("a IS NOT NULL AND (a IN ('abc', 'def'))")]),s._v("​: 属性 a 存在且属性 a 的值为 abc 或 def.")])]),s._v(" "),t("tr",[t("td",[s._v("=  <>")]),s._v(" "),t("td",[s._v("等于和不等于. 可用于比较数字和字符串.")]),s._v(" "),t("td",[s._v("​"),t("code",[s._v("a IS NOT NULL AND (a = 'abc' OR a<>'def')")]),s._v("​: 属性 a 存在且属性 a 的值为 abc 或 a 的值不为 def.")])]),s._v(" "),t("tr",[t("td",[s._v("AND OR")]),s._v(" "),t("td",[s._v("逻辑与, 逻辑或. 可用于组合任意简单的逻辑判断, 需要将每个逻辑判断内容放入括号内.")]),s._v(" "),t("td",[s._v("​"),t("code",[s._v("a IS NOT NULL AND (a > 100) OR (b IS NULL)")]),s._v("​: 属性 a 存在且属性 a 的值大于 100 或属性 b 不存在.")])])])]),s._v(" "),t("p",[s._v("由于 SQL 属性过滤是生产者定义消息属性, 消费者设置 SQL 过滤条件, 因此"),t("strong",[s._v("过滤条件的计算结果具有不确定性")]),s._v(", 服务端的处理方式如下:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("异常情况处理")]),s._v(": 如果过滤条件的表达式计算抛异常, 消息默认被过滤, 不会被投递给消费者. 例如比较数字和非数字类型的值.")]),s._v(" "),t("li",[t("strong",[s._v("空值情况处理")]),s._v(": 如果过滤条件的表达式计算值为 null 或不是布尔类型(true和false), 则消息默认被过滤, 不会被投递给消费者. 例如发送消息时未定义某个属性, 在订阅时过滤条件中直接使用该属性, 则过滤条件的表达式计算结果为 null.")]),s._v(" "),t("li",[t("strong",[s._v("数值类型不符处理")]),s._v(": 如果消息自定义属性为浮点型, 但过滤条件中使用整数进行判断, 则消息默认被过滤, 不会被投递给消费者.")])]),s._v(" "),t("blockquote",[t("p",[s._v("使用示例")])]),s._v(" "),t("p",[s._v("发送消息, 同时设置消息 Tag 标签和自定义属性.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" message "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" messageBuilder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTopic")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"topic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消息索引键, 可根据关键字精确查找某条消息. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setKeys")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageKey"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消息Tag, 用于消费端根据指定Tag过滤消息. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 该示例表示消息的Tag设置为"messageTag". ')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTag")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageTag"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消息也可以设置自定义的分类属性, 例如环境标签, 地域, 逻辑分支. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该示例表示为消息自定义一个属性, 该属性为地域, 属性值为杭州. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("addProperty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Region"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hangzhou"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消息体. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setBody")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageBody"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBytes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("订阅消息, 根据单个自定义属性匹配消息.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" topic "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"topic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只订阅地域属性为杭州的消息. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),s._v(" filterExpression "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"Region IS NOT NULL AND Region='Hangzhou'\"")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpressionType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SQL92")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nsimpleConsumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" filterExpression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("订阅消息, 同时根据多个自定义属性匹配消息.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" topic "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"topic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只订阅地域属性为杭州且价格属性大于30的消息. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),s._v(" filterExpression "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"Region IS NOT NULL AND price IS NOT NULL AND Region = 'Hangzhou' AND price > 30\"")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpressionType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SQL92")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nsimpleConsumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" filterExpression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("订阅消息, 匹配 Topic 中的所有消息, 不进行过滤.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" topic "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"topic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 订阅所有消息. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),s._v(" filterExpression "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"True"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpressionType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SQL92")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nsimpleConsumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" filterExpression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h5",{attrs:{id:"使用建议-13"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用建议-13"}},[s._v("#")]),s._v(" 使用建议")]),s._v(" "),t("blockquote",[t("p",[s._v("合理划分主题和Tag标签")])]),s._v(" "),t("p",[s._v("从消息的过滤机制和主题的原理机制可以看出, "),t("strong",[s._v("业务消息的拆分可以基于主题进行筛选, 也可以基于主题内消息的 Tag 标签及属性进行筛选")]),s._v(". 关于拆分方式的选择, 应遵循以下原则:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消息类型是否一致")]),s._v(": 不同类型的消息, 如顺序消息和普通消息需要使用不同的主题进行拆分, 无法通过 Tag 标签进行分类.")]),s._v(" "),t("li",[t("strong",[s._v("业务域是否相同")]),s._v(": 不同业务域和部门的消息应该拆分不同的主题. 例如物流消息和支付消息应该使用两个不同的主题; 同样是一个主题内的物流消息, 普通物流消息和加急物流消息则可以通过不同的 Tag 进行区分.")]),s._v(" "),t("li",[t("strong",[s._v("消息量级和重要性是否一致")]),s._v(": 如果消息的量级规模存在巨大差异, 或者说消息的链路重要程度存在差异, 则应该使用不同的主题进行隔离拆分.")])]),s._v(" "),t("h4",{attrs:{id:"消费者负载均衡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消费者负载均衡"}},[s._v("#")]),s._v(" 消费者负载均衡")]),s._v(" "),t("h5",{attrs:{id:"基础-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础-7"}},[s._v("#")]),s._v(" 基础")]),s._v(" "),t("p",[s._v("消费者从 RocketMQ 获取消息消费时, 通过"),t("strong",[s._v("消费者负载均衡策略, 可将主题内的消息分配给指定消费者分组中的多个消费者共同分担, 提高消费并发能力和消费者的水平扩展能力")]),s._v(". 本文介绍 RocketMQ "),t("mark",[t("strong",[s._v("消费者的负载均衡策略")])]),s._v(".")]),s._v(" "),t("p",[s._v("了解消费者负载均衡策略, 可以帮助解决以下问题:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消息消费处理的容灾策略")]),s._v(": 可以根据消费者负载均衡策略, 明确当局部节点出现故障时, 消息如何进行消费重试和容灾切换.")]),s._v(" "),t("li",[t("strong",[s._v("消息消费的顺序性机制")]),s._v(": 通过消费者负载均衡策略, 可以进一步了解消息消费时, 如何保证同一消息组内消息的先后顺序.")]),s._v(" "),t("li",[t("strong",[s._v("消息分配的水平拆分策略")]),s._v(": 了解消费者负载均衡策略, 可以明确消息消费压力如何被分配到不同节点, 有针对性地进行流量迁移和水平扩缩容.")])]),s._v(" "),t("h5",{attrs:{id:"广播消费和共享消费"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#广播消费和共享消费"}},[s._v("#")]),s._v(" 广播消费和共享消费")]),s._v(" "),t("p",[s._v("在 RocketMQ 领域模型中, "),t("strong",[s._v("同一条消息支持被多个消费者分组订阅, 同时, 对于每个消费者分组可以初始化多个消费者")]),s._v(".")]),s._v(" "),t("p",[s._v("可以根据消费者分组和消费者的不同组合, 实现以下两种不同的消费效果:")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240830232922-fx66jb1.png",alt:"image"}}),s._v("​")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消费组间广播消费")]),s._v(": 如上图所示, "),t("strong",[s._v("每个消费者分组只初始化唯一一个消费者")]),s._v(", 每个消费者可消费到消费者分组内所有的消息, 各消费者分组都订阅相同的消息, 以此实现单客户端级别的广播一对多推送效果. 该方式一般可用于"),t("mark",[t("strong",[s._v("网关推送, 配置推送")])]),s._v("等场景.")]),s._v(" "),t("li",[t("strong",[s._v("消费组内共享消费")]),s._v(": 如上图所示, "),t("strong",[s._v("每个消费者分组下初始化了多个消费者")]),s._v(", 这些消费者共同分担消费者分组内的所有消息, 实现消费者分组内流量的"),t("strong",[s._v("水平拆分和均衡负载")]),s._v(". 该方式一般可用于"),t("strong",[s._v("微服务解耦")]),s._v("场景.")])]),s._v(" "),t("h5",{attrs:{id:"什么是消费者负载均衡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是消费者负载均衡"}},[s._v("#")]),s._v(" 什么是消费者负载均衡")]),s._v(" "),t("p",[s._v("如上文所述, "),t("strong",[s._v("消费组间广播消费场景下, 每个消费者分组内只有一个消费者, 因此不涉及消费者的负载均衡")]),s._v(".")]),s._v(" "),t("p",[s._v("消费组内"),t("strong",[s._v("共享消费")]),s._v("场景下, "),t("strong",[s._v("消费者分组内多个消费者共同分担消息, 消息按照哪种逻辑分配给哪个消费者, 就是由消费者负载均衡策略所决定的")]),s._v(".")]),s._v(" "),t("p",[s._v("根据消费者类型的不同, 消费者负载均衡策略分为以下两种模式:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消息粒度负载均衡")]),s._v(": PushConsumer 和 SimpleConsumer 默认负载策略.")]),s._v(" "),t("li",[t("strong",[s._v("队列粒度负载均衡")]),s._v(": PullConsumer 默认负载策略.")])]),s._v(" "),t("h5",{attrs:{id:"消息粒度负载均衡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消息粒度负载均衡"}},[s._v("#")]),s._v(" 消息粒度负载均衡")]),s._v(" "),t("p",[t("mark",[t("strong",[s._v("消息粒度的负载均衡策略从 RocketMQ 服务端 5.0 版本开始支持, 历史版本 4.x/3.x 版本仅支持队列粒度的负载均衡策略")])]),s._v(". 当使用的 RocketMQ 服务端版本为 5.x 版本时, 两种消费者负载均衡策略均支持, 具体生效的负载均衡策略依客户端版本和消费者类型而定.")]),s._v(" "),t("blockquote",[t("p",[s._v("使用范围")])]),s._v(" "),t("p",[s._v("对于 PushConsumer 和 SimpleConsumer 类型的消费者, 默认且仅使用"),t("strong",[s._v("消息粒度负载均衡策略")]),s._v(".")]),s._v(" "),t("p",[s._v("上述说明是指 5.0 SDK 下, PushConsumer 默认使用消息粒度负载均衡, 对于 3.x/4.x 等 Remoting 协议 SDK 仍然使用了队列粒度负载均衡. 业务集成如无特殊需求, 建议使用新版本机制.")]),s._v(" "),t("blockquote",[t("p",[s._v("策略原理")])]),s._v(" "),t("p",[t("mark",[t("strong",[s._v("消息粒度负载均衡策略中, 同一消费者分组内的多个消费者将按照消息粒度平均分摊主题中的所有消息, 即同一个队列中的消息, 可被平均分配给多个消费者共同消费")])]),s._v(".")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240830233412-1q1tily.png",alt:"image"}}),s._v("​")]),s._v(" "),t("p",[s._v("如上图所示, 消费者分组 Group A 中有三个消费者 A1, A2 和 A3, 这"),t("strong",[s._v("三个消费者将共同消费主题中同一队列 Queue1 中的多条消息")]),s._v(". 注意: 消息粒度负载均衡策略保证同一个队列的消息可以被多个消费者共同处理, 但是该策略使用的"),t("mark",[t("strong",[s._v("消息分配算法结果是随机的, 并不能指定消息被哪一个特定的消费者处理")])]),s._v(".")]),s._v(" "),t("p",[s._v("消息粒度的负载均衡机制, 是基于内部的单条消息确认语义实现的. "),t("strong",[s._v("消费者获取某条消息后, 服务端会将该消息加锁, 保证这条消息对其他消费者不可见, 直到该消息消费成功或消费超时. 因此, 即使多个消费者同时消费同一队列的消息, 服务端也可保证消息不会被多个消费者重复消费")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("顺序消息负载机制")])]),s._v(" "),t("p",[s._v("在顺序消息中, 消息的顺序性指的是同一消息组内的多个消息之间的先后顺序. 因此, "),t("strong",[s._v("顺序消息场景下, 消息粒度负载均衡策略还需要保证同一消息组内的消息, 按照服务端存储的先后顺序进行消费. 不同消费者处理同一个消息组内的消息时, 会严格按照先后顺序锁定消息状态, 确保同一消息组的消息串行消费")]),s._v(".")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240830233943-smkwfww.png",alt:"image"}}),s._v("​")]),s._v(" "),t("p",[s._v("如上图所述, 队列 Queue1 中有 4 条顺序消息, 这 4 条消息属于同一消息组 G1, 存储顺序由 M1 到 M4. 在消费过程中, 前面的消息 M1, M2 被消费者 Consumer A1 处理时, "),t("strong",[s._v("只要消费状态没有提交, 消费者 A2 是无法并行消费后续的 M3, M4 消息的, 必须等前面的消息提交消费状态后才能消费后面的消息")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("策略特点")])]),s._v(" "),t("p",[s._v("相对于队列粒度负载均衡策略, 消息粒度负载均衡策略有以下特点:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消费分摊更均衡")]),s._v(": 对于传统队列级的负载均衡策略, 如果队列数量和消费者数量不均衡, 则可能会出现部分消费者空闲, 或部分消费者处理过多消息的情况. 消息粒度负载均衡策略无需关注消费者和队列的相对数量, 能够更均匀地分摊消息.")]),s._v(" "),t("li",[t("strong",[s._v("对非对等消费者更友好")]),s._v(": 在线上生产环境中, 由于网络机房分区延迟, 消费者物理资源规格不一致等原因, 消费者的处理能力可能会不一致, 如果按照队列分配消息, 则可能出现部分消费者消息堆积, 部分消费者空闲的情况. 消息粒度负载均衡策略按需分配, 消费者处理任务更均衡.")]),s._v(" "),t("li",[t("strong",[s._v("队列分配运维更方便")]),s._v(": 传统基于绑定队列的负载均衡策略必须保证队列数量大于等于消费者数量, 以免产生部分消费者获取不到队列出现空转的情况, 而消息粒度负载均衡策略则无需关注队列数.")])]),s._v(" "),t("blockquote",[t("p",[s._v("适用场景")])]),s._v(" "),t("p",[s._v("消息粒度消费负载均衡策略下, "),t("strong",[s._v("同一队列内的消息离散地分布于多个消费者, 适用于绝大多数在线事件处理的场景")]),s._v(". 只需要基本的消息处理能力, 对消息之间没有批量聚合的诉求. 而对于流式处理, 聚合计算场景, 需要明确地对消息进行聚合, 批处理时, 更适合使用队列粒度的负载均衡策略.")]),s._v(" "),t("blockquote",[t("p",[s._v("使用示例")])]),s._v(" "),t("p",[t("mark",[t("strong",[s._v("消息粒度负载均衡策略不需要额外设置, 对于 PushConsumer 和 SimpleConsumer 消费者类型默认启用")])]),s._v(".")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SimpleConsumer")]),s._v(" simpleConsumer "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费示例一: 使用PushConsumer消费普通消息, 只需要在消费监听器处理即可, 无需关注消息负载均衡. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageListener")]),s._v(" messageListener "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumeResult")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("consume")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageView")]),s._v(" messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 根据消费结果返回状态. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumeResult")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SUCCESS")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费示例二: 使用SimpleConsumer消费普通消息, 主动获取消息处理并提交. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 会按照订阅的主题自动获取, 无需关注消息负载均衡. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageView")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" messageViewList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    messageViewList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" simpleConsumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("receive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Duration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ofSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    messageViewList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费处理完成后, 需要主动调用ACK提交消费结果. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            simpleConsumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ack")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果遇到系统流控等原因造成拉取失败, 需要重新发起获取消息请求. ")]),s._v("\n    e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br")])]),t("h5",{attrs:{id:"队列粒度负载均衡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#队列粒度负载均衡"}},[s._v("#")]),s._v(" 队列粒度负载均衡")]),s._v(" "),t("blockquote",[t("p",[s._v("使用范围")])]),s._v(" "),t("p",[s._v("对于历史版本(服务端 4.x/3.x 版本)的消费者, 包括 PullConsumer, DefaultPushConsumer, DefaultPullConsumer, LitePullConsumer 等, 默认且仅能使用队列粒度负载均衡策略.")]),s._v(" "),t("blockquote",[t("p",[s._v("策略原理")])]),s._v(" "),t("p",[s._v("队列粒度负载均衡策略中, "),t("strong",[s._v("同一消费者分组内的多个消费者将按照队列粒度消费消息, 即每个队列仅被一个消费者消费")]),s._v(".")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240830234246-5ixerx1.png",alt:"image"}}),s._v("​")]),s._v(" "),t("p",[s._v("如上图所示, 主题中的三个队列 Queue1, Queue2, Queue3 被分配给消费者分组中的两个消费者, "),t("strong",[s._v("每个队列只能分配给一个消费者消费")]),s._v(", 该示例中由于队列数大于消费者数, 因此, "),t("strong",[s._v("消费者 A2 被分配了两个队列. 若队列数小于消费者数量, 可能会出现部分消费者无绑定队列的情况")]),s._v(".")]),s._v(" "),t("p",[s._v("队列粒度的负载均衡, 基于队列数量, 消费者数量等运行数据进行统一的算法分配, 将每个队列绑定到特定的消费者, 然后每个消费者按照"),t("strong",[s._v("取消息 > 提交消费位点 > 持久化消费位点")]),s._v("的消费语义处理消息, 取消息过程不提交消费状态, 因此, 为了避免消息被多个消费者重复消费, 每个队列仅支持被一个消费者消费.")]),s._v(" "),t("p",[s._v("备注: 队列粒度负载均衡策略保证同一个队列仅被一个消费者处理, 该策略的实现依赖消费者和服务端的信息协商机制, RocketMQ 并不能保证协商结果完全强一致. 因此, "),t("strong",[s._v("在消费者数量, 队列数量发生变化时, 可能会出现短暂的队列分配结果不一致, 从而导致少量消息被重复处理")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("策略特点")])]),s._v(" "),t("p",[s._v("相对于消息粒度负载均衡策略, 队列粒度负载均衡策略"),t("strong",[s._v("分配粒度较大, 不够灵活")]),s._v(". 但"),t("strong",[s._v("该策略在流式处理场景下有天然优势, 能够保证同一队列的消息被相同的消费者处理, 对于批量处理, 聚合处理更友好")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("适用场景")])]),s._v(" "),t("p",[s._v("队列粒度负载均衡策略"),t("strong",[s._v("适用于流式计算, 数据聚合等需要明确对消息进行聚合, 批处理的场景")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("使用示例")])]),s._v(" "),t("p",[s._v("队列粒度负载均衡策略不需要额外设置, 对于历史版本(服务端4.x/3.x版本)的消费者类型 PullConsumer 默认启用.")]),s._v(" "),t("p",[s._v("具体示例代码, 请访问"),t("a",{attrs:{href:"https://github.com/apache/rocketmq/blob/develop/example/src/main/java/org/apache/rocketmq/example/simple/LitePullConsumerAssign.java",target:"_blank",rel:"noopener noreferrer"}},[s._v("RocketMQ代码库"),t("OutboundLink")],1),s._v("获取.")]),s._v(" "),t("h5",{attrs:{id:"使用建议-14"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用建议-14"}},[s._v("#")]),s._v(" 使用建议")]),s._v(" "),t("blockquote",[t("p",[s._v("针对消费逻辑做消息幂等")])]),s._v(" "),t("p",[t("mark",[t("strong",[s._v("无论是消息粒度负载均衡策略还是队列粒度负载均衡策略, 在消费者上线或下线, 服务端扩缩容等场景下, 都会触发短暂的重新负载均衡动作. 此时可能会存在短暂的负载不一致情况, 出现少量消息重复的现象. 因此, 需要在下游消费逻辑中做好消息幂等去重处理")])]),s._v(".")]),s._v(" "),t("h4",{attrs:{id:"消费进度管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消费进度管理"}},[s._v("#")]),s._v(" 消费进度管理")]),s._v(" "),t("p",[s._v("RocketMQ 通过"),t("strong",[s._v("消费位点管理消费进度")]),s._v(", 本文介绍 RocketMQ 的消费进度管理机制.")]),s._v(" "),t("p",[s._v("RocketMQ 的生产者和消费者在进行消息收发时, 必然会涉及以下场景, "),t("strong",[s._v("消息先生产后订阅或先订阅后生产")]),s._v(". 这两种场景下, 消费者客户端启动后从哪里开始消费? 如何标记已消费的消息? 这些都是由 RocketMQ 的消费进度管理机制来定义的.")]),s._v(" "),t("p",[s._v("通过了解 RocketMQ 的消费进度管理机制, 可以解答以下问题:")]),s._v(" "),t("ul",[t("li",[s._v("消费者启动后从哪里开始消费消息?")]),s._v(" "),t("li",[s._v("消费者每次消费成功后如何标记消息状态, 确保下次不会再重复处理该消息?")]),s._v(" "),t("li",[s._v("某消息被指定消费者消费过一次后, 如果业务出现异常需要做故障恢复, 该消息能否被重新消费?")])]),s._v(" "),t("h5",{attrs:{id:"消费进度原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消费进度原理"}},[s._v("#")]),s._v(" 消费进度原理")]),s._v(" "),t("blockquote",[t("p",[s._v("消息位点(Offset)")])]),s._v(" "),t("p",[s._v("参考 RocketMQ 主题和队列的定义, "),t("strong",[s._v("消息是按到达服务端的先后顺序存储在指定主题的多个队列中, 每条消息在队列中都有一个唯一的 Long 类型坐标, 这个坐标被定义为")]),s._v("​"),t("mark",[t("strong",[s._v("消息位点")])]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("任意一个消息队列在逻辑上都是无限存储, 即消息位点会从 0 到 Long.MAX 无限增加")]),s._v(". 通过主题, 队列和位点就可以定位任意一条消息的位置, 具体关系如下图所示:")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/image-20240825210515-6zmvhe7.png",alt:"image"}})]),s._v(" "),t("p",[t("strong",[s._v("RocketMQ 定义队列中最早一条消息的位点为最小消息位点(MinOffset); 最新一条消息的位点为最大消息位点(MaxOffset)")]),s._v(" . 虽然消息队列逻辑上是无限存储, 但由于服务端物理节点的存储空间有限, RocketMQ 会"),t("strong",[s._v("滚动删除队列中存储最早的消息")]),s._v(". 因此, "),t("strong",[s._v("消息的最小消费位点和最大消费位点会一直递增变化")]),s._v(".")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/image-20240825211501-wadrlsi.png",alt:"image"}})]),s._v(" "),t("blockquote",[t("p",[s._v("消费位点(ConsumerOffset)")])]),s._v(" "),t("p",[s._v("RocketMQ 领域模型为发布订阅模式, "),t("strong",[s._v("每个主题的队列都可以被多个消费者分组订阅. 若某条消息被某个消费者消费后直接被删除, 则其他订阅了该主题的消费者将无法消费该消息")]),s._v(".")]),s._v(" "),t("p",[s._v("因此, RocketMQ 通过消费位点管理消息的消费进度. "),t("strong",[s._v("每条消息被某个消费者消费完成后不会立即在队列中删除, RocketMQ 会基于每个消费者分组维护一份消费记录, 该记录指定消费者分组消费某一个队列时, 消费过的最新一条消息的位点, 即消费位点")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("当消费者客户端离线, 又再次重新上线时, 会严格按照服务端保存的消费进度继续处理消息. 如果服务端保存的历史位点信息已过期被删除, 此时消费位点向前移动至服务端存储的最小位点")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("消费位点的保存和恢复是基于 RocketMQ 服务端的存储实现, 和任何消费者无关")]),s._v(". 因此 RocketMQ 支持跨消费者的消费进度恢复.")]),s._v(" "),t("p",[s._v("队列中消息位点 MinOffset, MaxOffset 和每个消费者分组的消费位点 ConsumerOffset 的关系如下:")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/image-20240825211515-ezfa5lq.png",alt:"image"}})]),s._v(" "),t("ul",[t("li",[t("p",[s._v("​"),t("code",[s._v("ConsumerOffset ≤ MaxOffset")]),s._v("​:")]),s._v(" "),t("ul",[t("li",[s._v("当消费速度和生产速度一致, 且全部消息都处理完成时, 最大消息位点和消费位点相同, 即ConsumerOffset = MaxOffset.")]),s._v(" "),t("li",[s._v("当消费速度较慢小于生产速度时, 队列中会有部分消息未消费, 此时"),t("strong",[s._v("消费位点小于最大消息位点")]),s._v(", 即ConsumerOffset < MaxOffset, 两者之差就是该队列中"),t("strong",[s._v("堆积的消息量")]),s._v(".")])])]),s._v(" "),t("li",[t("p",[s._v("​"),t("code",[s._v("ConsumerOffset ≥ MinOffset")]),s._v("​: 正常情况下有效的消费位点 ConsumerOffset 必然大于等于最小消息位点 MinOffset. 消费位点小于最小消息位点时是无效的, "),t("strong",[s._v("相当于消费者要消费的消息已经从队列中删除了, 是无法消费到的, 此时服务端会将消费位点强制纠正到合法的消息位点")]),s._v(".")])])]),s._v(" "),t("p",[t("mark",[t("strong",[s._v("每个消费组在每个队列上维护一个消费位点(ConsumerOffset), 因为在发布订阅模式中一般会涉及到多个消费者组, 而每个消费者组在每个队列中的消费位置都是不同的")])]),s._v(". 如果此时有多个消费者组, 那么消息被一个消费者组消费完之后是不会删除的(因为其它消费者组也需要), 它仅仅是为每个消费者组维护一个"),t("strong",[s._v("消费位点")]),s._v(", 每次消费者组消费完会返回一个成功的响应, 然后队列再把维护的消费位移加一, 这样就不会出现刚刚消费过的消息再一次被消费了.")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240829222216-3qe4uml.png",alt:"image"}}),s._v("​")]),s._v(" "),t("p",[s._v("所以总结来说, RocketMQ 通过使用在一个 "),t("strong",[s._v("Topic 中配置多个队列并且每个队列维护每个消费者组的消费位置")]),s._v(" 实现了主题模式/发布订阅模式.")]),s._v(" "),t("blockquote",[t("p",[s._v("消费位点初始值")])]),s._v(" "),t("p",[s._v("消费位点初始值指的是"),t("strong",[s._v("消费者分组首次启动消费者消费消息时, 服务端保存的消费位点的初始值")]),s._v(".")]),s._v(" "),t("p",[s._v("RocketMQ "),t("strong",[s._v("定义消费位点的初始值为消费者首次获取消息时, 该时刻队列中的最大消息位点.")]),s._v(" "),t("mark",[t("strong",[s._v("相当于消费者将从队列中最新的消息开始消费")])]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("新创建的ConsumerGroup从哪里开始消费消息?")])]),s._v(" "),t("p",[s._v("5.x SDK, "),t("mark",[t("strong",[s._v("在首次上线时会从服务器中的最新消息开始消费, 也就是从队列的尾部开始消费; 再次重新启动后, 会从最后一次的消费位置继续消费")])]),s._v(".")]),s._v(" "),t("h5",{attrs:{id:"重置消费位点-回溯消费"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重置消费位点-回溯消费"}},[s._v("#")]),s._v(" 重置消费位点(回溯消费)")]),s._v(" "),t("p",[s._v("若消费者分组的初始消费位点或当前消费位点不符合业务预期, 可以通过"),t("strong",[s._v("重置消费位点调整消费进度")]),s._v(".")]),s._v(" "),t("p",[s._v("回溯消费是指"),t("strong",[s._v("已经消费成功")]),s._v("的消息, 由于业务上需求需要"),t("strong",[s._v("重新消费")]),s._v(". 在 RocketMQ 中, Broker 在向 Consumer 投递成功消息后, "),t("strong",[s._v("消息仍然需要保留")]),s._v(". 并且重新消费一般是按照"),t("strong",[s._v("时间维度")]),s._v(", 例如由于 Consumer 系统故障, 恢复后需要重新消费 "),t("strong",[s._v("1 小时前")]),s._v("的数据, 那么 Broker 要提供一种机制, 可以按照时间维度来回退消费进度. "),t("strong",[s._v("RocketMQ 支持按照时间回溯消费, 时间维度精确到毫秒.")])]),s._v(" "),t("blockquote",[t("p",[s._v("适用场景")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("初始消费位点不符合需求")]),s._v(": 因初始消费位点为当前队列的最大消息位点, 即客户端会直接从最新消息开始消费. 若业务上线时需要消费部分历史消息, 可以通过"),t("strong",[s._v("重置消费位点功能消费到指定时刻前的消息")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("消费堆积快速清理")]),s._v(": 当下游消费系统性能不足或消费速度小于生产速度时, 会"),t("strong",[s._v("产生大量堆积消息")]),s._v(". 若这部分堆积消息可以丢弃, 可以通过重置消费位点快速将消费位点更新到指定位置, "),t("strong",[s._v("绕过这部分堆积的消息")]),s._v(", 减少下游处理压力.")]),s._v(" "),t("li",[t("strong",[s._v("业务回溯, 纠正处理")]),s._v(": 由于业务消费逻辑出现异常, 消息被错误处理. 若希望重新消费这些已被处理的消息, 可以通过重置消费位点快速将消费位点更新到历史指定位置, 实现"),t("strong",[s._v("消费回溯")]),s._v(".")])]),s._v(" "),t("blockquote",[t("p",[s._v("重置功能")])]),s._v(" "),t("p",[s._v("RocketMQ 的重置消费位点提供以下能力:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("重置到队列中的指定位点")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("重置到某一时刻对应的消费位点, 匹配位点时, 服务端会根据自动匹配到该时刻最接近的消费位点")]),s._v(".")])]),s._v(" "),t("blockquote",[t("p",[s._v("使用限制")])]),s._v(" "),t("ul",[t("li",[s._v("重置消费位点后消费者将直接从重置后的位点开始消费, 对于回溯重置类场景, "),t("strong",[s._v("重置后的历史消息大多属于存储冷数据, 可能会造成系统压力上升, 一般称为冷读现象")]),s._v(". 因此, 需要谨慎评估重置消费位点后的影响. 建议严格控制重置消费位点接口的调用权限, 避免无意义, 高频次的消费位点重置.")]),s._v(" "),t("li",[s._v("重置消费位点功能"),t("strong",[s._v("只能重置对消费者可见的消息, 不能重置定时中, 重试等待中的消息")]),s._v(".")])]),s._v(" "),t("h5",{attrs:{id:"消息堆积问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消息堆积问题"}},[s._v("#")]),s._v(" 消息堆积问题")]),s._v(" "),t("p",[s._v("消息队列一个很重要的功能是"),t("strong",[s._v("削峰")]),s._v(", 但峰值太大可能造成导致消息堆积在队列中. 产生消息堆积的根源其实就只有两个: "),t("strong",[s._v("生产者生产太快或消费者消费太慢")]),s._v(".")]),s._v(" "),t("p",[s._v("可以从多个角度去思考解决这个问题, 当流量到峰值的时候是因为"),t("strong",[s._v("生产者生产太快")]),s._v(", 可以使用一些"),t("strong",[s._v("限流降级")]),s._v("的方法, 当然也可以增加多个消费者实例去水平扩展增加消费能力来匹配生产的激增. 如果"),t("strong",[s._v("消费者消费过慢")]),s._v("的话, 可以先检查"),t("strong",[s._v("是否是消费者出现了大量的消费错误")]),s._v(", 或者判断是否出现线程卡死或者锁资源不释放等问题.")]),s._v(" "),t("p",[s._v("通常解决消息堆积问题的方法还是"),t("strong",[s._v("增加消费者实例")]),s._v(". 对于 4.X 版本的 RocketMQ, 同时还需要增加每个主题的队列数量, 因为一个队列只会被一个消费者消费. 对于 5.X 版本的 RocketMQ, 已经支持消息粒度的负载均衡, 所以只需要增加消费者即可. 此外, 在性能支持的情况下, 还可以"),t("strong",[s._v("提高消费者的线程数来提高消费并行度")]),s._v(".")]),s._v(" "),t("h5",{attrs:{id:"使用建议-15"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用建议-15"}},[s._v("#")]),s._v(" 使用建议")]),s._v(" "),t("blockquote",[t("p",[s._v("严格控制消费位点重置的权限")])]),s._v(" "),t("p",[t("strong",[s._v("重置消费位点会给系统带来额外处理压力, 可能会影响新消息的读写性能")]),s._v(". 因此该操作请在适用场景下"),t("strong",[s._v("谨慎执行")]),s._v(", 并提前做好合理性和必要性评估.")]),s._v(" "),t("h4",{attrs:{id:"消费重试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消费重试"}},[s._v("#")]),s._v(" 消费重试")]),s._v(" "),t("h5",{attrs:{id:"基础-8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础-8"}},[s._v("#")]),s._v(" 基础")]),s._v(" "),t("p",[t("strong",[s._v("消费者出现异常, 消费某条消息失败时, RocketMQ 会根据消费重试策略重新投递该消息进行故障恢复")]),s._v(". 本文介绍消费重试机制的原理, 版本兼容性和使用建议.")]),s._v(" "),t("p",[s._v("RocketMQ 的消费重试主要"),t("strong",[s._v("解决的是业务处理逻辑失败导致的消费完整性问题, 是一种为业务兜底的策略, 不应该被用做业务流程控制")]),s._v(". 建议以下消费失败场景使用重试机制:")]),s._v(" "),t("p",[s._v("推荐使用消息重试场景如下:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("业务处理失败, 且失败原因跟当前的消息内容相关")]),s._v(", 比如该消息对应的事务状态还未获取到, 预期一段时间后可执行成功.")]),s._v(" "),t("li",[t("strong",[s._v("消费失败的原因不会导致连续性, 即当前消息消费失败是一个小概率事件, 不是常态化的失败, 后面的消息大概率会消费成功")]),s._v(". 此时可以对当前消息进行重试, 避免进程阻塞.")])]),s._v(" "),t("p",[s._v("典型错误使用场景如下:")]),s._v(" "),t("ul",[t("li",[s._v("消费处理逻辑中"),t("strong",[s._v("使用消费失败来做条件判断的结果分流")]),s._v(", 是不合理的, 因为处理逻辑已经预见了一定会大量出现该判断分支.")]),s._v(" "),t("li",[s._v("消费处理中使"),t("strong",[s._v("用消费失败来做处理速率限流, 是不合理的")]),s._v(". 限流的目的是将超出流量的消息暂时堆积在队列中达到削峰的作用, 而不是让消息进入重试链路.")])]),s._v(" "),t("p",[s._v("消息中间件做异步解耦时的一个典型问题是如果下游服务处理消息事件失败, 如何保证整个调用链路的完整性. RocketMQ 作为金融级的可靠业务消息中间件, 在消息投递处理机制的设计上天然支持可靠传输策略, "),t("strong",[s._v("通过完整的确认和重试机制保证每条消息都按照业务的预期被处理")]),s._v(".")]),s._v(" "),t("p",[s._v("了解 RocketMQ 的消息确认机制以及消费重试策略可以分析如下问题:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("如何保证业务完整处理消息")]),s._v(": 了解消费重试策略, 可以在设计实现消费者逻辑时"),t("strong",[s._v("保证每条消息处理的完整性, 避免部分消息出现异常时被忽略, 导致业务状态不一致")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("系统异常时处理中的消息状态如何恢复")]),s._v(": 帮助了解当系统出现异常(宕机故障)等场景时, 处理中的消息状态如何恢复, 是否会出现状态不一致.")])]),s._v(" "),t("h5",{attrs:{id:"消费重试策略概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消费重试策略概述"}},[s._v("#")]),s._v(" 消费重试策略概述")]),s._v(" "),t("p",[s._v("消费重试指的是, "),t("strong",[s._v("消费者在消费某条消息失败后, RocketMQ 服务端会根据重试策略重新消费该消息, 超过一次定数后若还未消费成功, 则该消息将不再继续重试, 直接被发送到")]),s._v("​"),t("mark",[t("strong",[s._v("死信队列")])]),s._v("​"),t("strong",[s._v("中")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("消息重试的触发条件")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消费失败, 包括消费者返回消息失败状态标识或抛出非预期异常")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("消息处理超时")]),s._v(", 包括在 PushConsumer 中排队超时.")])]),s._v(" "),t("blockquote",[t("p",[s._v("消息重试策略主要行为")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("重试过程状态机")]),s._v(": 控制消息在重试流程中的状态和变化逻辑.")]),s._v(" "),t("li",[t("strong",[s._v("重试间隔")]),s._v(": 上一次消费失败或超时后, 下次重新尝试消费的间隔时间.")]),s._v(" "),t("li",[t("strong",[s._v("最大重试次数")]),s._v(": 消息可被重试消费的最大次数.")])]),s._v(" "),t("blockquote",[t("p",[s._v("消息重试策略差异")])]),s._v(" "),t("p",[s._v("根据"),t("strong",[s._v("消费者类型")]),s._v("不同, 消息重试策略的具体内部机制和设置方法有所不同, 具体差异如下:")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("消费者类型")]),s._v(" "),t("th",[s._v("重试过程状态机")]),s._v(" "),t("th",[s._v("重试间隔")]),s._v(" "),t("th",[s._v("最大重试次数")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("PushConsumer")]),s._v(" "),t("td",[s._v("已就绪 处理中 待重试 提交 死信")]),s._v(" "),t("td",[s._v("消费者分组创建时元数据控制. "),t("strong",[s._v("无序消息")]),s._v(": 阶梯间隔  "),t("strong",[s._v("顺序消息")]),s._v(": 固定间隔时间")]),s._v(" "),t("td",[s._v("消费者分组创建时的元数据控制.")])]),s._v(" "),t("tr",[t("td",[s._v("SimpleConsumer")]),s._v(" "),t("td",[s._v("已就绪 处理中 提交 死信")]),s._v(" "),t("td",[s._v("通过 API 修改获取消息时的不可见时间.")]),s._v(" "),t("td",[s._v("消费者分组创建时的元数据控制.")])])])]),s._v(" "),t("p",[s._v("具体的重试策略, 请参见下文 PushConsumer 消费重试策略和 SimpleConsumer 消费重试策略.")]),s._v(" "),t("h5",{attrs:{id:"pushconsumer消费重试策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pushconsumer消费重试策略"}},[s._v("#")]),s._v(" PushConsumer消费重试策略")]),s._v(" "),t("blockquote",[t("p",[s._v("重试状态机")])]),s._v(" "),t("p",[s._v("PushConsumer 消费消息时, 消息的几个主要状态如下:")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/retrymachinestatus-37ddbd0a20b8736e34bb88f565945d16-20240422214454-rbkyt52.png",alt:"Push消费状态机"}})]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("Ready: 已就绪状态")]),s._v(". 消息在 RocketMQ 服务端已就绪, 可以被消费者消费.")]),s._v(" "),t("li",[t("strong",[s._v("Inflight: 处理中状态")]),s._v(". 消息被消费者客户端获取, 处于消费中还未返回消费结果的状态.")]),s._v(" "),t("li",[t("strong",[s._v("WaitingRetry: 待重试状态, PushConsumer 独有的状态")]),s._v(". 当消费者消息处理失败或消费超时, 会触发消费重试逻辑判断. 如果当前重试次数未达到最大次数, 则该"),t("strong",[s._v("消息变为待重试状态, 经过重试间隔后, 消息将重新变为已就绪状态可被重新消费")]),s._v(". 多次重试之间, 可通过"),t("mark",[t("strong",[s._v("重试间隔进行延长, 防止无效高频的失败")])]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("Commit: 提交状态")]),s._v(". 消费成功的状态, 消费者返回成功响应即可结束消息的状态机.")]),s._v(" "),t("li",[t("strong",[s._v("DLQ: 死信状态")]),s._v(". 消费逻辑的最终兜底机制, "),t("strong",[s._v("若消息一直处理失败并不断进行重试, 直到超过最大重试次数还未成功, 此时消息不会再重试, 会被投递至死信队列")]),s._v(". 可以通过消费死信队列的消息进行业务恢复.")])]),s._v(" "),t("p",[s._v("消息重试过程中, 每次重试消息状态都会经过"),t("strong",[s._v("已就绪 > 处理中 > 待重试")]),s._v("的变化, 两次消费间的间隔时间实际由消费耗时及重试间隔控制, 消费耗时的最大上限受服务端系统参数控制, 一般不应该超过上限时间.")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/retrytimeline-27247ef53fbcf08c745b9f7d356de6f9-20240422214454-m5ttq5q.png",alt:"消息间隔时间"}}),s._v("​")]),s._v(" "),t("blockquote",[t("p",[s._v("最大重试次数")])]),s._v(" "),t("p",[s._v("PushConsumer 的最大重试次数由"),t("strong",[s._v("消费者分组创建时的元数据控制")]),s._v(".")]),s._v(" "),t("p",[s._v("例如, 最大重试次数为 3 次, 则该消息最多可被投递 4 次, 1 次为原始消息, 3 次为重试投递次数.")]),s._v(" "),t("blockquote",[t("p",[s._v("重试间隔时间")])]),s._v(" "),t("p",[t("strong",[s._v("无序消息(非顺序消息)")]),s._v(" : 重试间隔为阶梯时间, 具体时间如下:")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"center"}},[s._v("第几次重试")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("与上次重试的间隔时间")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("第几次重试")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("与上次重试的间隔时间")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("1")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("10秒")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("9")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("7分钟")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("2")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("30秒")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("10")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("8分钟")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("3")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("1分钟")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("11")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("9分钟")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("4")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("2分钟")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("12")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("10分钟")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("5")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("3分钟")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("13")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("20分钟")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("6")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("4分钟")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("14")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("30分钟")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("7")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("5分钟")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("15")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("1小时")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("8")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("6分钟")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("16")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("2小时")])])])]),s._v(" "),t("p",[s._v("若重试次数超过 16 次, 后面每次重试间隔都为 2 小时.")]),s._v(" "),t("p",[t("strong",[s._v("顺序消息")]),s._v(": 重试间隔为固定时间 3000ms.")]),s._v(" "),t("blockquote",[t("p",[s._v("使用示例")])]),s._v(" "),t("p",[s._v("PushConsumer 触发消息重试只需要"),t("strong",[s._v("返回消费失败的状态码")]),s._v("即可, 当出现非预期的异常时, 也会被 SDK 捕获.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SimpleConsumer")]),s._v(" simpleConsumer "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费示例: 使用PushConsumer消费普通消息, 如果消费失败返回错误, 即可触发重试. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageListener")]),s._v(" messageListener "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumeResult")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("consume")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageView")]),s._v(" messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回消费失败, 会自动重试, 直至到达最大重试次数. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumeResult")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FAILURE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h5",{attrs:{id:"simpleconsumer消费重试策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#simpleconsumer消费重试策略"}},[s._v("#")]),s._v(" SimpleConsumer消费重试策略")]),s._v(" "),t("blockquote",[t("p",[s._v("重试状态机")])]),s._v(" "),t("p",[s._v("SimpleConsumer 消费消息时, 消息的几个主要状态如下:")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/simplemachinestatus-1844bd0115b315e32661cf20b1732db0-20240422214454-0gyb4cb.png",alt:"SimpleConsumer状态机"}})]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("Ready: 已就绪状态")]),s._v(". 消息在 RocketMQ 服务端已就绪, 可以被消费者消费.")]),s._v(" "),t("li",[t("strong",[s._v("Inflight: 处理中状态")]),s._v(". 消息被消费者客户端获取, 处于消费中还未返回消费结果的状态.")]),s._v(" "),t("li",[t("strong",[s._v("Commit: 提交状态")]),s._v(". 消费成功的状态, 消费者返回成功响应即可结束消息的状态机.")]),s._v(" "),t("li",[t("strong",[s._v("DLQ: 死信状态")]),s._v(". 消费逻辑的最终兜底机制, 若消息一直处理失败并不断进行重试, 直到超过最大重试次数还未成功, 此时消息不会再重试, 会被投递至死信队列. 可以通过消费死信队列的消息进行业务恢复.")])]),s._v(" "),t("p",[s._v("和 PushConsumer 消费重试策略不同的是, SimpleConsumer 消费者的"),t("strong",[s._v("重试间隔是预分配的")]),s._v(", 每次获取消息消费者会在调用 API 时设置一个不可见时间参数 InvisibleDuration, 即消息的最大处理时长. 若消息消费失败触发重试, "),t("strong",[s._v("不需要设置下一次重试的时间间隔, 直接复用不可见时间参数的取值")]),s._v(".")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/simpletimeline-130218b5dca33422638d2ee6409a8330-20240422214454-xrcwhjj.png",alt:"simpleconsumer重试"}}),s._v("​")]),s._v(" "),t("p",[s._v("由于不可见时间为预分配的, 可能和实际业务中的消息处理时间差别较大, 可以通过 API 接口修改不可见时间.")]),s._v(" "),t("p",[s._v("例如, 预设消息处理耗时最多 20 ms, 但实际业务中 20 ms 内消息处理不完, 可以修改消息不可见时间, 延长消息处理时间, 避免消息触发重试机制.")]),s._v(" "),t("p",[s._v("修改消息不可见时间需要满足以下条件:")]),s._v(" "),t("ul",[t("li",[s._v("消息处理未超时")]),s._v(" "),t("li",[s._v("消息处理未提交消费状态")])]),s._v(" "),t("p",[s._v("如下图所示, 消息不可见时间修改后立即生效, 即从调用 API 时刻开始, 重新计算消息不可见时间.")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/changeInvisibletime-769fd45237e26f2ff333ee1149e66d47-20240422214454-l35irdz.png",alt:"修改不可见时间"}})]),s._v(" "),t("blockquote",[t("p",[s._v("最大重试次数")])]),s._v(" "),t("p",[s._v("SimpleConsumer 的最大重试次数由消费者分组创建时的元数据控制, 具体参数参见"),t("a",{attrs:{href:"https://rocketmq.apache.org/zh/docs/domainModel/07consumergroup",target:"_blank",rel:"noopener noreferrer"}},[s._v("消费者分组"),t("OutboundLink")],1),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("消息重试间隔")])]),s._v(" "),t("p",[s._v("消息重试间隔 = 不可见时间 - 消息实际处理时长")]),s._v(" "),t("p",[s._v("SimpleConsumer 的消费重试间隔通过消息的不可见时间控制. 例如, 消息不可见时间为 30 ms, 实际消息处理用了 10 ms 就返回失败响应, 则距下次消息重试还需要 20 ms, 此时的消息重试间隔即为 20 ms; 若直到 30 ms 消息还未处理完成且未返回结果, 则消息超时, 立即重试, 此时重试间隔即为 0 ms.")]),s._v(" "),t("blockquote",[t("p",[s._v("使用示例")])]),s._v(" "),t("p",[s._v("SimpleConsumer 触发消息重试只需要等待即可.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费示例: 使用SimpleConsumer消费普通消息, 如果希望重试, 只需要静默等待超时即可, 服务端会自动重试. ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageView")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" messageViewList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    messageViewList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" simpleConsumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("receive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Duration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ofSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    messageViewList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果处理失败, 希望服务端重试, 只需要忽略即可, 等待消息再次可见后即可重试获取. ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果遇到系统流控等原因造成拉取失败, 需要重新发起获取消息请求. ")]),s._v("\n    e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h5",{attrs:{id:"使用建议-16"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用建议-16"}},[s._v("#")]),s._v(" 使用建议")]),s._v(" "),t("blockquote",[t("p",[s._v("合理重试, 避免因限流等诉求触发消费重试")])]),s._v(" "),t("p",[s._v("前面应用场景中提到, "),t("strong",[s._v("消息重试适用业务处理失败且当前消费为小概率事件的场景, 不适合在连续性失败的场景下使用, 例如消费限流场景")]),s._v(".")]),s._v(" "),t("ul",[t("li",[s._v("错误示例: 如果当前消费速度过高触发限流, 则返回消费失败, 等待下次重新消费.")]),s._v(" "),t("li",[s._v("正确示例: "),t("strong",[s._v("如果当前消费速度过高触发限流, 则延迟获取消息, 稍后再消费")]),s._v(".")])]),s._v(" "),t("blockquote",[t("p",[s._v("合理控制重试次数, 避免无限重试")])]),s._v(" "),t("p",[s._v("虽然 RocketMQ 支持自定义消费重试次数, 但是"),t("strong",[s._v("建议通过减少重试次数 + 延长重试间隔来降低系统压力")]),s._v(", 避免出现无限重试或大量重试的情况.")]),s._v(" "),t("h5",{attrs:{id:"最佳实践-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践-2"}},[s._v("#")]),s._v(" 最佳实践")]),s._v(" "),t("blockquote",[t("p",[s._v("当消费失败的时候如何重新消费消息?")])]),s._v(" "),t("p",[s._v("在集群模式下, 消费的业务逻辑代码会返回消费失败状态, 或者抛出异常, 如果一条消息消费失败, 则会按照设置的最大重试次数"),t("strong",[s._v("重试")]),s._v(", 之后该消息会被"),t("strong",[s._v("丢弃")]),s._v(".")]),s._v(" "),t("p",[s._v("在广播消费模式下, 广播消费仍然保证消息至少被消费一次, 但不提供重发的选项.")]),s._v(" "),t("blockquote",[t("p",[s._v("当消费失败的时候如何找到失败的消息?")])]),s._v(" "),t("p",[s._v("使用"),t("strong",[s._v("按时间的主题查询")]),s._v(", 可以查询到一段时间内的消息.")]),s._v(" "),t("p",[s._v("使用"),t("strong",[s._v("主题和消息 ID 来准确查询")]),s._v("消息.")]),s._v(" "),t("p",[s._v("使用"),t("strong",[s._v("主题和消息的 Key 来准确查询")]),s._v("所有消息 Key 相同的消息.")]),s._v(" "),t("h4",{attrs:{id:"消息存储和清理机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消息存储和清理机制"}},[s._v("#")]),s._v(" 消息存储和清理机制")]),s._v(" "),t("h5",{attrs:{id:"基础-9"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础-9"}},[s._v("#")]),s._v(" 基础")]),s._v(" "),t("p",[s._v("本文介绍 RocketMQ 中消息的存储机制, 包括消息的存储粒度, 判断依据及后续处理策略等.")]),s._v(" "),t("p",[s._v("参考 RocketMQ 中队列的定义, 消息按照达到服务器的先后顺序被存储到队列中, "),t("strong",[s._v("理论上每个队列都支持无限存储")]),s._v(".")]),s._v(" "),t("p",[s._v("但是在实际部署场景中, "),t("strong",[s._v("服务端节点的物理存储空间有限, 消息无法做到永久存储")]),s._v(". 因此, 在实际使用中需要考虑以下问题, "),t("strong",[s._v("消息在服务端中的存储以什么维度为判定条件? 消息存储以什么粒度进行管理? 消息存储超过限制后如何处理? 这些问题都是由消息存储和过期清理机制来定义的")]),s._v(".")]),s._v(" "),t("p",[s._v("了解消息存储和过期清理机制, 可以从以下方面更好的进行运维管理:")]),s._v(" "),t("ul",[t("li",[s._v("提供消息存储时间 SLA, 为业务提供安全冗余空间: 消息存储时间的承诺本质上代表业务侧可以自由获取消息的时间范围. 对于消费时间长, 消息堆积, 故障恢复等场景非常关键.")]),s._v(" "),t("li",[s._v("评估和控制存储成本: RocketMQ 消息一般存储于磁盘介质上, 可以通过存储机制评估消息存储空间, 提前预留存储资源.")])]),s._v(" "),t("h5",{attrs:{id:"消息存储机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消息存储机制"}},[s._v("#")]),s._v(" 消息存储机制")]),s._v(" "),t("blockquote",[t("p",[s._v("原理机制")])]),s._v(" "),t("p",[t("strong",[s._v("RocketMQ 使用")]),s._v("​"),t("mark",[t("strong",[s._v("存储时长")])]),s._v("​"),t("strong",[s._v("作为消息存储的依据, 即每个节点对外承诺消息的存储时长. 在存储时长范围内的消息都会被保留, 无论消息是否被消费; 超过时长限制的消息则会被清理掉")]),s._v(".")]),s._v(" "),t("p",[s._v("消息存储机制主要定义以下关键问题:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消息存储管理粒度")]),s._v(": RocketMQ 按存储节点管理"),t("strong",[s._v("消息的存储时长")]),s._v(", 并不是按照主题或队列粒度来管理.")]),s._v(" "),t("li",[t("strong",[s._v("消息存储判断依据")]),s._v(": 消息存储按照存储时间作为判断依据, 相对于消息数量, 消息大小等条件, 使用存储时间作为判断依据, 更利于业务方对消息数据的价值进行评估.")]),s._v(" "),t("li",[t("strong",[s._v("消息存储和是否消费状态无关")]),s._v(": RocketMQ 的消息存储是按照消息的生产时间计算, 和消息是否被消费无关. 按照统一的计算策略可以有效地简化存储机制.")])]),s._v(" "),t("p",[s._v("消息在队列中的存储情况如下:")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/image-20240825211913-g3o2fjg.png",alt:"image"}})]),s._v(" "),t("blockquote",[t("p",[s._v("消息存储管理粒度说明")])]),s._v(" "),t("p",[s._v("RocketMQ 按照"),t("strong",[s._v("服务端节点粒度管理存储时长而非队列或主题")]),s._v(", 原因如下:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消息存储优势权衡")]),s._v(": RocketMQ 基于统一的物理日志队列和轻量化逻辑队列的二级组织方式, 管理物理数据. 这种机制可以带来"),t("strong",[s._v("顺序读写, 高吞吐, 高性能")]),s._v("等优势, 但缺点是不支持按主题和队列单独管理.")]),s._v(" "),t("li",[t("strong",[s._v("安全生产和容量保障风险要求")]),s._v(": 即使 RocketMQ 按照主题或者队列独立生成存储文件, 但存储层本质还是共享存储介质. 单独根据主题或队列控制存储时长, 这种方式看似更灵活, 但实际上整个集群仍然存在容量风险, 可能会导致存储时长 SLA 被打破. 从安全生产角度考虑, 最合理的方式是将不同存储时长的消息通过不同集群进行分离治理.")])]),s._v(" "),t("blockquote",[t("p",[s._v("消息存储和消费状态关系说明")])]),s._v(" "),t("p",[s._v("RocketMQ "),t("strong",[s._v("统一管理消息的存储时长, 无论消息是否被消费")]),s._v(".")]),s._v(" "),t("p",[t("mark",[t("strong",[s._v("当消费者不在线或消息消费异常时, 会造成队列中大量消息堆积, 且该现象暂时无法有效控制. 若此时按照消费状态考虑将未消费的消息全部保留, 则很容易导致存储空间不足, 进而影响到新消息的读写速度")])]),s._v(".")]),s._v(" "),t("p",[s._v("根据统一地存储时长管理消息, 可以帮助消费者业务清晰地判断每条消息的生命周期. 只要消息在有效期内可以随时被消费, 或通过重置消费位点功能使消息可被消费多次.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息存储文件结构说明")])]),s._v(" "),t("p",[s._v("RocketMQ 消息"),t("strong",[s._v("默认存储在本地磁盘文件中")]),s._v(", 存储文件的根目录由配置参数 storePathRootDir 决定, 存储结构如下图所示, 其中 "),t("strong",[s._v("commitlog 文件夹存储消息物理文件, consumeCQueue文件夹存储逻辑队列索引")]),s._v(", 其他文件的详细作用可以参考代码解析.")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/store-2eb2d519dd4030480ca3ea63f2dc1b70-20240422214502-qg8m0bs.jpg",alt:"消息存储"}})]),s._v(" "),t("h5",{attrs:{id:"消息过期清理机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消息过期清理机制"}},[s._v("#")]),s._v(" 消息过期清理机制")]),s._v(" "),t("p",[s._v("在 RocketMQ 中, 消息保存时长并不能完整控制消息的实际保存时间, 因为消息存储仍然使用本地磁盘, "),t("strong",[s._v("本地磁盘空间不足时, 为保证服务稳定性消息仍然会被强制清理, 导致消息的实际保存时长小于设置的保存时长")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("消息在服务器上可以保存多长时间?")])]),s._v(" "),t("p",[t("strong",[s._v("存储的消息将最多保存 3 天, 超过 3 天未使用的消息将被删除")]),s._v(".")]),s._v(" "),t("h5",{attrs:{id:"使用建议-17"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用建议-17"}},[s._v("#")]),s._v(" 使用建议")]),s._v(" "),t("blockquote",[t("p",[s._v("消息存储时长建议适当增加")])]),s._v(" "),t("p",[s._v("RocketMQ 按存储时长统一控制消息是否保留. 建议在存储成本可控的前提下, "),t("strong",[s._v("尽可能延长消息存储时长")]),s._v(". 延长消息存储时长, 可以为紧急故障恢复, 应急问题排查和消息回溯带来更多的可操作空间.")]),s._v(" "),t("h4",{attrs:{id:"最佳实践-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践-3"}},[s._v("#")]),s._v(" 最佳实践")]),s._v(" "),t("h5",{attrs:{id:"生产者"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生产者"}},[s._v("#")]),s._v(" 生产者")]),s._v(" "),t("h6",{attrs:{id:"发送消息注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发送消息注意事项"}},[s._v("#")]),s._v(" 发送消息注意事项")]),s._v(" "),t("blockquote",[t("p",[s._v("Tag的使用")])]),s._v(" "),t("p",[t("mark",[t("strong",[s._v("一个应用尽可能用一个 Topic, 而消息子类型则可以用 tags 来标识")])]),s._v('. tags 可以由应用自由设置, 只有生产者在发送消息设置了 tags, 消费方在订阅消息时才可以利用 tags 通过 broker 做消息过滤, 5.x SDK 可以调用messageBuilder.setTag("messageTag"), 历史版本可以调用 message.setTags("messageTag").')]),s._v(" "),t("blockquote",[t("p",[s._v("Keys的使用")])]),s._v(" "),t("p",[t("strong",[s._v("每个消息在业务层面一般建议映射到业务的唯一标识并设置到 keys 字段, 方便将来定位消息丢失问题")]),s._v(". 服务器会为每个消息创建索引(哈希索引), 应用可以通过 topic, key 来查询这条消息内容, 以及消息被谁消费. 由于是哈希索引, 请"),t("strong",[s._v("务必保证 key 尽可能唯一, 这样可以避免潜在的哈希冲突")]),s._v(". 常见的设置策略使用订单 Id, 用户 Id, 请求 Id 等比较离散的唯一标识来处理.")]),s._v(" "),t("blockquote",[t("p",[s._v("日志的打印")])]),s._v(" "),t("p",[t("strong",[s._v("消息发送成功或者失败要打印消息日志, 用于业务排查问题")]),s._v(". Send 消息方法只要不抛异常, 就代表发送成功.")]),s._v(" "),t("h6",{attrs:{id:"消息发送失败处理方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消息发送失败处理方式"}},[s._v("#")]),s._v(" 消息发送失败处理方式")]),s._v(" "),t("p",[s._v("Producer 的 send 方法本身支持内部重试, 5.x SDK 的重试逻辑参考发送重试策略.")]),s._v(" "),t("p",[s._v("以上策略也是在一定程度上"),t("strong",[s._v("保证了消息可以发送成功")]),s._v(". 如果业务要求消息发送不能丢, 仍然需要对可能出现的异常做兜底, 比如调用 send 同步方法发送失败时, 则尝试将消息存储到 db, 然后由后台线程定时重试, 确保消息一定到达 Broker.")]),s._v(" "),t("p",[s._v("上述 DB 重试方式为什么没有集成到 MQ 客户端内部做, 而是要求应用自己去完成, 主要基于以下几点考虑: 首先, MQ 的客户端设计为无状态模式, 方便任意的水平扩展, 且对机器资源的消耗仅仅是 cpu, 内存, 网络. 其次, 如果 MQ 客户端内部集成一个 KV 存储模块, 那么数据只有同步落盘才能较可靠, 而同步落盘本身性能开销较大, 所以通常会采用异步落盘, 又由于应用关闭过程不受 MQ 运维人员控制, 可能经常会发生 kill -9 这样暴力方式关闭, 造成数据没有及时落盘而丢失. 第三, Producer 所在机器的可靠性较低, 一般为虚拟机, 不适合存储重要数据. 综上, "),t("strong",[s._v("建议重试过程交由应用来控制")]),s._v(".")]),s._v(" "),t("h5",{attrs:{id:"消费者"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消费者"}},[s._v("#")]),s._v(" 消费者")]),s._v(" "),t("h6",{attrs:{id:"消费过程幂等"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消费过程幂等"}},[s._v("#")]),s._v(" 消费过程幂等")]),s._v(" "),t("p",[t("mark",[t("strong",[s._v("RocketMQ 无法避免消息重复(Exactly-Once), 所以如果业务对消费重复非常敏感, 务必要在业务层面进行去重处理")])]),s._v(". 可以借助关系数据库进行去重. "),t("strong",[s._v("首先需要确定消息的唯一键, 可以是 msgId, 也可以是消息内容中的唯一标识字段, 例如订单 Id 等. 在消费之前判断唯一键是否在关系数据库中存在. 如果不存在则插入, 并消费, 否则跳过")]),s._v(". (实际过程要考虑原子性问题, 判断是否存在可以尝试插入, 如果报主键冲突, 则插入失败, 直接跳过). 也可以使用写入 "),t("strong",[s._v("Redis")]),s._v(" 来保证, 因为 Redis 的 key 和 value 就是"),t("strong",[s._v("天然支持幂等")]),s._v("的.")]),s._v(" "),t("p",[s._v("msgId 一定是全局唯一标识符, 但是实际使用中, 可能会存在相同的消息有两个不同 msgId 的情况(消费者主动重发, 因客户端重投机制导致的重复等), 这种情况就需要使业务字段进行重复消费.")]),s._v(" "),t("p",[s._v("需要"),t("strong",[s._v("根据特定场景使用特定的解决方案")]),s._v(", 要明确消息重复消费是否是"),t("strong",[s._v("完全不能忍受还是可以忍受")]),s._v(", 然后再选择"),t("strong",[s._v("强校验和弱校验")]),s._v("的方式.")]),s._v(" "),t("h6",{attrs:{id:"消费速度慢的处理方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消费速度慢的处理方式"}},[s._v("#")]),s._v(" 消费速度慢的处理方式")]),s._v(" "),t("blockquote",[t("p",[s._v("提高消费并行度")])]),s._v(" "),t("p",[t("strong",[s._v("绝大部分消息消费行为都属于 IO 密集型")]),s._v(", 即可能是操作数据库, 或者调用 RPC, 这类消费行为的消费速度在于后端数据库或者外系统的吞吐量, 通过"),t("strong",[s._v("增加消费并行度, 可以提高总的消费吞吐量")]),s._v(", 但是并行度增加到一定程度, 反而会下降. 所以, 应用必须要设置合理的并行度.")]),s._v(" "),t("p",[s._v("如下有几种修改消费并行度的方法:")]),s._v(" "),t("ul",[t("li",[s._v("同一个 ConsumerGroup 下, 通过"),t("strong",[s._v("增加 Consumer 实例数量来提高并行度")]),s._v(". 可以通过加机器, 或者在已有机器启动多个进程的方式.")]),s._v(" "),t("li",[t("strong",[s._v("提高单个 Consumer 的消费并行线程")]),s._v(", 5.x PushConsumer SDK 可以通过PushConsumerBuilder.setConsumptionThreadCount() "),t("strong",[s._v("设置线程数")]),s._v(", SimpleConsumer 可以由业务线程自由增加并发, 底层线程安全; 历史版本 SDK PushConsumer 可以通过修改参数 consumeThreadMin, consumeThreadMax 实现.")])]),s._v(" "),t("blockquote",[t("p",[s._v("批量方式消费")])]),s._v(" "),t("p",[t("strong",[s._v("某些业务流程如果支持批量方式消费, 则可以很大程度上提高消费吞吐量")]),s._v(", 例如订单扣款类应用, 一次处理一个订单耗时 1s, 一次处理 10 个订单可能也只耗时 2s, 这样即可大幅度提高消费的吞吐量. 建议使用 5.x SDK 的SimpleConsumer, 每次接口调用设置批次大小, 一次性拉取消费多条消息.")]),s._v(" "),t("blockquote",[t("p",[s._v("重置位点跳过非重要消息")])]),s._v(" "),t("p",[s._v("发生消息堆积时, 如果消费速度一直追不上发送速度, "),t("strong",[s._v("如果业务对数据要求不高的话, 可以选择丢弃不重要的消息")]),s._v(". 建议使用重置位点功能直接调整消费位点到指定时刻或者指定位置.")]),s._v(" "),t("blockquote",[t("p",[s._v("优化每条消息消费过程")])]),s._v(" "),t("p",[s._v("举例如下, 某条消息的消费过程如下:")]),s._v(" "),t("ul",[t("li",[s._v("根据消息从 DB 查询【数据 1】")]),s._v(" "),t("li",[s._v("根据消息从 DB 查询【数据 2】")]),s._v(" "),t("li",[s._v("复杂的业务计算")]),s._v(" "),t("li",[s._v("向 DB 插入【数据 3】")]),s._v(" "),t("li",[s._v("向 DB 插入【数据 4】")])]),s._v(" "),t("p",[s._v("这条消息的消费过程中有 4 次与 DB 的交互, 如果按照每次 5ms 计算, 那么总共耗时 20ms, 假设业务计算耗时 5ms, 那么总过耗时 25ms, 所以如果能把 4 次 DB 交互优化为 2 次, 那么总耗时就可以优化到 15ms, 即总体性能提高了 40%. 所以应用如果对时延敏感的话, 可以把 DB 部署在 SSD 硬盘, 相比于 SCSI 磁盘, 前者的 RT 会小很多.")]),s._v(" "),t("h6",{attrs:{id:"消费打印日志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消费打印日志"}},[s._v("#")]),s._v(" 消费打印日志")]),s._v(" "),t("p",[t("strong",[s._v("如果消息量较少, 建议在消费入口方法打印消息, 消费耗时等, 方便后续排查问题")]),s._v(".")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumeResult")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("consume")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageView")]),s._v(" messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("LOGGER")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("info")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Consume message={}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Do your consume process")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumeResult")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SUCCESS")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("如果能打印每条消息消费耗时, 那么在排查消费慢等线上问题时, 会更方便. 但如果线上环境 TPS 很高, 不建议开启, 避免日志太多影响性能.")]),s._v(" "),t("h5",{attrs:{id:"其他"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[s._v("#")]),s._v(" 其他")]),s._v(" "),t("blockquote",[t("p",[s._v("主题管理尽量避免自动化机制")])]),s._v(" "),t("p",[s._v("在 RocketMQ 架构中, 主题属于顶层资源和容器, 拥有独立的权限管理, 可观测性指标采集和监控等能力, 创建和管理主题会占用一定的系统资源. 消费分组属于状态管理类的逻辑资源, 每个消费分组都会涉及关联的消费状态, 堆积信息, 可观测指标和监控采集数据. 因此, "),t("strong",[s._v("生产环境需要严格管理主题和消费者组资源, 请勿随意进行增, 删, 改, 查操作")]),s._v(".")]),s._v(" "),t("p",[s._v("RocketMQ 虽然提供了自动创建主题的功能, 但是建议仅在测试环境使用, 生产环境请勿打开, 避免产生大量垃圾主题, 无法管理和回收并浪费系统资源.")]),s._v(" "),t("h4",{attrs:{id:"参数约束和建议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数约束和建议"}},[s._v("#")]),s._v(" 参数约束和建议")]),s._v(" "),t("p",[s._v("RocketMQ 系统中存在很多自定义参数和资源命名, 在使用 RocketMQ 时建议参考如下说明规范系统设置, 避对某些具体参数设置不合理导致应用出现异常.")]),s._v(" "),t("blockquote",[t("p",[s._v("Topic名称与ConsumerGroup名称")])]),s._v(" "),t("p",[s._v("字符建议: 字母 a~z 或 A~Z, 数字 0~9 以及下划线(_), 短划线(-)和百分号(%).")]),s._v(" "),t("p",[s._v("长度建议: "),t("strong",[s._v("1~64 个字符")]),s._v(".")]),s._v(" "),t("p",[s._v("Topic 命名应该尽量使用简短, 常用的字符, 避免使用特殊字符. 特殊字符会导致系统解析出现异常, 字符过长可能会导致消息收发被拒绝.")]),s._v(" "),t("blockquote",[t("p",[s._v("请求超时时间")])]),s._v(" "),t("p",[t("strong",[s._v("默认值: 3000 毫秒")]),s._v(".")]),s._v(" "),t("p",[s._v("取值范围: 该参数为客户端本地行为, 取值范围建议不要超过 30000 毫秒.")]),s._v(" "),t("p",[s._v("请求超时时间是客户端本地同步调用的等待时间, 请根据实际应用设置合理的取值, 避免线程阻塞时间过长.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息大小")])]),s._v(" "),t("p",[s._v("默认值: 不超过 4 MB. 不涉及消息压缩, 仅计算消息体 body 的大小.")]),s._v(" "),t("p",[s._v("取值范围: 建议不超过 4 MB.")]),s._v(" "),t("p",[s._v("消息传输应尽量压缩和控制负载大小, 避免超大文件传输. "),t("strong",[s._v("若消息大小不满足限制要求, 可以尝试分割消息或使用 OSS 存储, 用消息传输 URL")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("MessageGroup")])]),s._v(" "),t("p",[s._v("字符限制: 所有可见字符.")]),s._v(" "),t("p",[s._v("长度建议: 1~64 字节.")]),s._v(" "),t("p",[s._v("MessageGroup 是"),t("strong",[s._v("顺序消息的分组标识")]),s._v(". 一般设置为需要保证顺序的一组消息标识, 例如订单 ID, 用户 ID 等.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息发送重试次数")])]),s._v(" "),t("p",[t("strong",[s._v("默认值: 3 次")]),s._v(".")]),s._v(" "),t("p",[s._v("取值范围: 无限制.")]),s._v(" "),t("p",[s._v("消息发送重试是客户端 SDK 内置的重试策略, 对应用不可见, "),t("strong",[s._v("建议取值不要过大, 避免阻塞业务线程")]),s._v(". 如果消息达到最大重试次数后还未发送成功, 建议业务侧做好兜底处理, 保证消息可靠性.")]),s._v(" "),t("blockquote",[t("p",[s._v("消息消费重试次数")])]),s._v(" "),t("p",[t("strong",[s._v("默认值: 16 次.")])]),s._v(" "),t("p",[s._v("消费重试次数应"),t("strong",[s._v("根据实际业务需求设置合理的参数值")]),s._v(", 避免使用重试进行无限触发. 重试次数过大容易造成系统压力过量增加.")]),s._v(" "),t("blockquote",[t("p",[s._v("事务异常检查间隔")])]),s._v(" "),t("p",[s._v("默认值: 60 秒.")]),s._v(" "),t("p",[s._v("事务异常检查间隔指的是, 半事务消息因系统重启或异常情况导致没有提交, 生产者客户端会按照该间隔时间进行事务状态回查. 间隔时长不建议设置过短, 否则频繁的回查调用会影响系统性能.")]),s._v(" "),t("blockquote",[t("p",[s._v("半事务消息第一次回查时间")])]),s._v(" "),t("p",[s._v("默认值: 取值等于 [事务异常检查间隔] * 最大限制: 不超过 1 小时.")]),s._v(" "),t("blockquote",[t("p",[s._v("半事务消息最大超时时长")])]),s._v(" "),t("p",[s._v("默认值: 4 小时. 取值范围: 不支持自定义修改.")]),s._v(" "),t("p",[s._v("半事务消息因系统重启或异常情况导致没有提交, 生产者客户端会按照事务异常检查间隔时间进行回查, 若超过半事务消息超时时长后没有返回结果, 半事务消息将会被强制回滚. 您可以通过监控该指标避免异常事务.")]),s._v(" "),t("blockquote",[t("p",[s._v("PushConsumer本地缓存")])]),s._v(" "),t("p",[s._v("默认值: 最大缓存数量: 1024 条. 最大缓存大小: 64 M.")]),s._v(" "),t("p",[s._v("取值范围: 支持用户自定义设置, 无限制.")]),s._v(" "),t("p",[t("strong",[s._v("消费者类型为 PushConsumer 时, 为提高消费者吞吐量和性能, 客户端会在 SDK 本地缓存部分消息. 缓存的消息的数量和大小应设置在系统内存允许的范围内.")])]),s._v(" "),t("blockquote",[t("p",[s._v("PushConsumer消费并发度")])]),s._v(" "),t("p",[s._v("默认值: 20 个线程.")]),s._v(" "),t("blockquote",[t("p",[s._v("获取消息最大批次")])]),s._v(" "),t("p",[s._v("默认值: 32 条.")]),s._v(" "),t("p",[s._v("消费者从服务端获取消息时, 一次获取到最大消息条数. 建议按照实际业务设置合理的参数值, "),t("strong",[s._v("一次获取消息数量过大容易在消费失败时造成大批量消息重复")]),s._v(".")]),s._v(" "),t("h3",{attrs:{id:"部署与运维"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署与运维"}},[s._v("#")]),s._v(" 部署与运维")]),s._v(" "),t("h4",{attrs:{id:"快速安装与消息发送实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速安装与消息发送实例"}},[s._v("#")]),s._v(" 快速安装与消息发送实例")]),s._v(" "),t("p",[s._v("这一节介绍如何快速"),t("strong",[s._v("部署一个单节点单副本 RocketMQ 服务, 并完成简单的消息收发")]),s._v(".")]),s._v(" "),t("p",[s._v("系统要求: 64 位操作系统, 推荐 Linux/Unix/macOS; 64 位 JDK 1.8+.")]),s._v(" "),t("blockquote",[t("p",[s._v("1.安装RocketMQ")])]),s._v(" "),t("p",[s._v("RocketMQ 的安装包分为两种, 二进制包和源码包.  点击"),t("a",{attrs:{href:"https://dist.apache.org/repos/dist/release/rocketmq/5.2.0/rocketmq-all-5.2.0-source-release.zip",target:"_blank",rel:"noopener noreferrer"}},[s._v("这里"),t("OutboundLink")],1),s._v(" 下载 RocketMQ 5.2.0 的源码包. 也可以从"),t("a",{attrs:{href:"https://dist.apache.org/repos/dist/release/rocketmq/5.2.0/rocketmq-all-5.2.0-bin-release.zip",target:"_blank",rel:"noopener noreferrer"}},[s._v("这里"),t("OutboundLink")],1),s._v(" 下载到二进制包. 二进制包是已经编译完成后可以直接运行的, 源码包是需要编译后运行的.")]),s._v(" "),t("p",[s._v("这里以在 Linux 环境下利用社区 5.2.0 的源码包为例, 介绍 RocketMQ 安装过程.")]),s._v(" "),t("p",[s._v("解压 5.2.0 的源码包并编译构建二进制可执行文件:")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unzip")]),s._v(" rocketmq-all-5.2.0-source-release.zip\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" rocketmq-all-5.2.0-source-release/\n$ mvn -Prelease-all "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-DskipTests")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-Dspotbugs.skip")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true clean "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-U")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" distribution/target/rocketmq-5.2.0/rocketmq-5.2.0\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("blockquote",[t("p",[s._v("2.启动NameServer")])]),s._v(" "),t("p",[s._v("安装完 RocketMQ 包后, 启动 NameServer.")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动namesrv")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqnamesrv "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 验证namesrv是否启动成功")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" ~/logs/rocketmqlogs/namesrv.log\nThe Name Server boot success"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("可以在 namesrv.log 中看到 'The Name Server boot success..', 表示NameServer 已成功启动.")]),s._v(" "),t("blockquote",[t("p",[s._v("3.启动Broker+Proxy")])]),s._v(" "),t("p",[s._v("NameServer成功启动后, 启动 Broker 和 Proxy, 5.x 版本下建议使用 Local 模式部署, 即 Broker 和 Proxy 同进程部署. 5.x 版本也支持 Broker 和 Proxy 分离部署以实现更灵活的集群能力.")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 先启动broker")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" localhost:9876 --enable-proxy "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 验证broker是否启动成功, 比如broker的ip是192.168.1.2 然后名字是broker-a")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" ~/logs/rocketmqlogs/proxy.log \nThe broker"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("broker-a,192.169.1.2:10911"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" boot success"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v('可以在 proxy.log 中看到 "The broker[brokerName,ip:port] boot success..", 这表明 broker 已成功启动.')]),s._v(" "),t("p",[s._v("至此, 一个单节点副本的 RocketMQ 集群已经部署起来了, 可以利用脚本进行简单的消息收发.")]),s._v(" "),t("blockquote",[t("p",[s._v("4.工具测试消息收发")])]),s._v(" "),t("p",[s._v("在进行工具测试消息收发之前, 需要告诉客户端 NameServer 的地址, RocketMQ 有多种方式在客户端中设置 NameServer 地址, 这里 利用环境变量 "),t("code",[s._v("NAMESRV_ADDR")]),s._v("​.")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NAMESRV_ADDR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("localhost:9876\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/tools.sh org.apache.rocketmq.example.quickstart.Producer\n SendResult "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("sendStatus"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("SEND_OK, "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("msgId")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/tools.sh org.apache.rocketmq.example.quickstart.Consumer\n ConsumeMessageThread_%d Receive New Messages: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("MessageExt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("blockquote",[t("p",[s._v("5.SDK测试消息收发")])]),s._v(" "),t("p",[s._v("工具测试完成后, 可以尝试使用 SDK 收发消息. 这里以 Java SDK 为例介绍一下消息收发过程, 可以从 "),t("a",{attrs:{href:"https://github.com/apache/rocketmq-clients",target:"_blank",rel:"noopener noreferrer"}},[s._v("rocketmq-clients"),t("OutboundLink")],1),s._v(" 中参阅更多细节.")]),s._v(" "),t("p",[s._v("(1) 在 IDEA 中创建一个 Java 工程.")]),s._v(" "),t("p",[s._v("(2) 在 pom.xml 文件中添加以下依赖引入 Java 依赖库, 将 "),t("code",[s._v("rocketmq-client-java-version")]),s._v("​ 替换成"),t("a",{attrs:{href:"https://search.maven.org/search?q=g:org.apache.rocketmq%20AND%20a:rocketmq-client-java",target:"_blank",rel:"noopener noreferrer"}},[s._v("最新的版本"),t("OutboundLink")],1),s._v(".")]),s._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("org.apache.rocketmq"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("rocketmq-client-java"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("${rocketmq-client-java-version}"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("(3) 通过 mqadmin 创建 Topic.")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqadmin updatetopic "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" localhost:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" TestTopic "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" DefaultCluster\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("(4) 在已创建的 Java 工程中, 创建发送普通消息程序并运行, 示例代码如下:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rocketmq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientConfiguration")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rocketmq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientConfigurationBuilder")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rocketmq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rocketmq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientServiceProvider")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rocketmq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("message"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rocketmq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("producer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Producer")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rocketmq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("producer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SendReceipt")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("slf4j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Logger")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("slf4j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LoggerFactory")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ProducerExample")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Logger")]),s._v(" logger "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LoggerFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getLogger")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ProducerExample")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 接入点地址, 需要设置成Proxy的地址和端口列表, 一般是xxx:8081;xxx:8081. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" endpoint "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"localhost:8081"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消息发送的目标Topic名称, 需要提前创建. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" topic "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TestTopic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientServiceProvider")]),s._v(" provider "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientServiceProvider")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadService")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientConfigurationBuilder")]),s._v(" builder "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientConfiguration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setEndpoints")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("endpoint"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientConfiguration")]),s._v(" configuration "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" builder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始化Producer时需要设置通信配置以及预绑定的Topic. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Producer")]),s._v(" producer "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" provider"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newProducerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTopics")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setClientConfiguration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("configuration"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 普通消息发送. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" message "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" provider"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newMessageBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTopic")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消息索引键, 可根据关键字精确查找某条消息. ")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setKeys")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageKey"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消息Tag, 用于消费端根据指定Tag过滤消息. ")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTag")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageTag"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消息体. ")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setBody")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"messageBody"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBytes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送消息, 需要关注发送结果, 并捕获失败等异常. ")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SendReceipt")]),s._v(" sendReceipt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" producer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("message"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            logger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("info")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Send message successfully, messageId={}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sendReceipt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getMessageId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            logger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Failed to send message"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// producer.close();")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br")])]),t("p",[s._v("(5) 在已创建的 Java 工程中, 创建订阅普通消息程序并运行. "),t("strong",[s._v("RocketMQ 支持 SimpleConsumer 和 PushConsumer 两种消费者类型")]),s._v(", 可以选择以下任意一种方式订阅消息.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOException")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Collections")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rocketmq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientConfiguration")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rocketmq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rocketmq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientServiceProvider")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rocketmq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("consumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumeResult")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rocketmq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("consumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rocketmq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("consumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpressionType")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rocketmq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("consumer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PushConsumer")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("slf4j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Logger")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("slf4j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LoggerFactory")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PushConsumerExample")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Logger")]),s._v(" logger "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LoggerFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getLogger")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PushConsumerExample")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PushConsumerExample")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientServiceProvider")]),s._v(" provider "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientServiceProvider")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadService")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 接入点地址, 需要设置成Proxy的地址和端口列表, 一般是xxx:8081;xxx:8081. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" endpoints "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"localhost:8081"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientConfiguration")]),s._v(" clientConfiguration "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClientConfiguration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setEndpoints")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("endpoints"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 订阅消息的过滤规则, 表示订阅所有Tag的消息. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" tag "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),s._v(" filterExpression "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpression")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("tag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterExpressionType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为消费者指定所属的消费者分组, Group需要提前创建. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" consumerGroup "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YourConsumerGroup"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定需要订阅哪个目标Topic, Topic需要提前创建. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" topic "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TestTopic"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始化PushConsumer, 需要绑定消费者分组ConsumerGroup, 通信参数以及订阅关系. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PushConsumer")]),s._v(" pushConsumer "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" provider"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newPushConsumerBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setClientConfiguration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("clientConfiguration"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消费者分组. ")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setConsumerGroup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("consumerGroup"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置预绑定的订阅关系. ")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setSubscriptionExpressions")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Collections")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("singletonMap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" filterExpression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置消费监听器. ")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setMessageListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("messageView "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 处理消息并返回消费结果. ")]),s._v("\n                logger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("info")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Consume message successfully, messageId={}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" messageView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getMessageId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsumeResult")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SUCCESS")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAX_VALUE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果不需要再使用 PushConsumer, 可关闭该实例. ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// pushConsumer.close();")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br")])]),t("h4",{attrs:{id:"部署方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署方式"}},[s._v("#")]),s._v(" 部署方式")]),s._v(" "),t("p",[s._v("RocketMQ 5.0 版本完成基本消息收发, 包括 NameServer, Broker, Proxy 组件. 在 5.0 版本中 "),t("strong",[s._v("Proxy 和 Broker 根据实际诉求可以分为 Local 模式和 Cluster 模式")]),s._v(", 一般情况下如果没有特殊需求, 或者遵循从早期版本平滑升级的思路, 可以选用 Local 模式.")]),s._v(" "),t("ul",[t("li",[s._v("在 Local 模式下, "),t("strong",[s._v("Broker 和 Proxy 是同进程部署")]),s._v(", 只是在原有 Broker 的配置基础上新增 Proxy 的简易配置就可以运行.")]),s._v(" "),t("li",[s._v("在 Cluster 模式下, "),t("strong",[s._v("Broker 和 Proxy 分别部署")]),s._v(", 即在原有的集群基础上, 额外再部署 Proxy 即可.")])]),s._v(" "),t("h5",{attrs:{id:"local模式部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#local模式部署"}},[s._v("#")]),s._v(" Local模式部署")]),s._v(" "),t("p",[t("strong",[s._v("由于 Local 模式下 Proxy 和 Broker 是同进程部署, Proxy 本身无状态, 因此主要的集群配置仍然以 Broker 为基础进行即可")]),s._v(".")]),s._v(" "),t("h6",{attrs:{id:"启动nameserver"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动nameserver"}},[s._v("#")]),s._v(" 启动NameServer")]),s._v(" "),t("p",[t("strong",[s._v("NameServer 需要先于 Broker 启动")]),s._v(", 且如果在生产环境使用, 为了保证高可用, 建议"),t("strong",[s._v("一般规模的集群启动 3 个NameServer")]),s._v(", 各节点的启动命令相同, 如下:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 首先启动Name Server")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" mqnamesrv "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 验证Name Server 是否启动成功")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" ~/logs/rocketmqlogs/namesrv.log\nThe Name Server boot success"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h6",{attrs:{id:"启动broker-proxy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动broker-proxy"}},[s._v("#")]),s._v(" 启动Broker+Proxy")]),s._v(" "),t("blockquote",[t("p",[s._v("多组节点(集群)单副本模式")])]),s._v(" "),t("p",[t("strong",[s._v("一个集群内全部部署 Master 角色, 不部署 Slave 副本")]),s._v(", 例如 2 个 Master 或者 3 个 Master, 这种模式的优缺点如下:")]),s._v(" "),t("ul",[t("li",[s._v("优点: 配置简单, 单个 Master 宕机或重启维护对应用无影响, 在磁盘配置为 RAID10 时, 即使机器宕机不可恢复情况下, 由于 RAID10 磁盘非常可靠, 消息也不会丢(异步刷盘丢失少量消息, 同步刷盘一条不丢), 性能最高;")]),s._v(" "),t("li",[s._v("缺点: 单台机器宕机期间, 这台机器上未被消费的消息在机器恢复之前不可订阅, 消息实时性会受到影响.")])]),s._v(" "),t("p",[s._v("启动 Broker+Proxy 集群")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器A, 启动第一个Master, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-noslave/broker-a.properties --enable-proxy "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器B, 启动第二个Master, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-noslave/broker-b.properties --enable-proxy "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("如上启动命令是在单个 NameServer 情况下使用的. 对于多个 NameServer 的集群, Broker 启动命令中 "),t("code",[s._v("-n")]),s._v("​ 后面的地址列表用分号隔开即可, 例如 "),t("code",[s._v("192.168.1.1:9876;192.161.2:9876")]),s._v("​.")]),s._v(" "),t("blockquote",[t("p",[s._v("多节点(集群)多副本模式-异步复制")])]),s._v(" "),t("p",[t("strong",[s._v("每个 Master 配置一个 Slave, 有多组 Master-Slave, HA 采用异步复制方式")]),s._v(", 主备有短暂消息延迟(毫秒级), 这种模式的优缺点如下:")]),s._v(" "),t("ul",[t("li",[s._v("优点: 即使磁盘损坏, 消息丢失的非常少, 且消息实时性不会受影响, 同时 Master 宕机后, 消费者仍然可以从 Slave 消费, 而且此过程对应用透明, 不需要人工干预, 性能同多 Master 模式几乎一样;")]),s._v(" "),t("li",[s._v("缺点: Master 宕机, 磁盘损坏情况下会丢失少量消息.")])]),s._v(" "),t("p",[s._v("启动 Broker+Proxy 集群:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器A, 启动第一个Master, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-2s-async/broker-a.properties --enable-proxy "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器B, 启动第二个Master, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-2s-async/broker-b.properties --enable-proxy "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器C, 启动第一个Slave, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-2s-async/broker-a-s.properties --enable-proxy "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器D, 启动第二个Slave, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-2s-async/broker-b-s.properties --enable-proxy "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("blockquote",[t("p",[s._v("多节点(集群)多副本模式-同步双写")])]),s._v(" "),t("p",[t("strong",[s._v("每个 Master 配置一个 Slave, 有多对 Master-Slave, HA 采用同步双写方式")]),s._v(", 即只有主备都写成功, 才向应用返回成功, 这种模式的优缺点如下:")]),s._v(" "),t("ul",[t("li",[s._v("优点: 数据与服务都无单点故障, Master 宕机情况下, 消息无延迟, 服务可用性与数据可用性都非常高;")]),s._v(" "),t("li",[s._v("缺点: 性能比异步复制模式略低(大约低 10% 左右), 发送单个消息的 RT 会略高, 且目前版本在主节点宕机后, 备机不能自动切换为主机.")])]),s._v(" "),t("p",[s._v("启动 Broker+Proxy 集群")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器A, 启动第一个Master, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-2s-sync/broker-a.properties --enable-proxy "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器B, 启动第二个Master, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-2s-sync/broker-b.properties --enable-proxy "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器C, 启动第一个Slave, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-2s-sync/broker-a-s.properties --enable-proxy "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器D, 启动第二个Slave, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-2s-sync/broker-b-s.properties --enable-proxy "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("提示: 以上 Broker 与 Slave 配对是通过指定相同的 BrokerName 参数来配对, Master 的 BrokerId 必须是 0, Slave 的 BrokerId 必须是大于 0 的数. 另外一个 Master 下面可以挂载多个 Slave, 同一 Master 下的多个 Slave 通过指定不同的 BrokerId 来区分. $ROCKETMQ_HOME 指的 RocketMQ 安装目录, 需要用户自己设置此环境变量.")]),s._v(" "),t("blockquote",[t("p",[s._v("5.0 HA新模式")])]),s._v(" "),t("p",[s._v("提供更具灵活性的 HA 机制, 让用户更好的平衡成本, 服务可用性, 数据可靠性, 同时支持业务消息和流存储的场景.")]),s._v(" "),t("h5",{attrs:{id:"cluster模式部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cluster模式部署"}},[s._v("#")]),s._v(" Cluster模式部署")]),s._v(" "),t("p",[t("strong",[s._v("在 Cluster 模式下, Broker 与 Proxy 分别部署, 可以在 NameServer 和 Broker 都启动完成之后再部署 Proxy")]),s._v(".")]),s._v(" "),t("p",[s._v("在 Cluster 模式下, 一个 Proxy 集群和 Broker 集群为一一对应的关系, 可以在 Proxy 的配置文件 "),t("code",[s._v("rmq-proxy.json")]),s._v("​ 中使用 "),t("code",[s._v("rocketMQClusterName")]),s._v("​ 进行配置.")]),s._v(" "),t("h6",{attrs:{id:"启动nameserver-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动nameserver-2"}},[s._v("#")]),s._v(" 启动NameServer")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 首先启动Name Server")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" mqnamesrv "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 验证Name Server 是否启动成功")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" ~/logs/rocketmqlogs/namesrv.log\nThe Name Server boot success"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h6",{attrs:{id:"启动broker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动broker"}},[s._v("#")]),s._v(" 启动Broker")]),s._v(" "),t("blockquote",[t("p",[s._v("多组节点(集群)单副本模式")])]),s._v(" "),t("p",[t("strong",[s._v("一个集群内全部部署 Master 角色, 不部署 Slave 副本")]),s._v(", 例如 2 个 Master 或者 3 个 Master, 这种模式的优缺点如下:")]),s._v(" "),t("ul",[t("li",[s._v("优点: 配置简单, "),t("strong",[s._v("单个 Master 宕机或重启维护对应用无影响")]),s._v(", 在磁盘配置为 RAID10 时, 即使机器宕机不可恢复情况下, 由于 RAID10 磁盘非常可靠, 消息也不会丢(异步刷盘丢失少量消息, 同步刷盘一条不丢), 性能最高;")]),s._v(" "),t("li",[s._v("缺点: 单台机器宕机期间, 这台机器上未被消费的消息在机器恢复之前不可订阅, 消息实时性会受到影响.")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器A, 启动第一个Master, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-noslave/broker-a.properties "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器B, 启动第二个Master, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-noslave/broker-b.properties "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("备注: 如上启动命令是在单个 NameServer 情况下使用的. 对于多个 NameServer 的集群, Broker 启动命令中 "),t("code",[s._v("-n")]),s._v("​ 后面的地址列表用分号隔开即可, 例如 "),t("code",[s._v("192.168.1.1:9876;192.161.2:9876")]),s._v("​.")]),s._v(" "),t("blockquote",[t("p",[s._v("多节点(集群)多副本模式-异步复制")])]),s._v(" "),t("p",[t("strong",[s._v("每个 Master 配置一个 Slave, 有多组 Master-Slave, HA 采用异步复制方式, 主备有短暂消息延迟")]),s._v("(毫秒级), 这种模式的优缺点如下:")]),s._v(" "),t("ul",[t("li",[s._v("优点: 即使磁盘损坏, 消息丢失的非常少, 且消息实时性不会受影响, 同时 Master 宕机后, 消费者仍然可以从 Slave 消费, 而且此过程对应用透明, 不需要人工干预, 性能同多 Master 模式几乎一样;")]),s._v(" "),t("li",[s._v("缺点: Master 宕机, 磁盘损坏情况下会丢失少量消息.")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器A, 启动第一个Master, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-2s-async/broker-a.properties "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器B, 启动第二个Master, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-2s-async/broker-b.properties "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器C, 启动第一个Slave, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-2s-async/broker-a-s.properties "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器D, 启动第二个Slave, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-2s-async/broker-b-s.properties "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("blockquote",[t("p",[s._v("多节点(集群)多副本模式-同步双写")])]),s._v(" "),t("p",[t("strong",[s._v("每个 Master 配置一个 Slave, 有多对 Master-Slave, HA 采用同步双写方式, 即只有主备都写成功")]),s._v(", 才向应用返回成功, 这种模式的优缺点如下:")]),s._v(" "),t("ul",[t("li",[s._v("优点: 数据与服务都无单点故障, Master 宕机情况下, 消息无延迟, 服务可用性与数据可用性都非常高;")]),s._v(" "),t("li",[s._v("缺点: 性能比异步复制模式略低(大约低 10% 左右), 发送单个消息的 RT 会略高, 且目前版本在主节点宕机后, 备机不能自动切换为主机.")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器A, 启动第一个Master, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-2s-sync/broker-a.properties "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器B, 启动第二个Master, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-2s-sync/broker-b.properties "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器C, 启动第一个Slave, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-2s-sync/broker-a-s.properties "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器D, 启动第二个Slave, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ROCKETMQ_HOME")]),s._v("/conf/2m-2s-sync/broker-b-s.properties "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("提示: 以上 Broker 与 Slave 配对是通过指定相同的 BrokerName 参数来配对, Master 的 BrokerId 必须是 0, Slave 的 BrokerId 必须是大于 0 的数. 另外一个 Master 下面可以挂载多个 Slave, 同一 Master 下的多个 Slave 通过指定不同的 BrokerId 来区分. "),t("code",[s._v("$ROCKETMQ_HOME")]),s._v("​ 指的 RocketMQ 安装目录, 需要用户自己设置此环境变量.")]),s._v(" "),t("blockquote",[t("p",[s._v("5.0 HA新模式")])]),s._v(" "),t("p",[s._v("提供更具灵活性的 HA 机制, 让用户更好的平衡成本, 服务可用性, 数据可靠性, 同时支持业务消息和流存储的场景.")]),s._v(" "),t("h6",{attrs:{id:"启动proxy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动proxy"}},[s._v("#")]),s._v(" 启动Proxy")]),s._v(" "),t("p",[s._v("可以在多台机器启动多个 Proxy.")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器A, 启动第一个Proxy, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqproxy "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器B, 启动第二个Proxy, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqproxy "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器C, 启动第三个Proxy, 例如NameServer的IP为: 192.168.1.1")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqproxy "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("若需要指定配置文件, 可以使用 "),t("code",[s._v("-pc")]),s._v("​ 或者 "),t("code",[s._v("--proxyConfigPath")]),s._v("​ 进行指定.")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 自定义配置文件")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqproxy "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1:9876 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-pc")]),s._v(" /path/to/proxyConfig.json "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h4",{attrs:{id:"主备自动切换模式部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主备自动切换模式部署"}},[s._v("#")]),s._v(" 主备自动切换模式部署")]),s._v(" "),t("h5",{attrs:{id:"基础-10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础-10"}},[s._v("#")]),s._v(" 基础")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/controller%E6%9E%B6%E6%9E%84-d431b0cc0815713f46cf9adbe3e26957-20240422215206-bi8cbwh.png",alt:"架构图"}})]),s._v(" "),t("p",[s._v("该文档主要介绍"),t("strong",[s._v("如何部署支持自动主从切换的 RocketMQ 集群")]),s._v(", 其架构如上图所示, 主要增加支持自动主从切换的 Controller 组件, 其可以独立部署也可以内嵌在 NameServer 中.")]),s._v(" "),t("p",[s._v("详细可参考 "),t("a",{attrs:{href:"https://github.com/apache/rocketmq/blob/develop/docs/cn/controller/design.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("设计思想"),t("OutboundLink")],1),s._v(" 和 "),t("a",{attrs:{href:"https://github.com/apache/rocketmq/blob/develop/docs/cn/controller/quick_start.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("快速开始"),t("OutboundLink")],1),s._v(".")]),s._v(" "),t("h5",{attrs:{id:"controller部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#controller部署"}},[s._v("#")]),s._v(" Controller部署")]),s._v(" "),t("p",[t("strong",[s._v("Controller 组件提供选主能力, 若需要保证 Controller 具备容错能力, Controller 部署需要三副本及以上(遵循 Raft 的多数派协议)")]),s._v(" .")]),s._v(" "),t("p",[s._v("注意: Controller 若只部署单副本也能完成 Broker Failover, 但若该单点 Controller 故障, 会影响切换能力, 但不会影响存量集群的正常收发.")]),s._v(" "),t("p",[s._v("Controller 部署有两种方式. "),t("strong",[s._v("一种是嵌入于 NameServer 进行部署")]),s._v(", 可以通过配置 enableControllerInNamesrv 打开(可以选择性打开, 并不强制要求每一台 NameServer 都打开), 在该模式下, NameServer 本身能力仍然是无状态的, 也就是内嵌模式下若 NameServer 挂掉多数派, 只影响切换能力, 不影响原来路由获取等功能. 另一种是"),t("strong",[s._v("独立部署, 需要单独部署 Controller 组件")]),s._v(".")]),s._v(" "),t("h6",{attrs:{id:"controller嵌入nameserver部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#controller嵌入nameserver部署"}},[s._v("#")]),s._v(" Controller嵌入NameServer部署")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/Controller-as-plugin-afd8d004541eb46736d8ea20594a4bb8-20240422215206-uu3jh6r.png",alt:"内嵌部署图"}})]),s._v(" "),t("p",[s._v("嵌入 NameServer 部署时只需要在 NameServer 的配置文件中设置 "),t("code",[s._v("enableControllerInNamesrv=true")]),s._v("​, 并填上 Controller 的配置即可.")]),s._v(" "),t("div",{staticClass:"language-properties line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-properties"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("enableControllerInNamesrv")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("controllerDLegerGroup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("group1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("controllerDLegerPeers")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("n0-127.0.0.1:9877;n1-127.0.0.1:9878;n2-127.0.0.1:9879")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("controllerDLegerSelfId")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("n0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("controllerStorePath")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("/home/admin/DledgerController")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("enableElectUncleanMaster")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("false")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("notifyBrokerRoleChanged")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("true")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("参数解释:")]),s._v(" "),t("ul",[t("li",[s._v("enableControllerInNamesrv: Nameserver 中是否开启 controller, 默认 false.")]),s._v(" "),t("li",[s._v("controllerDLegerGroup: DLedger Raft Group 的名字, 同一个 DLedger Raft Group 保持一致即可.")]),s._v(" "),t("li",[s._v("controllerDLegerPeers: DLedger Group 内各节点的端口信息, 同一个 Group 内的各个节点配置必须要保证一致.")]),s._v(" "),t("li",[s._v("controllerDLegerSelfId: 节点 id, 必须属于 controllerDLegerPeers 中的一个; 同 Group 内各个节点要唯一.")]),s._v(" "),t("li",[s._v("controllerStorePath: controller 日志存储位置. controller 是有状态的, controller 重启或宕机需要依靠日志来恢复数据, 该目录非常重要, 不可以轻易删除.")]),s._v(" "),t("li",[s._v("enableElectUncleanMaster: 是否可以从 SyncStateSet 以外选举 Master, 若为 true, 可能会选取数据落后的副本作为 Master 而丢失消息, 默认为 false.")]),s._v(" "),t("li",[s._v("notifyBrokerRoleChanged: 当 Broker 副本组上角色发生变化时是否主动通知, 默认为 true.")])]),s._v(" "),t("p",[s._v("参数设置完成后, 指定配置文件启动 Nameserver 即可.")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqnamesrv "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" namesrv.conf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h6",{attrs:{id:"controller独立部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#controller独立部署"}},[s._v("#")]),s._v(" Controller独立部署")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/Controller-deploy-indepdent-76249b759fd9d4e728e09a10d278467e-20240422215206-sfvhb80.png",alt:"架构图"}})]),s._v(" "),t("p",[s._v("独立部署执行以下脚本即可.")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqcontroller "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" controller.conf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("mqcontroller 脚本在源码包 distribution/bin/mqcontroller, 配置参数与内嵌模式相同.")]),s._v(" "),t("p",[s._v("注意: 独立部署 Controller 后, 仍然需要单独部署 NameServer 提供路由发现能力.")]),s._v(" "),t("h5",{attrs:{id:"broker部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#broker部署"}},[s._v("#")]),s._v(" Broker部署")]),s._v(" "),t("p",[s._v("Broker 启动方法与之前相同, 增加以下参数:")]),s._v(" "),t("ul",[t("li",[s._v("enableControllerMode: Broker controller 模式的总开关, 只有该值为 true, 自动主从切换模式才会打开. 默认为 false.")]),s._v(" "),t("li",[s._v("controllerAddr: controller 的地址, 多个 controller 中间用分号隔开. 例如 "),t("code",[s._v("controllerAddr = 127.0.0.1:9877;127.0.0.1:9878;127.0.0.1:9879")]),s._v("​")]),s._v(" "),t("li",[s._v("syncBrokerMetadataPeriod: 向 controller 同步 Broker 副本信息的时间间隔. 默认 5000(5s).")]),s._v(" "),t("li",[s._v("checkSyncStateSetPeriod: 检查 SyncStateSet 的时间间隔, 检查 SyncStateSet 可能会 shrink SyncState. 默认 5000(5s).")]),s._v(" "),t("li",[s._v("syncControllerMetadataPeriod: 同步 controller 元数据的时间间隔, 主要是获取 active controller 的地址. 默认10000(10s).")]),s._v(" "),t("li",[s._v("haMaxTimeSlaveNotCatchup: 表示 Slave 没有跟上 Master 的最大时间间隔, 若在 SyncStateSet 中的 slave 超过该时间间隔会将其从 SyncStateSet 移除. 默认为 15000(15s).")]),s._v(" "),t("li",[s._v("storePathEpochFile: 存储 epoch 文件的位置. epoch 文件非常重要, 不可以随意删除. 默认在 store 目录下.")]),s._v(" "),t("li",[s._v("allAckInSyncStateSet: 若该值为 true, 则一条消息需要复制到 SyncStateSet 中的每一个副本才会向客户端返回成功, 可以保证消息不丢失. 默认为 false.")]),s._v(" "),t("li",[s._v("syncFromLastFile: 若 slave 是空盘启动, 是否从最后一个文件进行复制. 默认为 false.")]),s._v(" "),t("li",[s._v("asyncLearner: 若该值为 true, 则该副本不会进入 SyncStateSet, 也就是不会被选举成 Master, 而是一直作为一个 learner 副本进行异步复制. 默认为 false.")]),s._v(" "),t("li",[t("strong",[s._v("inSyncReplicas")]),s._v(": 需保持同步的副本组数量, 默认为 1, allAckInSyncStateSet=true 时该参数无效.")]),s._v(" "),t("li",[t("strong",[s._v("minInSyncReplicas")]),s._v(": 最小需保持同步的副本组数量, 若 SyncStateSet 中副本个数小于 minInSyncReplicas 则 putMessage 直接返回 PutMessageStatus.IN_SYNC_REPLICAS_NOT_ENOUGH, 默认为 1.")])]),s._v(" "),t("p",[s._v("在 Controller 模式下, Broker 配置必须设置 "),t("code",[s._v("enableControllerMode=true")]),s._v("​, 并填写 controllerAddr, 并以下面命令启动:")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" broker.conf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("注意: 自动主备切换模式下 Broker 无需指定 brokerId 和 brokerRole, 其由 Controller 组件进行分配.")]),s._v(" "),t("h4",{attrs:{id:"rocketmq-dashboard"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rocketmq-dashboard"}},[s._v("#")]),s._v(" RocketMQ Dashboard")]),s._v(" "),t("p",[s._v("​​RocketMQ Dashboard​ 是 RocketMQ 的管控利器, 为用户"),t("strong",[s._v("提供客户端和应用程序的各种事件, 性能的统计信息, 支持以可视化工具代替 Topic 配置, Broker 管理等命令行操作")]),s._v(".")]),s._v(" "),t("h5",{attrs:{id:"基础-11"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础-11"}},[s._v("#")]),s._v(" 基础")]),s._v(" "),t("p",[s._v("功能概览如下:")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"center"}},[s._v("面板")]),s._v(" "),t("th",[s._v("功能")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("运维")]),s._v(" "),t("td",[s._v("修改nameserver 地址;  选用 "),t("code",[s._v("VIPChannel")]),s._v("​")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("驾驶舱")]),s._v(" "),t("td",[s._v("查看 broker, topic 消息量")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("集群")]),s._v(" "),t("td",[s._v("集群分布, broker 配置, 运行信息")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("主题")]),s._v(" "),t("td",[s._v("搜索, 筛选, 删除, 更新/新增主题, 消息路由, 发送消息, 重置消费位点")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("消费者")]),s._v(" "),t("td",[s._v("搜索, 删除, 新增/更新消费者组, 终端, 消费详情, 配置")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("消息")]),s._v(" "),t("td",[s._v("消息记录, 私信消息, 消息轨迹等消息详情")])])])]),s._v(" "),t("p",[s._v("操作面板:")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/1_dashboard-ab01f6bdd465d1202b5a7ff715cd6076-20240422215223-h25pnhx.png",alt:"1657630174311"}})]),s._v(" "),t("h5",{attrs:{id:"快速开始"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速开始"}},[s._v("#")]),s._v(" 快速开始")]),s._v(" "),t("p",[s._v("系统要求:")]),s._v(" "),t("ol",[t("li",[s._v("Linux/Unix/Mac")]),s._v(" "),t("li",[s._v("64bit JDK 1.8+")]),s._v(" "),t("li",[s._v("Maven 3.2.x")]),s._v(" "),t("li",[s._v("启动 "),t("a",{attrs:{href:"https://rocketmq.apache.org/docs/quick-start/",target:"_blank",rel:"noopener noreferrer"}},[s._v("RocketMQ"),t("OutboundLink")],1)])]),s._v(" "),t("p",[s._v("网络配置:")]),s._v(" "),t("ol",[t("li",[s._v("云服务器可远程访问或本地虚拟机可 PING 通外网.")]),s._v(" "),t("li",[s._v("​"),t("code",[s._v("rocketmq")]),s._v("​ 配置文件 "),t("code",[s._v("broker.conf / broker-x.properties")]),s._v("​ 设置 nameserver 地址和端口号.")]),s._v(" "),t("li",[s._v("用配置文件启动 broker.")])]),s._v(" "),t("blockquote",[t("p",[s._v("docker镜像安装")])]),s._v(" "),t("p",[s._v("① 安装docker, 拉取 "),t("code",[s._v("rocketmq-dashboard")]),s._v("​ 镜像:")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull apacherocketmq/rocketmq-dashboard:latest\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("② docker 容器中运行 "),t("code",[s._v("rocketmq-dashboard")]),s._v("​:")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--name")]),s._v(" rocketmq-dashboard "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"JAVA_OPTS=-Drocketmq.namesrv.addr=127.0.0.1:9876"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" apacherocketmq/rocketmq-dashboard:latest\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("提示: "),t("code",[s._v("namesrv.addr:port")]),s._v("​ 替换为 "),t("code",[s._v("rocketmq")]),s._v("​ 中配置的 nameserver 地址: 端口号.")]),s._v(" "),t("p",[s._v("开放端口号: 8080, 9876, 10911, 11011 端口.")]),s._v(" "),t("ul",[t("li",[s._v("云服务器: 设置安全组访问规则")]),s._v(" "),t("li",[s._v("本地虚拟机: 关闭防火墙, 或 "),t("code",[s._v("-add-port")]),s._v("​")])]),s._v(" "),t("h5",{attrs:{id:"使用教程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用教程"}},[s._v("#")]),s._v(" 使用教程")]),s._v(" "),t("p",[s._v("基本用法如下:")]),s._v(" "),t("blockquote",[t("p",[s._v("创建主题Topic")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/2_createTopic-e384f0c6d87ddb0d73a9be06cbcb4d87-20240422215223-nrsphmz.png",alt:"1657547091545"}})]),s._v(" "),t("blockquote",[t("p",[s._v("创建消费者组consumer")])]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/3_createConsumer-f88ab5dd052b4838381dc1eb1b0afca1-20240422215223-cqceyle.png",alt:"1657547745254"}}),s._v("​")]),s._v(" "),t("blockquote",[t("p",[s._v("重置消费位点")])]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/4_resetOffset-1eee0933f962ba710d8c7a05119acdf1-20240422215223-2dj56nr.png",alt:"1657547891994"}}),s._v("​")]),s._v(" "),t("p",[t("strong",[s._v("tips")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("集群消费支持重置消费位点, 广播模式不支持.")]),s._v(" "),t("li",[s._v("消费者不在线不能重置消费位点.")])]),s._v(" "),t("blockquote",[t("p",[s._v("扩容Topic队列")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/5_enlargeTopic-2490dbf79885d9e2b434926c09ff4706-20240422215223-f87txm3.png",alt:"1657548375401"}})]),s._v(" "),t("blockquote",[t("p",[s._v("扩容Broker")])]),s._v(" "),t("ul",[t("li",[s._v("安装部署一个新的 broker, nameserver 地址和当前集群一样")])]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/6_cluster-328c0c9a35f26d6c2890aba4ab488093-20240422215223-jq2n6ee.png",alt:"1657549432610"}}),s._v("​")]),s._v(" "),t("ul",[t("li",[s._v("更新 Topic 的BROKER_NAME")])]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/7_enlargeBroker-5bdd47824115dba426d8596f6c9c67ee-20240422215223-x6hzrlb.png",alt:"1657549599728"}}),s._v("​")]),s._v(" "),t("blockquote",[t("p",[s._v("发送消息")])]),s._v(" "),t("ul",[t("li",[s._v("向指定 Topic 发送消息")])]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/8_sendMessage-ea4cdf06c5195eabfc93ef8b6ff482f5-20240422215223-3uo1pgz.png",alt:"1657550506673"}}),s._v("​")]),s._v(" "),t("ul",[t("li",[s._v("发送结果")])]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/9_sendResult-9f60e816de687e657f556555f5c611ff-20240422215223-cilnzu3.png",alt:"1657550592049"}}),s._v("​")]),s._v(" "),t("h4",{attrs:{id:"rocketmq-promethus-exporter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rocketmq-promethus-exporter"}},[s._v("#")]),s._v(" RocketMQ Promethus Exporter")]),s._v(" "),t("h5",{attrs:{id:"基础-12"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础-12"}},[s._v("#")]),s._v(" 基础")]),s._v(" "),t("p",[s._v("​​Rocketmq-exporter​ 是用于"),t("strong",[s._v("监控 RocketMQ broker 端和客户端所有相关指标的系统")]),s._v(", 通过 "),t("code",[s._v("mqAdmin")]),s._v("​ 从 broker 端获取指标值后封装成 87 个 cache.")]),s._v(" "),t("p",[t("strong",[s._v("Rocketmq-expoter 获取监控指标的流程")]),s._v("如下图所示, "),t("mark",[t("strong",[s._v("Expoter 通过 MQAdminExt 向 MQ 集群请求数据, 请求到的数据通过 MetricService 规范化成 Prometheus 需要的格式, 然后通过 /metics 接口暴露给 Promethus")])]),s._v(".")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/image-20240830234727-y2iv9hy.png",alt:"image"}}),s._v("​")]),s._v(" "),t("h6",{attrs:{id:"metric结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#metric结构"}},[s._v("#")]),s._v(" Metric结构")]),s._v(" "),t("p",[s._v("​"),t("code",[s._v("Metric")]),s._v("​ 类位于 "),t("code",[s._v("org.apache.rocketmq.expoter.model.metrics")]),s._v("​ 包下, 实质上是一些实体类, 每个实体类代表一类指标, "),t("strong",[s._v("总共 14 个 Metric 类")]),s._v(". 这些类作为 87 个 Cache 的 key, 用不同的 label 值进行区分.")]),s._v(" "),t("p",[s._v("实体类中包含了 label 的三个维度: broker, consumer, producer")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("broker 相关 metric 类有")]),s._v(": BrokerRuntimeMetric, BrokerMetric, DLQTopicOffsetMetric, TopicPutNumMetric.")]),s._v(" "),t("li",[t("strong",[s._v("消费者相关类有")]),s._v(": ConsumerRuntimeConsumeFailedMsgsMetric, ConsumerRuntimeConsumeFailedTPSMetric, ConsumerRuntimeConsumeOKTPSMetric, ConsumerRuntimeConsumeRTMetric, ConsumerRuntimePullRTMetric, ConsumerRuntimePullTPSMetric, ConsumerCountMetric, ConsumerMetric, ConsumerTopicDiffMetric.")]),s._v(" "),t("li",[t("strong",[s._v("生产者相关 metric 类有")]),s._v(": ProducerMetric.")])]),s._v(" "),t("h6",{attrs:{id:"prometheus拉取metrics的过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prometheus拉取metrics的过程"}},[s._v("#")]),s._v(" Prometheus拉取metrics的过程")]),s._v(" "),t("p",[s._v("​"),t("code",[s._v("RocketMQ-exporter")]),s._v("​ 项目和 "),t("code",[s._v("Prometheus")]),s._v("​ 相当于"),t("strong",[s._v("服务器和客户端")]),s._v("的关系, "),t("strong",[s._v("RocketMQ-exporter 项目引入了 Prometheus 的 client 包, 该包中规定了需要获取的信息的类型即项目中的 MetricFamilySamples 类, Prometheus 向 expoter 请求 metrics, expoter 将信息封装成相应的类型之后返回给 Prometheus")]),s._v(".")]),s._v(" "),t("p",[s._v("rocketmq-expoter 项目启动后, 会获取 rocketmq 的各项 metrics 收集到 mfs 对象中, 当浏览器或 Prometheus 访问相应的接口时, 会通过 service 将 mfs 对象中的 samples 生成 Prometheus 所支持的格式化数据.")]),s._v(" "),t("p",[s._v("主要包含以下步骤:")]),s._v(" "),t("p",[s._v("浏览器通过访问 "),t("code",[s._v("ip:5557/metrics")]),s._v("​, 会调用 RMQMetricsController 类下的 metrics 方法, 其中 ip 为 rocketmq-expoter 项目运行的主机 ip.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("metrics")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HttpServletResponse")]),s._v(" response"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringWriter")]),s._v(" writer "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringWriter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    metricsService"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("metrics")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("writer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    response"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setHeader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Content-Type"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text/plain; version=0.0.4; charset=utf-8"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    response"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getOutputStream")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("writer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("通过新建 StringWriter 对象用于收集 metrics 指标, 调用 MetricsService 类中的方法 metrics 将 expoter 中提取到的指标收集到 writer 对象中, 最后将收集到的指标输出到网页上.")]),s._v(" "),t("p",[s._v("收集到的指标格式为:")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("metric name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("label name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("label value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("metric value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("如:")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("rocketmq_group_diff"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("group"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rmq_group_test_20220114"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("topic"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fusion_console_tst"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("countOfOnlineConsumers"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("msgModel"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("23.0")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h6",{attrs:{id:"metriccollecttask类中的5个定时任务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#metriccollecttask类中的5个定时任务"}},[s._v("#")]),s._v(" MetricCollectTask类中的5个定时任务")]),s._v(" "),t("p",[s._v("MetricCollectTask 类中有 5 个定时任务, 分别为 collectTopicOffset, collectConsumerOffset, collectBrokerStatsTopic, collectBrokerStats 和 collectBrokerRuntimeStats. "),t("strong",[s._v("用于收集消费位点信息以及 Broker 状态信息等")]),s._v(". 其 cron 表达式为: "),t("code",[s._v("cron: 15 0/1 * * * ?")]),s._v("​, 表示每分钟会收集一次. 其核心功能是通过 mqAdminExt 对象从集群中获取 broker 中的信息, 然后将其添加到对应的 87 个监控指标中.")]),s._v(" "),t("p",[s._v("以 collectTopicOffset 为例:")]),s._v(" "),t("ol",[t("li",[s._v("首先初始化 TopicList 对象, 通过 mqAdminExt.fetchAllTopicList() 方法获取到集群的所有 topic 信息.")])]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("TopicList topicList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  topicList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mqAdminExt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetchAllTopicList")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Exception ex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("String"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"collectTopicOffset-exception comes getting topic list from namesrv, address is %s"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("JSON")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("toJSONString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mqAdminExt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getNameServerAddressList")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[s._v("将 topic 加入到 topicSet 中, 循环遍历每一个 topic, 通过 mqAdminExt.examineTopicStats(topic) 函数来检查 topic 状态.")])]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("Set "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" String "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" topicSet "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" topicList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" topicList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getTopicList")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("String topic"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" topicSet"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    TopicStatsTable topicStats "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        topicStats "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mqAdminExt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("examineTopicStats")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Exception ex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("String"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"collectTopicOffset-getting topic(%s) stats error. the namesrv address is %s"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n         topic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("JSON")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("toJSONString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mqAdminExt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getNameServerAddressList")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[s._v("初始化 topic 状态 set, 用于用于按 broker 划分的 topic 信息位点的 hash 表 brokerOffsetMap, 以及一个用于按 broker 名字为 key 的用于存储更新时间戳的 hash 表 brokerUpdateTimestampMap.")])]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("Set"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Map"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Entry"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("MessageQueue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" TopicOffset"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" topicStatusEntries "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" topicStats"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getOffsetTable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("entrySet")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nHashMap"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("String"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Long"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" brokerOffsetMap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HashMap")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nHashMap"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("String"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Long"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" brokerUpdateTimestampMap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HashMap")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Map"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Entry"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("MessageQueue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" TopicOffset"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" topicStatusEntry "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" topicStatusEntries"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    MessageQueue q "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" topicStatusEntry"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getKey")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    TopicOffset offset "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" topicStatusEntry"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("brokerOffsetMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("containsKey")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("q"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBrokerName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        brokerOffsetMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("q"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBrokerName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" brokerOffsetMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("q"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBrokerName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" offset"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getMaxOffset")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        brokerOffsetMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("q"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBrokerName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" offset"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getMaxOffset")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("brokerUpdateTimestampMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("containsKey")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("q"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBrokerName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("offset"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getLastUpdateTimestamp")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" brokerUpdateTimestampMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("q"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBrokerName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            brokerUpdateTimestampMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("q"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBrokerName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" offset"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getLastUpdateTimestamp")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        brokerUpdateTimestampMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("q"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBrokerName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        offset"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getLastUpdateTimestamp")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("ol",{attrs:{start:"4"}},[t("li",[s._v("最后通过遍历 brokerOffsetMap 中的每一项, 通过调用 metricsService 获取到 metricCollector 对象, 调用 RMQMetricsCollector 类中的 addTopicOffsetMetric 方法, 将相应的值添加到 RMQMetricsCollector 类中 87 个指标对应的其中一个指标的 cache 中.")])]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v(" Set"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Map"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Entry"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("String"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Long"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" brokerOffsetEntries "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" brokerOffsetMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("entrySet")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Map"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Entry"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("String"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Long"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" brokerOffsetEntry "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" brokerOffsetEntries"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            metricsService"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getCollector")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("addTopicOffsetMetric")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("clusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" brokerOffsetEntry"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getKey")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" topic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                brokerUpdateTimestampMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("brokerOffsetEntry"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getKey")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" brokerOffsetEntry"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("info")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"topic offset collection task finished...."')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentTimeMillis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h6",{attrs:{id:"rocketmq-exporter收集指标流程图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rocketmq-exporter收集指标流程图"}},[s._v("#")]),s._v(" Rocketmq-exporter收集指标流程图")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/RocketMQ%20Prometheus%20Exporter%20-%202-fdd37b4d6c89244c23bac2bf87ff7e26-20240422215237-axgwerf.jpeg",alt:"95680458234"}})]),s._v(" "),t("h5",{attrs:{id:"快速开始-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速开始-2"}},[s._v("#")]),s._v(" 快速开始")]),s._v(" "),t("blockquote",[t("p",[s._v("配置application.yml")])]),s._v(" "),t("p",[s._v("​"),t("code",[s._v("application.yml")]),s._v("​ 中重要的配置主要有:")]),s._v(" "),t("ul",[t("li",[s._v("server.port 设置 promethus 监听 rocketmq-exporter 的端口, 默认为 5557.")]),s._v(" "),t("li",[s._v("rocketmq.config.webTelemetryPath 配置 promethus 获取指标的路径, 默认为 /metrics , 使用默认值即可.")]),s._v(" "),t("li",[s._v("rocketmq.config.enableACL 如果 RocketMQ 集群开启了 ACL 验证,需要配置为 true, 并在 accessKey 和 secretKey 中配置相应的 ak, sk.")]),s._v(" "),t("li",[s._v("rocketmq.config.outOfTimeSeconds 用于配置存储指标和相应的值的过期时间,若超过该时间, cache 中的 key 对应的节点没有发生写更改,则会进行删除. 一般配置为 60s 即可(根据 promethus 获取指标的时间间隔进行合理配置, 只要保证过期时间大于等于 promethus 收集指标的时间间隔即可).")]),s._v(" "),t("li",[s._v('task.cron 配置 exporter 从 broker 拉取指标的定时任务的时间间隔, 默认值为 "'),t("code",[s._v("15 0/1 * * ?")]),s._v('​" 每分钟的 15s 拉取一次指标.')])]),s._v(" "),t("blockquote",[t("p",[s._v("启动exporter项目")])]),s._v(" "),t("blockquote",[t("p",[s._v("按照promethus官网配置启动")])]),s._v(" "),t("p",[s._v("配置 promethus 的 "),t("code",[s._v("static_config: -targets")]),s._v("​ 为 exporter 的启动 IP 和端口, 如: localhost:5557.")]),s._v(" "),t("blockquote",[t("p",[s._v("访问promethus页面")])]),s._v(" "),t("p",[s._v("本地启动默认为: localhost:9090, 则可对收集到的指标值进行查看, 如下图所示:")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/RocketMQ%20Prometheus%20Exporter-3-f5d7bc508a5e4f791de91d2835b261b7-20240422215237-oz1sqxa.jpeg",alt:"906876098423"}}),s._v("​")]),s._v(" "),t("h5",{attrs:{id:"可观测性指标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可观测性指标"}},[s._v("#")]),s._v(" 可观测性指标")]),s._v(" "),t("p",[s._v("可观测性指标主要包括两个大类: "),t("strong",[s._v("服务端指标和客户端指标, 服务端指标由服务端直接生成, 客户端指标在客户端产生, 由服务端通过 rpc 请求客户端获取到")]),s._v(". 客户端指标又可细分为生产端指标和消费端指标.")]),s._v(" "),t("h4",{attrs:{id:"dledger"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dledger"}},[s._v("#")]),s._v(" Dledger")]),s._v(" "),t("p",[t("strong",[s._v("DLedger 是一套基于 Raft 协议的分布式日志存储组件, 部署 RocketMQ 时可以根据需要选择使用 DLeger 来替换原生的副本存储机制")]),s._v(". 本文档主要介绍如何快速构建和部署基于 DLedger 的可以自动容灾切换的 RocketMQ 集群.")]),s._v(" "),t("h5",{attrs:{id:"dledger快速搭建示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dledger快速搭建示例"}},[s._v("#")]),s._v(" Dledger快速搭建示例")]),s._v(" "),t("blockquote",[t("p",[s._v("源码构建")])]),s._v(" "),t("p",[s._v("构建分为两个部分, 需要先构建 DLedger, 然后构建 RocketMQ.")]),s._v(" "),t("p",[t("strong",[s._v("构建 DLedger")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/openmessaging/dledger.git\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" dledger\n$ mvn clean "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-DskipTests")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("strong",[s._v("构建 RocketMQ")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/apache/rocketmq.git\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" rocketmq\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" develop origin/develop\n$ mvn -Prelease-all "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-DskipTests")]),s._v(" clean "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-U")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("blockquote",[t("p",[s._v("快速部署")])]),s._v(" "),t("p",[s._v("在构建成功后:")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{rocketmq-version} replace with rocketmq actual version. example: 5.1.0")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" distribution/target/rocketmq-"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("rocketmq-version"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("/rocketmq-"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("rocketmq-version"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/dledger/fast-try.sh start\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("如果上面的步骤执行成功, 可以通过 mqadmin 运维命令查看集群状态.")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqadmin clusterList "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:9876\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("顺利的话, 会看到如下内容:")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"/img/TB11Z-20240422215725-4sbtxsf.ZyCzqK1RjSZFLXXcn2XXa",alt:"ClusterList"}}),s._v("​")]),s._v(" "),t("p",[s._v("BID 为 0 的表示 Master, 其余都是 Follower. 启动成功, 现在可以向集群收发消息, 并"),t("strong",[s._v("进行容灾切换测试")]),s._v("了.")]),s._v(" "),t("p",[s._v("关闭快速集群, 可以执行:")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/dledger/fast-try.sh stop\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("快速部署, 默认配置在 conf/dledger 里面, 默认的存储路径在 /tmp/rmqstore.")]),s._v(" "),t("blockquote",[t("p",[s._v("容灾切换")])]),s._v(" "),t("p",[s._v("部署成功, "),t("strong",[s._v("杀掉 Leader 之后")]),s._v("(在上面的例子中, 杀掉端口 30931 所在的进程), 等待约 10s 左右, 用 clusterList 命令查看集群, 就会"),t("strong",[s._v("发现 Leader 切换到另一个节点")]),s._v("了.")]),s._v(" "),t("h5",{attrs:{id:"dledger集群搭建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dledger集群搭建"}},[s._v("#")]),s._v(" Dledger集群搭建")]),s._v(" "),t("p",[s._v("本部分主要介绍如何部署自动容灾切换的 RocketMQ-on-DLedger Group.")]),s._v(" "),t("p",[s._v("RocketMQ-on-DLedger Group 是指一组"),t("strong",[s._v("相同名称")]),s._v("的 Broker, 至少需要 3 个节点, "),t("strong",[s._v("通过 Raft 自动选举出一个 Leader, 其余节点 作为 Follower, 并在 Leader 和 Follower 之间复制数据以保证高可用")]),s._v(". RocketMQ-on-DLedger Group 能自动容灾切换, 并保证数据一致. RocketMQ-on-DLedger Group 是可以水平扩展的, 也即可以部署任意多个 RocketMQ-on-DLedger Group 同时对外提供服务.")]),s._v(" "),t("blockquote",[t("p",[s._v("1.1 编写配置")])]),s._v(" "),t("p",[s._v("每个 RocketMQ-on-DLedger Group 至少准备三台机器(本文假设为 3). 编写 3 个配置文件, 建议参考 conf/dledger 目录下的配置文件样例. 关键配置介绍:")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"center"}},[s._v("name")]),s._v(" "),t("th",[s._v("含义")]),s._v(" "),t("th",[s._v("举例")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("enableDLegerCommitLog")]),s._v(" "),t("td",[s._v("是否启动 DLedger")]),s._v(" "),t("td",[s._v("true")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("dLegerGroup")]),s._v(" "),t("td",[s._v("DLedger Raft Group的名字, 建议和 brokerName 保持一致")]),s._v(" "),t("td",[s._v("RaftNode00")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("dLegerPeers")]),s._v(" "),t("td",[s._v("DLedger Group 内各节点的端口信息, 同一个 Group 内的各个节点配置必须要保证一致")]),s._v(" "),t("td",[s._v("n0-127.0.0.1:40911;n1-127.0.0.1:40912;n2-127.0.0.1:40913")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("dLegerSelfId")]),s._v(" "),t("td",[s._v("节点 id, 必须属于 dLegerPeers 中的一个; 同 Group 内各个节点要唯一")]),s._v(" "),t("td",[s._v("n0")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("sendMessageThreadPoolNums")]),s._v(" "),t("td",[s._v("发送线程个数, 建议配置成 Cpu 核数")]),s._v(" "),t("td",[s._v("16")])])])]),s._v(" "),t("p",[s._v("这里贴出 conf/dledger/broker-n0.conf 的配置举例.")]),s._v(" "),t("div",{staticClass:"language-properties line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-properties"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("brokerClusterName")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("RaftCluster")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("brokerName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("RaftNode00")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("listenPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("30911")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("namesrvAddr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("127.0.0.1:9876")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("storePathRootDir")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("/tmp/rmqstore/node00")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("storePathCommitLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("/tmp/rmqstore/node00/commitlog")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("enableDLegerCommitLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("dLegerGroup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("RaftNode00")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("dLegerPeers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("n0-127.0.0.1:40911;n1-127.0.0.1:40912;n2-127.0.0.1:40913")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## must be unique")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("dLegerSelfId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("n0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("sendMessageThreadPoolNums")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("16")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("blockquote",[t("p",[s._v("1.2 启动Broker")])]),s._v(" "),t("p",[s._v("与老版本的启动方式一致.")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" conf/dledger/xxx-n0.conf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" \n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" conf/dledger/xxx-n1.conf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" \n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" conf/dledger/xxx-n2.conf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"权限控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#权限控制"}},[s._v("#")]),s._v(" 权限控制")]),s._v(" "),t("p",[t("strong",[s._v("权限控制(ACL)主要为 RocketMQ 提供 Topic 资源级别的高级访问控制功能")]),s._v(". 用户在使用 RocketMQ 权限控制时, 可以在 Client 客户端注入用户名和密码参数实现签名, "),t("strong",[s._v("服务端通过权限控制参数实现各个资源的权限管理和校验")]),s._v(".")]),s._v(" "),t("p",[s._v("信息: ACL 控制在增强集群访问控制安全性的同时也会带来部署流程和运维管理的复杂度.")]),s._v(" "),t("p",[t("strong",[s._v("一般仅建议在网络环境不安全, 业务数据敏感, 多部门租户混用的场景下使用")]),s._v(". 如果生产集群本身是私有集群不会被外部部门租户访问, 可以不开启.")]),s._v(" "),t("h4",{attrs:{id:"jvm与os配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm与os配置"}},[s._v("#")]),s._v(" JVM与OS配置")]),s._v(" "),t("p",[s._v("本小节主要介绍系统(JVM/OS)相关的配置.")]),s._v(" "),t("h5",{attrs:{id:"_1-jvm选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-jvm选项"}},[s._v("#")]),s._v(" 1.JVM选项")]),s._v(" "),t("p",[s._v("推荐使用最新发布的 JDK 版本. 通过"),t("strong",[s._v("设置相同的 Xms 和 Xmx 值来防止 JVM 调整堆大小以获得更好的性能")]),s._v(". 生产环境 JVM 配置如下所示:")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("-server -Xms8g -Xmx8g -Xmn4g \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("当 JVM 是默认 8 字节对齐, "),t("strong",[s._v("建议配置最大堆内存不要超过 32G, 否则会影响 JVM 的指针压缩技术, 浪费内存")]),s._v(".")]),s._v(" "),t("p",[s._v('如果不关心 RocketMQ Broker 的启动时间, 还有一种更好的选择, 就是通过 "预触摸" Java 堆以确保在 JVM 初始化期间每个页面都将被分配. 那些不关心启动时间的人可以启用它:')]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("-XX:+AlwaysPreTouch  \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("信息: 生产环境集群 Broker 一般建议配置足够的内存, 避免使用小规格内存机器部署. "),t("strong",[s._v("因为 Broker 是重度依赖内存 PageCache 做性能优化的, 内存过小可能造成性能不稳定")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("禁用偏置锁定可能会减少 JVM 暂停")]),s._v(":")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("-XX:-UseBiasedLocking   \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("垃圾回收, "),t("strong",[s._v("建议使用 JDK 1.8 自带的 G1 收集器")]),s._v(":")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("-XX:+UseG1GC \n-XX:G1HeapRegionSize=16m   \n-XX:G1ReservePercent=25 \n-XX:InitiatingHeapOccupancyPercent=30\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("这些 GC 选项看起来有点激进, 但事实证明它在生产环境中具有良好的性能.")]),s._v(" "),t("p",[s._v("另外不要把 -XX:MaxGCPauseMillis 的值设置太小, 否则 JVM 将使用一个小的年轻代来实现这个目标, 这将导致非常频繁的 minor GC, 所以建议使用 rolling GC 日志文件:")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("-XX:+UseGCLogFileRotation   \n-XX:NumberOfGCLogFiles=5 \n-XX:GCLogFileSize=30m\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("如果写入 GC 文件会增加代理的延迟, 可以考虑将 GC 日志文件重定向到内存文件系统:")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("-Xloggc:/dev/shm/mq_gc_%p.log123   \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h5",{attrs:{id:"_2-linux内核参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-linux内核参数"}},[s._v("#")]),s._v(" 2.Linux内核参数")]),s._v(" "),t("p",[t("strong",[s._v("os.sh 脚本在 bin 文件夹中列出了许多内核参数, 可以进行微小的更改然后用于生产用途")]),s._v(". 下面的参数需要注意, 更多细节请参考 "),t("code",[s._v("/proc/sys/vm/*")]),s._v("​ 的"),t("a",{attrs:{href:"https://www.kernel.org/doc/Documentation/sysctl/vm.txt",target:"_blank",rel:"noopener noreferrer"}},[s._v("文档"),t("OutboundLink")],1),s._v(".")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("vm.extra_free_kbytes")]),s._v(": 告诉 VM 在后台回收(kswapd)启动的阈值与直接回收(通过分配进程)的阈值之间保留额外的可用内存. RocketMQ 使用此参数来避免内存分配中的长延迟.")]),s._v(" "),t("li",[t("strong",[s._v("vm.min_free_kbytes")]),s._v(": 如果将其设置为低于 1024 KB, 将会巧妙的将系统破坏, 并且系统在高负载下容易出现死锁.")]),s._v(" "),t("li",[t("strong",[s._v("vm.max_map_count")]),s._v(": 限制一个进程可能具有的最大内存映射区域数. RocketMQ 将使用 MMAP 加载 CommitLog 和 ConsumeQueue, 因此建议将为此参数设置较大的值.")]),s._v(" "),t("li",[t("strong",[s._v("vm.swappiness")]),s._v(": 定义内核交换内存页面的积极程度. 较高的值会增加攻击性, 较低的值会减少交换量. 建议将值设置为 10 来避免交换延迟.")]),s._v(" "),t("li",[t("strong",[s._v("File descriptor limits")]),s._v(": RocketMQ 需要为文件(CommitLog 和 ConsumeQueue)和网络连接打开文件描述符. "),t("strong",[s._v("建议设置文件描述符的值为 655350")]),s._v(".")]),s._v(" "),t("li",[s._v("Disk scheduler: RocketMQ 建议使用 I/O 截止时间调度器, 它试图为请求提供有保证的延迟.")])]),s._v(" "),t("h4",{attrs:{id:"客户端sdk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#客户端sdk"}},[s._v("#")]),s._v(" 客户端SDK")]),s._v(" "),t("p",[s._v("本节文档介绍 RocketMQ 5.x 版本的客户端 SDK 演进历程, 选型对比和最佳实践.")]),s._v(" "),t("h5",{attrs:{id:"演进历程-选型对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#演进历程-选型对比"}},[s._v("#")]),s._v(" 演进历程&选型对比")]),s._v(" "),t("p",[s._v("RocketMQ 项目自诞生之初演进到当前 5.x 版本, 根据"),t("strong",[s._v("底层通信协议的差异主要支持两个系列的客户端 SDK")]),s._v(", 分别是 "),t("strong",[s._v("Remoting 协议和 gRPC 协议")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("Remoting 协议")]),s._v("作为早期组件间默认通信协议, 内置的客户端 SDK 一直和主仓库同步演进和迭代. "),t("strong",[s._v("Remoting 协议")]),s._v(" SDK 一直以绑定仓库的方式伴随服务端代码版本迭代, 主要支持 Java 为主的语言.")]),s._v(" "),t("p",[t("mark",[t("strong",[s._v("gRPC 协议自 5.0 版本全新推出, 旨在以云原生主流技术演进更加轻量, 标准, 易扩展的客户端服务端通信协议")])]),s._v(". "),t("strong",[s._v("gRPC 协议")]),s._v(" SDK 是以独立仓库"),t("a",{attrs:{href:"https://github.com/apache/rocketmq-clients",target:"_blank",rel:"noopener noreferrer"}},[s._v(" RocketMQ Clients "),t("OutboundLink")],1),s._v("方式演进, 支持 Java/C++/.NET/Go/Rust 等语言. 客户端和服务端之间相对解耦, 遵循"),t("a",{attrs:{href:"https://github.com/apache/rocketmq-apis",target:"_blank",rel:"noopener noreferrer"}},[s._v(" RocketMQ API "),t("OutboundLink")],1),s._v("协议接口约定.")]),s._v(" "),t("p",[s._v("关于 Remoting 协议 SDK 和 gRPC 协议 SDK 的对比参考如下:")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[s._v("对比项")])]),s._v(" "),t("th",[t("strong",[s._v("Remoting 协议 SDK")])]),s._v(" "),t("th",[t("strong",[s._v("gRPC 协议 SDK")])])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("多语言支持")]),s._v(" "),t("td",[s._v("Java 为主, 其他语言为第三方仓库实现")]),s._v(" "),t("td",[s._v("Java/C/C++/.NET/Go/Rust, 其他语言迭代中"),t("br"),s._v("详情参考"),t("a",{attrs:{href:"https://github.com/apache/rocketmq-clients",target:"_blank",rel:"noopener noreferrer"}},[s._v("链接"),t("OutboundLink")],1)])]),s._v(" "),t("tr",[t("td",[s._v("接口范围")]),s._v(" "),t("td",[s._v("Producer"),t("br"),s._v("PushConsumer"),t("br"),s._v("PullConsumer"),t("br"),s._v("LitePullConsumer"),t("br"),s._v("Admin")]),s._v(" "),t("td",[s._v("Producer"),t("br"),s._v("PushConsumer(仅Java)"),t("br"),s._v("SimpleConsumer"),t("br"),s._v("PullConsumer(进行中)")])]),s._v(" "),t("tr",[t("td",[s._v("兼容版本")]),s._v(" "),t("td",[s._v("兼容 4.x, 5.x 版本服务端")]),s._v(" "),t("td",[t("strong",[s._v("仅支持 5.x 版本服务端")])])]),s._v(" "),t("tr",[t("td",[s._v("演进方向")]),s._v(" "),t("td",[s._v("Remoting 协议主要作为服务端内部组件通信演进")]),s._v(" "),t("td",[s._v("gRPC 协议作为轻量化多语言客户端首选, 后续逐步推广补齐所有能力")])])])]),s._v(" "),t("h5",{attrs:{id:"remoting协议sdk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#remoting协议sdk"}},[s._v("#")]),s._v(" Remoting协议SDK")]),s._v(" "),t("p",[s._v("Remoting 协议 SDK 作为 RocketMQ 最初演进的 SDK, 使用 RocketMQ 内部组件的 Remoting 通信协议, 一方面用于服务内部组件的通信, 一方面也支持客户端收发消息和管控操作的 API 通信. Remoting 协议 SDK 和服务端主仓库同步演进迭代. 目前支持的开发语言和代码仓库详情如下:")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[s._v("语言")])]),s._v(" "),t("th",[t("strong",[s._v("ReleaseNote")])]),s._v(" "),t("th",[t("strong",[s._v("SDK仓库")])])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("Java")]),s._v(" "),t("td",[t("a",{attrs:{href:"https://github.com/apache/rocketmq/releases",target:"_blank",rel:"noopener noreferrer"}},[s._v("主仓库版本列表"),t("OutboundLink")],1)]),s._v(" "),t("td",[t("a",{attrs:{href:"https://github.com/apache/rocketmq",target:"_blank",rel:"noopener noreferrer"}},[s._v("主仓库地址"),t("OutboundLink")],1)])]),s._v(" "),t("tr",[t("td",[s._v("Go")]),s._v(" "),t("td",[t("a",{attrs:{href:"https://github.com/apache/rocketmq-client-go/releases",target:"_blank",rel:"noopener noreferrer"}},[s._v("主仓库版本列表"),t("OutboundLink")],1)]),s._v(" "),t("td",[t("a",{attrs:{href:"https://github.com/apache/rocketmq-client-go",target:"_blank",rel:"noopener noreferrer"}},[s._v("主仓库地址"),t("OutboundLink")],1)])])])]),s._v(" "),t("h5",{attrs:{id:"grpc协议sdk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#grpc协议sdk"}},[s._v("#")]),s._v(" gRPC协议SDK")]),s._v(" "),t("p",[s._v("gRPC 协议 SDK 自 RocketMQ 5.0 版本, 旨在提供包含 Java, C++, C#, Golang, JavaScript, Rust 在内的所有主流编程语言的云原生的健壮的客户端解决方案. gRPC SDK 遵从 "),t("a",{attrs:{href:"https://github.com/apache/rocketmq-apis",target:"_blank",rel:"noopener noreferrer"}},[s._v("rocketmq-apis"),t("OutboundLink")],1),s._v(" 约束, 使用 Protocol Buffers 和 gRPC 替代了 4.x 的旧有协议.")]),s._v(" "),t("p",[s._v("gRPC SDK 相比早期 Remoting 协议 SDK 具备如下优势:")]),s._v(" "),t("ul",[t("li",[s._v("接口简洁性更好, 易理解, 不易错误使用.")]),s._v(" "),t("li",[s._v("接口确定性设计更完善, 参数, 异常类型明确.")]),s._v(" "),t("li",[s._v("接口不可变性设计, 避免透传, 漏传参数和信息导致的业务异常.")]),s._v(" "),t("li",[s._v("多语言支持更完善, 由于 gRPC 协议的多语言优势, 可以更低成本演进出行为一致的多语言 sdk. 详细的设计思考和演进方向, 参考 "),t("a",{attrs:{href:"https://shimo.im/docs/m5kv92OeRRU8olqX",target:"_blank",rel:"noopener noreferrer"}},[s._v("RIP-37: New and Unified APIs"),t("OutboundLink")],1),s._v(" 和 "),t("a",{attrs:{href:"https://shimo.im/docs/gXqmeEPYgdUw5bqo",target:"_blank",rel:"noopener noreferrer"}},[s._v("RIP-39: Support gRPC protocol"),t("OutboundLink")],1),s._v(".")])]),s._v(" "),t("p",[s._v("目前支持的开发语言和代码仓库详情可直接参考 "),t("a",{attrs:{href:"https://github.com/apache/rocketmq-clients#features-and-status",target:"_blank",rel:"noopener noreferrer"}},[s._v("rocketmq-clients"),t("OutboundLink")],1),s._v(" SDK 仓库信息.")]),s._v(" "),t("p",[s._v("‍")]),s._v(" "),t("h3",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),t("ul",[t("li",[s._v("RocketMQ 官方文档: "),t("a",{attrs:{href:"https://rocketmq.apache.org/zh/docs/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://rocketmq.apache.org/zh/docs/"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("《RocketMQ技术内幕》: "),t("a",{attrs:{href:"https://blog.csdn.net/prestigeding/article/details/85233529",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://blog.csdn.net/prestigeding/article/details/85233529"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("关于 RocketMQ 对 MappedByteBuffer 的一点优化: "),t("a",{attrs:{href:"https://lishoubo.github.io/2017/09/27/MappedByteBuffer%E7%9A%84%E4%B8%80%E7%82%B9%E4%BC%98%E5%8C%96/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://lishoubo.github.io/2017/09/27/MappedByteBuffer%E7%9A%84%E4%B8%80%E7%82%B9%E4%BC%98%E5%8C%96/"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("阿里中间件团队博客-十分钟入门RocketMQ: "),t("a",{attrs:{href:"http://jm.taobao.org/2017/01/12/rocketmq-quick-start-in-10-minutes/",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://jm.taobao.org/2017/01/12/rocketmq-quick-start-in-10-minutes/"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("分布式事务的种类以及 RocketMQ 支持的分布式消息: "),t("a",{attrs:{href:"https://www.infoq.cn/article/2018/08/rocketmq-4.3-release",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.infoq.cn/article/2018/08/rocketmq-4.3-release"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("滴滴出行基于RocketMQ构建企业级消息队列服务的实践: "),t("a",{attrs:{href:"https://yq.aliyun.com/articles/664608",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://yq.aliyun.com/articles/664608"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("基于《RocketMQ技术内幕》源码注释: "),t("a",{attrs:{href:"https://github.com/LiWenGu/awesome-rocketmq",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/LiWenGu/awesome-rocketmq"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);