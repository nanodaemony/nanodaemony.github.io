(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{428:function(_,v,t){"use strict";t.r(v);var s=t(4),r=Object(s.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"_30-https"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_30-https"}},[_._v("#")]),_._v(" 30.HTTPS")]),_._v(" "),v("h4",{attrs:{id:"ssl与tls"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ssl与tls"}},[_._v("#")]),_._v(" SSL与TLS")]),_._v(" "),v("h5",{attrs:{id:"_1-概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[_._v("#")]),_._v(" 1.概述")]),_._v(" "),v("p",[_._v("TLS/SSL 是一种"),v("strong",[_._v("加密通道的规范")]),_._v(".")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("SSL(Secure Socket Layer)")]),_._v(": 安全套接层, 作用在端系统应用层的 "),v("strong",[_._v("HTTP 和运输层")]),_._v("之间, 在 "),v("strong",[_._v("TCP 之上建立起一个安全通道")]),_._v(", 为通过 "),v("strong",[_._v("TCP 传输的应用层")]),_._v("数据提供安全保障, 于 1995 年发布 3.0 版本.")]),_._v(" "),v("li",[v("strong",[_._v("TLS(Transport Layer Security)")]),_._v(": "),v("strong",[_._v("传输层安全性协议")]),_._v(", 是在 SSL3.0 的"),v("strong",[_._v("基础上")]),_._v("设计的协议, 该协议由两层组成: TLS 记录协议(TLS Record) 和 TLS 握手协议(TLS Handshake). 较低的层为 TLS 记录协议, 位于某个可靠的传输协议(例如 TCP) 上面.")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220502164157618-6040778.png",alt:""}})]),_._v(" "),v("p",[_._v("以下全部使用 "),v("strong",[_._v("TLS")]),_._v(" 来表示. TLS 是一系列密码工具的"),v("strong",[_._v("框架")]),_._v(", 作为框架, 其灵活性体现在它的每个工具套件都可以替换, 即客户端与服务端之间协商密码套件, 从而更难被攻破. 例如使用不同方式的对称密码, 或者公钥密码, 数字签名生成方式, 单向散列函数技术的替换等.")]),_._v(" "),v("p",[_._v("在"),v("strong",[_._v("发送方")]),_._v(", TLS 接收"),v("strong",[_._v("应用层")]),_._v("的数据, 对数据进行"),v("strong",[_._v("加密")]),_._v(", 然后把加了密的数据送往 "),v("strong",[_._v("TCP 套接字")]),_._v(". 在"),v("strong",[_._v("接收方")]),_._v(", TLS 从 TCP 套接字"),v("strong",[_._v("读取")]),_._v("数据, "),v("strong",[_._v("解密")]),_._v("后把数据交给"),v("strong",[_._v("应用层")]),_._v(".")]),_._v(" "),v("p",[_._v("运输层不使用安全协议和"),v("strong",[_._v("使用安全协议")]),_._v("的对比如下图所示.")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220502164501668-6040778.png",alt:""}})]),_._v(" "),v("p",[v("strong",[_._v("应用层")]),_._v("使用 TLS 最多的就是 "),v("strong",[_._v("HTTP")]),_._v(", 但 TLS "),v("strong",[_._v("并非仅用于 HTTP")]),_._v(", 而是可用于"),v("strong",[_._v("任何应用层")]),_._v("的协议.")]),_._v(" "),v("p",[v("strong",[_._v("TLS 提供的安全服务")]),_._v(":")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("TLS 服务器鉴别")]),_._v(", 允许用户证实服务器的身份. 支持 TLS 的客户端通过验证来自服务器的证书, 来鉴别服务器的真实身份并获得服务器的公钥.")]),_._v(" "),v("li",[v("strong",[_._v("TLS 客户鉴别")]),_._v(", TLS 的可选安全服务, 允许服务器证实客户的身份.")]),_._v(" "),v("li",[v("strong",[_._v("加密的 TLS 会话")]),_._v(", 对客户和服务器间发送的所有报文进行加密, 并检测报文"),v("strong",[_._v("是否被篡改")]),_._v(".")])]),_._v(" "),v("h5",{attrs:{id:"_2-ssl-tls-握手流程🌟"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-ssl-tls-握手流程🌟"}},[_._v("#")]),_._v(" 2.SSL/TLS 握手流程🌟")]),_._v(" "),v("p",[_._v("SSL/TLS 握手是为了"),v("strong",[_._v("安全")]),_._v("地协商出一份"),v("strong",[_._v("对称加密")]),_._v("的秘钥, 这个过程如下.")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/https_com-6040778.png",alt:""}})]),_._v(" "),v("p",[_._v("(1) "),v("strong",[_._v("Client Hello")]),_._v(": 握手第一步是客户端向服务端发送 "),v("strong",[_._v("Client Hello")]),_._v(" 消息, 这个消息里包含了一个客户端生成的随机数 "),v("strong",[_._v("Random1")]),_._v(", 客户端支持的"),v("strong",[_._v("加密套件")]),_._v("和 "),v("strong",[_._v("SSL 版本")]),_._v("等信息.")]),_._v(" "),v("p",[_._v("(2) "),v("strong",[_._v("Server Hello")]),_._v(": 第二步是服务端向客户端发送 "),v("strong",[_._v("Server Hello")]),_._v(" 消息, 这个消息会从 Client Hello 中支持的加密套件里确定一份加密套件, 这个套件决定了后续加密和生成摘要时具体"),v("strong",[_._v("使用哪些算法")]),_._v(", 另外还会生成一份随机数 "),v("strong",[_._v("Random2")]),_._v(". 至此客户端和服务端都拥有了"),v("strong",[_._v("两个随机数")]),_._v("(Random1 + Random2), 这两个随机数会在"),v("strong",[_._v("后续生成对称秘钥")]),_._v("时用到.")]),_._v(" "),v("p",[_._v("(3) "),v("strong",[_._v("Server Certificate")]),_._v(": 这一步是服务端将自己的"),v("strong",[_._v("证书下发给客户端")]),_._v(", 让客户端验证服务器的身份, 客户端验证通过后"),v("strong",[_._v("取出证书中的公钥")]),_._v(".")]),_._v(" "),v("p",[_._v("(4) "),v("strong",[_._v("Server Hello Done")]),_._v(": Server Hello Done 通知客户端 Server Hello 过程结束.")]),_._v(" "),v("p",[_._v("(5) "),v("strong",[_._v("Client Key Exchange")]),_._v(": 客户端根据服务器传来的"),v("strong",[_._v("公钥")]),_._v("生成 "),v("strong",[_._v("PreMaster Key")]),_._v(", Client Key Exchange 就是将这个 "),v("strong",[_._v("key 传给服务端")]),_._v(", 服务端再用自己的"),v("strong",[_._v("私钥")]),_._v("解出这个 "),v("strong",[_._v("PreMaster Key")]),_._v(" 得到客户端生成的 "),v("strong",[_._v("Random3")]),_._v(". 至此, 客户端和服务端都拥有 "),v("strong",[_._v("Random1")]),_._v(" + "),v("strong",[_._v("Random2")]),_._v(" + "),v("strong",[_._v("Random3")]),_._v(", 两边再根据同样的算法就可以"),v("strong",[_._v("生成一份秘钥")]),_._v(", 握手结束后的应用层数据都是使"),v("strong",[_._v("用这个对称秘钥进行对称加密")]),_._v(". 为什么要使用"),v("strong",[_._v("三个随机数")]),_._v("? 这是因为 SSL/TLS 握手过程的数据都是"),v("strong",[_._v("明文传输")]),_._v("的, 并且多个随机数种子来生成秘钥不容易被暴力破解出来.")]),_._v(" "),v("p",[_._v("(6) "),v("strong",[_._v("Change Cipher Spec(Client)")]),_._v(": 这一步是客户端通知服务端后面再发送的消息都会使用前面协商出来的"),v("strong",[_._v("秘钥加密")]),_._v("了, 是一条事件消息.")]),_._v(" "),v("p",[_._v("(7) "),v("strong",[_._v("Finished(Client)")]),_._v(": 客户端发送 "),v("strong",[_._v("Finished")]),_._v(" 报文. 该报文包含连接至今全部报文的整体校验值. 这次握手协议是否能成功, 要以服务器是否能够正确解密该报文作为判定标准.")]),_._v(" "),v("p",[_._v("(8) "),v("strong",[_._v("Change Cipher Spec(Server)")]),_._v(": 服务器同样发送 Change Cipher Spec 报文给客户端.")]),_._v(" "),v("p",[_._v("(9) "),v("strong",[_._v("Finished(Server)")]),_._v(": 服务器同样发送 Finished 报文给客户端.")]),_._v(" "),v("p",[_._v("(10-11) "),v("strong",[_._v("Application Data")]),_._v(": 到这里双方已安全地协商出了"),v("strong",[_._v("同一份秘钥")]),_._v(", 所有的应用层数据都会用这个秘钥"),v("strong",[_._v("对称加密")]),_._v("后再通过 TCP 进行可靠传输.")]),_._v(" "),v("p",[_._v("(12) "),v("strong",[_._v("Alert: warning, close notify")]),_._v(": 最后由客户端断开连接. 断开连接时, 发送 close_notify 报文. 上图做了一些省略, 在这步之后再发送一种叫做 MAC(Message Authentication Code) 的报文摘要. MAC 能够查知报文是否遭到篡改, 从而保护报文的完整性.")]),_._v(" "),v("h4",{attrs:{id:"https基础🌟"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https基础🌟"}},[_._v("#")]),_._v(" HTTPS基础🌟")]),_._v(" "),v("h5",{attrs:{id:"_1-http安全性问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-http安全性问题"}},[_._v("#")]),_._v(" 1.HTTP安全性问题")]),_._v(" "),v("p",[_._v("HTTP 有以下安全性问题:")]),_._v(" "),v("ul",[v("li",[_._v("(1) 使用"),v("strong",[_._v("明文")]),_._v("进行通信, 内容可能会被"),v("strong",[_._v("窃听")]),_._v(".")]),_._v(" "),v("li",[_._v("(2) "),v("strong",[_._v("没有验证")]),_._v("通信双方的身份, 通信方的身份有可能遭遇"),v("strong",[_._v("伪装")]),_._v(".")]),_._v(" "),v("li",[_._v("(3) 无法证明报文的"),v("strong",[_._v("完整性")]),_._v(", 报文有可能遭"),v("strong",[_._v("篡改")]),_._v(".")])]),_._v(" "),v("h5",{attrs:{id:"_2-https概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-https概念"}},[_._v("#")]),_._v(" 2.HTTPS概念")]),_._v(" "),v("p",[_._v("HTTPS 是基于 HTTP 进行通信, 且利用 "),v("strong",[_._v("SSL/TLS 来保证安全")]),_._v(", 即 "),v("strong",[_._v("HTTPS = HTTP + SSL/TLS")]),_._v(". 通过使用 SSL/TLS, HTTPS 具有了"),v("strong",[_._v("加密(防窃听), 认证(防伪装)和完整性保护(防篡改)")]),_._v(".")]),_._v(" "),v("p",[v("strong",[_._v("HTTP + 加密 + 认证 + 完整性保护 = HTTPS")]),_._v(".")]),_._v(" "),v("p",[v("strong",[_._v("TLS")]),_._v(": 位于 HTTP 和 TCP "),v("strong",[_._v("之间")]),_._v("的协议, 其内部有 TLS 握手协议, TLS 记录协议.")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1563596355451-1590926741449-6040778.png",alt:""}})]),_._v(" "),v("p",[_._v("下面会详述 HTTPS 是"),v("strong",[_._v("如何解决加密, 认证与完整性保护")]),_._v("这三个问题.")]),_._v(" "),v("h5",{attrs:{id:"_3-http和https的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-http和https的区别"}},[_._v("#")]),_._v(" 3.HTTP和HTTPS的区别")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("端口不同")]),_._v(": HTTP 默认端口为 "),v("strong",[_._v("80")]),_._v(", HTTPS 默认端口为 "),v("strong",[_._v("443")]),_._v(".")]),_._v(" "),v("li",[v("strong",[_._v("安全性")]),_._v(": HTTP 协议运行在 TCP 之上, 通过明文传输内容, 客户端和服务器端都"),v("strong",[_._v("无法验证对方的身份")]),_._v(". HTTPS 是运行在 "),v("strong",[_._v("SSL/TLS")]),_._v(" 之上的 HTTP 协议, "),v("strong",[_._v("SSL/TLS 运行在 TCP")]),_._v(" 之上. 所有传输的内容都经过"),v("strong",[_._v("加密")]),_._v(", 加密采用"),v("strong",[_._v("对称加密, 但对称加密的密钥用服务器方的证书进行了非对称加密")]),_._v(". HTTPS 安全性更高.")]),_._v(" "),v("li",[v("strong",[_._v("资源消耗")]),_._v(": HTTPS 比 HTTP 耗费更多服务器资源. 且 HTTPS 协议需要到 CA 申请证书, 需要交费.")])]),_._v(" "),v("p",[v("strong",[_._v("HTTPS 的缺点:")])]),_._v(" "),v("ul",[v("li",[_._v("需要进行"),v("strong",[_._v("加解密")]),_._v("等过程, 对 CPU 的额外"),v("strong",[_._v("开销较大")]),_._v(", 因此速度会更慢.")]),_._v(" "),v("li",[_._v("需要支付证书授权的高额费用.")])]),_._v(" "),v("h4",{attrs:{id:"https的加密方式🌟"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https的加密方式🌟"}},[_._v("#")]),_._v(" HTTPS的加密方式🌟")]),_._v(" "),v("p",[_._v("数据通信时需要用到一个"),v("strong",[_._v("对称加密")]),_._v("的密钥, 但是"),v("strong",[_._v("直接")]),_._v("发过去是"),v("strong",[_._v("不安全")]),_._v("的, 所以使用"),v("strong",[_._v("非对称加密")]),_._v("的方式将需要得"),v("strong",[_._v("对称加密密钥")]),_._v("发送过去.")]),_._v(" "),v("p",[_._v("HTTPS 采用**==混合加密机制==**, "),v("strong",[_._v("在交换密钥环节使用非对称加密方式, 完成秘钥交换后进行数据传输时则使用对称加密方式")]),_._v(".")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20191229163806491-1590926711864-6040778.png",alt:"image-20191229163806491"}})]),_._v(" "),v("p",[_._v("使用自己的"),v("strong",[_._v("私钥")]),_._v("对自己所认可的消息生成一个该消息专属的"),v("strong",[_._v("签名")]),_._v(", 这就是"),v("strong",[_._v("数字签名")]),_._v(", 表明"),v("strong",[_._v("承认该消息来自自己")]),_._v(". 注意: "),v("strong",[_._v("私钥用于加签, 公钥用于解签, 每个人都可以解签以查看消息的归属人")]),_._v(".")]),_._v(" "),v("p",[v("strong",[_._v("客户端: 明文 + 公钥 = 密文")]),_._v(".")]),_._v(" "),v("p",[v("strong",[_._v("服务器: 密文 + 私钥 = 明文")]),_._v(".")]),_._v(" "),v("p",[v("strong",[_._v("公钥用于加密, 私钥用于解密, 只有私钥的拥有者才能查看消息的真正内容")]),_._v(".")]),_._v(" "),v("h4",{attrs:{id:"认证🌟"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#认证🌟"}},[_._v("#")]),_._v(" 认证🌟")]),_._v(" "),v("h5",{attrs:{id:"_1-数字签名"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-数字签名"}},[_._v("#")]),_._v(" 1.数字签名")]),_._v(" "),v("p",[_._v("数字签名用于证明"),v("strong",[_._v("真实性")]),_._v(". 数字签名必须保证以下三点:")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("报文鉴别")]),_._v(": 接收者能够核实发送者对报文的签名("),v("strong",[_._v("证明来源")]),_._v(");")]),_._v(" "),v("li",[v("strong",[_._v("报文的完整性")]),_._v(": 发送者事后不能抵赖对报文的签名("),v("strong",[_._v("防抵赖")]),_._v(");")]),_._v(" "),v("li",[v("strong",[_._v("不可否认")]),_._v(": 接收者不能伪造对报文的签名("),v("strong",[_._v("防伪造")]),_._v(").")])]),_._v(" "),v("p",[_._v("现在已有多种实现各种数字签名的方法, "),v("strong",[_._v("但采用非对称加密算法更容易实现")]),_._v(".")]),_._v(" "),v("p",[_._v("A 具有自己的"),v("strong",[_._v("私钥")]),_._v(", 所以除 A 外没有别人能产生这个密文. 因此 B 相信报文 X 是 A 签名发送的. 若 A 要抵赖曾发送报文给 B, "),v("strong",[_._v("B 可将明文和对应的密文出示给第三者")]),_._v(". 第三者很容易用 A 的"),v("strong",[_._v("公钥去证实")]),_._v(" A 确实发送 X 给 B. 反之, 若 B 将 X 伪造成 X', 则 B 不能在第三者前出示对应的密文. 这样就证明了 "),v("strong",[_._v("B 伪造")]),_._v("了报文.")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220502161029183-6040778.png",alt:"",title:"数字签名过程"}})]),_._v(" "),v("h5",{attrs:{id:"_2-数字证书与ca机构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-数字证书与ca机构"}},[_._v("#")]),_._v(" 2.数字证书与CA机构")]),_._v(" "),v("p",[_._v("当服务器接收到客户端发来的请求时, 会向客户端"),v("strong",[_._v("发送")]),_._v("服务器自己的"),v("strong",[_._v("公钥")]),_._v(", 但是"),v("strong",[_._v("攻击者有可能中途篡改公钥")]),_._v(", 将其改成攻击者自己公钥, 客户端怎么知道这个公钥是自己想要访问服务器的公钥而不是黑客的呢? 所以客户端也需要对服务器发送过来的"),v("strong",[_._v("公钥进行合法性认证")]),_._v(". 这时候就需要用到 "),v("strong",[_._v("CA 数字证书")]),_._v(".")]),_._v(" "),v("p",[v("strong",[_._v("证书")]),_._v("即公钥证书(Public-Key Certificate, PKC), 保存着归属者的"),v("strong",[_._v("基本信息")]),_._v(", 证书过期时间, 归属者的"),v("strong",[_._v("公钥")]),_._v(", 并由认证机构(Certification Authority, "),v("strong",[_._v("CA")]),_._v(") 施加"),v("strong",[_._v("数字签名")]),_._v(", 表明某个认证机构认定该公钥的确属于此人.")]),_._v(" "),v("p",[v("strong",[_._v("数字证书认证机构")]),_._v("("),v("strong",[_._v("CA")]),_._v(", Certificate Authority) 是客户端与服务器双方"),v("strong",[_._v("都可信赖")]),_._v("的第"),v("strong",[_._v("三方机构")]),_._v(".")]),_._v(" "),v("h5",{attrs:{id:"_3-数字证书与公钥验证流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-数字证书与公钥验证流程"}},[_._v("#")]),_._v(" 3.数字证书与公钥验证流程")]),_._v(" "),v("p",[_._v("(1) 首先阿里需要将自己的"),v("strong",[_._v("公钥")]),_._v("发送给 "),v("strong",[_._v("CA 机构")]),_._v("进行公钥申请, 如果通过, 则 CA 机构(CA 机构"),v("strong",[_._v("自己也有公钥和私钥")]),_._v(") 则利用其"),v("strong",[_._v("私钥")]),_._v("对阿里的"),v("strong",[_._v("公钥进行非对称加密")]),_._v(", 得到加密后的"),v("strong",[_._v("明文(数字签名)")]),_._v(". 加密完之后, 得到的密文再加上"),v("strong",[_._v("证书的过期时间, 颁发给, 颁发者")]),_._v("等信息, 就组成了"),v("strong",[_._v("数字证书")]),_._v(". "),v("strong",[_._v("数字证书就是数字签名加上各种附加信息")]),_._v(".")]),_._v(" "),v("p",[_._v("(2) 用户浏览器向阿里发起 HTTPS 连接请求, 阿里会将其"),v("strong",[_._v("数字证书")]),_._v("发送给客户端, 数字证书里面就包含阿里的"),v("strong",[_._v("公钥")]),_._v(".")]),_._v(" "),v("p",[_._v("(3) 客户端首先需要对接收到的"),v("strong",[_._v("数字证书进行验证")]),_._v(", 以确保其中的公钥"),v("strong",[_._v("真的就是阿里的而且没有被人篡改")]),_._v(". 不论什么平台, 设备的操作系统中都会"),v("strong",[_._v("内置")]),_._v(" 100 多个全球公认的 "),v("strong",[_._v("CA 机构的公钥")]),_._v(". 所以客户端使用 "),v("strong",[_._v("CA 机构的公钥对数字证书中的数字签名")]),_._v("进行"),v("strong",[_._v("认证")]),_._v(", 因为证书是由 CA 机构的私钥加密的, 所以可以用 CA 的公钥对其进行解密即可实现证书验证, 如果验证成功则说明公钥是合法的.")]),_._v(" "),v("p",[_._v("数字证书验证流程如下.")]),_._v(" "),v("ul",[v("li",[_._v("首先客户端会用设备中内置的 CA 的"),v("strong",[_._v("公钥")]),_._v("尝试"),v("strong",[_._v("解密数字证书")]),_._v(", 如果所有内置的 CA 的公钥都"),v("strong",[_._v("无法解密")]),_._v("该数字证书, 说明该数字证书不是由一个全球知名的 CA 签发的, 这样客户端就"),v("strong",[_._v("无法信任")]),_._v("该服务器的"),v("strong",[_._v("数字证书")]),_._v(".")]),_._v(" "),v("li",[_._v("如果有一个 CA 的公钥能够成功"),v("strong",[_._v("解密")]),_._v("该数字证书, 说明该数字证书就是由该 CA 的私钥"),v("strong",[_._v("签发")]),_._v("的.")]),_._v(" "),v("li",[_._v('此外还需要检查客户端当前访问服务器的域名与数字证书中提供的 "颁发给" 这一项是否吻合, 还要检查数字证书是否过期等.')])]),_._v(" "),v("p",[_._v("只有通过"),v("strong",[_._v("验证之后")]),_._v("才能确保这个公钥真的是阿里发送给客户端的, 才能继续后面的加密与通信步骤. 流程看下图.")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1563596449006-1590926768385-6040778.png",alt:"",title:"数字证书验证流程"}})]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[_._v("密码")]),_._v(" "),v("th",{staticStyle:{"text-align":"center"}},[_._v("作用")]),_._v(" "),v("th",{staticStyle:{"text-align":"center"}},[_._v("组成")])])]),_._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[v("strong",[_._v("消息认证码")])]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("确认消息的完整, 并对消息的来源认证")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("共享秘钥+消息的散列值")])]),_._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[v("strong",[_._v("数字签名")])]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("对消息的散列值签名")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("公钥+私钥+消息的散列值")])]),_._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[v("strong",[_._v("公钥密码")])]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("解决"),v("strong",[_._v("秘钥")]),_._v("的"),v("strong",[_._v("配送问题")])]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("公钥+私钥+消息")])]),_._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[v("strong",[_._v("证书")])]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("解决公钥的归属问题")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("公钥密码中的公钥+数字签名")])])])]),_._v(" "),v("h5",{attrs:{id:"_4-报文鉴别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-报文鉴别"}},[_._v("#")]),_._v(" 4.报文鉴别")]),_._v(" "),v("p",[v("strong",[_._v("数字签名")]),_._v("就能够实现对报文的"),v("strong",[_._v("鉴别")]),_._v(". 然而对"),v("strong",[_._v("很长的报文")]),_._v("进行数字签名会消耗大量的计算资源. 当传送不需要加密的报文时, 应当使接收者能用"),v("strong",[_._v("更简单")]),_._v("的方法鉴别报文的真伪, 即"),v("strong",[_._v("仅对报文的消息摘要进行数字签名")]),_._v(".")]),_._v(" "),v("h6",{attrs:{id:"_1-散列函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-散列函数"}},[_._v("#")]),_._v(" (1)散列函数")]),_._v(" "),v("p",[v("strong",[_._v("散列函数")]),_._v("(Cryptographic Hash Function) 可以对很长的输入进行计算后输出一个"),v("strong",[_._v("长度固定的较短结果")]),_._v(", 输出叫做"),v("strong",[_._v("散列值")]),_._v(".")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220502162518483-6040778.png",alt:""}})]),_._v(" "),v("p",[_._v("不同的散列值肯定对应于不同的输入, 但不同的输入却可能得出相同的散列值. 散列函数的输入和输出并非一一对应, 而是"),v("strong",[_._v("多对一")]),_._v("的. "),v("strong",[_._v("密码散列函数上是一种单向函数")]),_._v(", 具有"),v("strong",[_._v("单向性")]),_._v("的特点, 要找到两个不同的报文, 它们具有同样的密码散列函数输出, 在计算上是不可行的.")]),_._v(" "),v("h6",{attrs:{id:"_2-md5和sha算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-md5和sha算法"}},[_._v("#")]),_._v(" (2)MD5和SHA算法")]),_._v(" "),v("p",[_._v("MD5 与 SHA 是常用的散列函数(算法).")]),_._v(" "),v("p",[v("strong",[_._v("MD5 报文摘要算法")])]),_._v(" "),v("p",[v("strong",[_._v("MD5")]),_._v(" 是报文摘要 MD(Message Digest) 的第 5 个版本. 其基本思想是用足够复杂的方法将报文的数据位"),v("strong",[_._v('充分"弄乱"')]),_._v(", 报文摘要中的"),v("strong",[_._v("每一位")]),_._v("都与"),v("strong",[_._v("原来报文中的每一位有关")]),_._v(".")]),_._v(" "),v("p",[v("strong",[_._v("MD5 计算步骤")]),_._v(":")]),_._v(" "),v("ol",[v("li",[v("strong",[_._v("附加")]),_._v(": 把任意长的报文按模 264 计算其余数(64位), 追加在报文的后面(长度项).")]),_._v(" "),v("li",[v("strong",[_._v("填充")]),_._v(": 在报文和长度项之间填充 1～512 位, 使得填充后的总长度是 512 的整数倍. 填充的首位是 1, 后面都是 0.")]),_._v(" "),v("li",[v("strong",[_._v("分组")]),_._v(": 把追加和填充后的报文分割为一个个 512 位的数据块, 每个 512 位的报文数据再分成 4 个 128 位的数据块.")]),_._v(" "),v("li",[v("strong",[_._v("计算")]),_._v(": 将 4 个 128 位的数据块依次送到不同的散列函数进行 4 轮计算. 每一轮又都按 32 位的小数据块进行复杂的运算. 一直到最后计算出 MD5 报文摘要代码(128 位).")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220502163340358-6040778.png",alt:""}})]),_._v(" "),v("p",[v("strong",[_._v("SHA 安全散列算法: ​")]),_._v("SHA 比 MD5 更安全, 已制定 SHA-1, SHA-2,  SHA-3 等版本, 现在用的基本都是高版本的.")]),_._v(" "),v("h6",{attrs:{id:"_3-报文鉴别码mac"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-报文鉴别码mac"}},[_._v("#")]),_._v(" (3)报文鉴别码MAC")]),_._v(" "),v("p",[_._v("靠散列函数计算出来的报文可以"),v("strong",[_._v("防篡改")]),_._v(", 但仅靠散列函数但"),v("strong",[_._v("不能防伪造")]),_._v(", 因而"),v("strong",[_._v("不能真正实现报文鉴别")]),_._v(". 例如:")]),_._v(" "),v("p",[_._v("(1) 入侵者创建了一个伪造的报文 M, 然后计算出其散列 H(M), 并把拼接有散列的扩展报文冒充 A 发送给 B.")]),_._v(" "),v("p",[_._v("(2) B 收到扩展的报文 (M, H(M)) 后, 通过散列函数的运算, 计算出收到的报文 MR 的散列 H(MR).")]),_._v(" "),v("p",[_._v("(3) 若 H(M) = H(MR), 则 B 就会误认为所收到的伪造报文就是 A 发送的.")]),_._v(" "),v("p",[_._v("为防范上述攻击, 需要"),v("strong",[_._v("对散列值进行一次加密")]),_._v(". 散列加密后的结果叫做"),v("strong",[_._v("报文鉴别码 MAC")]),_._v("(Message Authentication Code). 由于入侵者不掌握密钥 K, 所以入侵者无法伪造 A 的报文鉴别码 MAC, 因而无法伪造 A 发送的报文. 这样就"),v("strong",[_._v("完成了对报文的鉴别")]),_._v(".")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220502163801648-6040778.png",alt:""}})]),_._v(" "),v("p",[_._v("所以现在"),v("strong",[_._v("整个")]),_._v("的报文是"),v("strong",[_._v("不需要加密")]),_._v("的. 虽然从散列 H 导出报文鉴别码 MAC 需要加密算法, 但由于散列 H 的长度通常都远远小于报文 X 的长度, 因此这种加密"),v("strong",[_._v("不会消耗")]),_._v("很多的计算资源. 因此使用"),v("strong",[_._v("鉴别码 MAC 就能够很方便地保护报文的完整性")]),_._v(".")]),_._v(" "),v("h4",{attrs:{id:"完整性保护🌟"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#完整性保护🌟"}},[_._v("#")]),_._v(" 完整性保护🌟")]),_._v(" "),v("p",[v("strong",[_._v("SSL")]),_._v(" 提供一种叫做 "),v("strong",[_._v("MAC")]),_._v(" 的**==报文摘要=="),v("strong",[_._v("功能来进行")]),_._v("完整性保护**.")]),_._v(" "),v("p",[_._v("HTTP 也提供了 "),v("strong",[_._v("MD5")]),_._v(" 报文摘要功能, 但"),v("strong",[_._v("不是安全")]),_._v("的. 例如报文内容被篡改之后, 同时"),v("strong",[_._v("重新计算")]),_._v(" MD5 的值, 接收方依然无法意识到被篡改了.")]),_._v(" "),v("p",[_._v("HTTPS 的报文"),v("strong",[_._v("摘要功能")]),_._v("之所以安全, 是因为它结合了"),v("strong",[_._v("加密和认证")]),_._v("这两个操作. 加密之后的报文, 遭到篡改之后, 也很难重新计算报文摘要, 因为无法轻易获取明文.")]),_._v(" "),v("h4",{attrs:{id:"https通信流程🌟"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https通信流程🌟"}},[_._v("#")]),_._v(" HTTPS通信流程🌟")]),_._v(" "),v("p",[v("strong",[_._v("服务器端的公钥和私钥, 用来进行非对称加密. 客户端生成的随机密钥, 用来进行对称加密通信")]),_._v(".")]),_._v(" "),v("p",[_._v("整体流程如下:")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/HTTPS-6040778.png",alt:"",title:"HTTPS通信流程"}})]),_._v(" "),v("p",[_._v("(1) 客户端向服务器发起 "),v("strong",[_._v("HTTPS 请求")]),_._v(", 连接到服务器的 "),v("strong",[_._v("443 端口")]),_._v(".")]),_._v(" "),v("p",[_._v("(2) 服务器端有一个密钥对, 即"),v("strong",[_._v("公钥和私钥")]),_._v(", 是用来进行非对称加密使用的, "),v("strong",[_._v("服务器端保存着私钥")]),_._v(", 不能将其泄露; 公钥被封装到"),v("strong",[_._v("数字证书")]),_._v("中可以发送给其他人.")]),_._v(" "),v("p",[_._v("(3) 服务器将自己的数字证书"),v("strong",[_._v("发送给客户端")]),_._v(", 里面就包含服务端公钥.")]),_._v(" "),v("p",[_._v("(4) 客户端收到服务器端的数字证书之后, 会验证数字证书的"),v("strong",[_._v("合法性")]),_._v(", 这里就是通过浏览器内嵌的 "),v("strong",[_._v("CA 机构的公钥")]),_._v("对数字证书进行验证. 如果"),v("strong",[_._v("数字证书合格")]),_._v(", 那么"),v("strong",[_._v("客户端")]),_._v("会生成一个"),v("strong",[_._v("随机值")]),_._v(", 这个随机值就是后续用于进行对称加密的"),v("strong",[_._v("密钥")]),_._v(", 可将该密钥称之为"),v("strong",[_._v("客户端密钥")]),_._v(". 然后客户端用服务器数字证书中的"),v("strong",[_._v("公钥")]),_._v("对"),v("strong",[_._v("客户端密钥进行")]),_._v("​**==非对称加密==**.")]),_._v(" "),v("p",[_._v("(5) "),v("strong",[_._v("客户端")]),_._v("将"),v("strong",[_._v("非对称加密后的客户端密钥发送给服务器")]),_._v(".")]),_._v(" "),v("p",[_._v("(6) 服务器接收到客户端发来的密文之后, 会用自己的"),v("strong",[_._v("私钥")]),_._v("对其进行"),v("strong",[_._v("非对称解密")]),_._v(", 解密之后的明文就是"),v("strong",[_._v("客户端密钥")]),_._v(", 然后用客户端密钥对数据进行**==对称加密=="),v("strong",[_._v(", 这样需要传输的数据就变成了")]),_._v("密文**.")]),_._v(" "),v("p",[_._v("(7) 然后服务器将"),v("strong",[_._v("对称加密后的密文")]),_._v("发送给客户端.")]),_._v(" "),v("p",[_._v("(8) 客户端收到服务器发送来的密文, 用客户端密钥对其进行"),v("strong",[_._v("对称解密")]),_._v(", 得到服务器发送的数据.")]),_._v(" "),v("p",[_._v("‍")]),_._v(" "),v("p",[_._v("‍")]),_._v(" "),v("h4",{attrs:{id:"参考资料"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[_._v("#")]),_._v(" 参考资料")]),_._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC",target:"_blank",rel:"noopener noreferrer"}},[_._v("维基百科: 跨站脚本"),v("OutboundLink")],1)]),_._v(" "),v("li",[v("a",{attrs:{href:"https://zh.wikipedia.org/wiki/SQL%E8%B3%87%E6%96%99%E9%9A%B1%E7%A2%BC%E6%94%BB%E6%93%8A",target:"_blank",rel:"noopener noreferrer"}},[_._v("维基百科: SQL 注入攻击"),v("OutboundLink")],1)]),_._v(" "),v("li",[v("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0",target:"_blank",rel:"noopener noreferrer"}},[_._v("维基百科: 跨站点请求伪造"),v("OutboundLink")],1)]),_._v(" "),v("li",[_._v("推荐阅读: "),v("a",{attrs:{href:"https://tech.meituan.com/2018/10/11/fe-security-csrf.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("如何防止CSRF攻击? —美团技术团队"),v("OutboundLink")],1)]),_._v(" "),v("li",[v("a",{attrs:{href:"https://blog.csdn.net/zhydream77/article/details/85694614",target:"_blank",rel:"noopener noreferrer"}},[_._v("https://blog.csdn.net/zhydream77/article/details/85694614"),v("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=r.exports}}]);