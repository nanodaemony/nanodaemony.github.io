(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{494:function(s,t,a){"use strict";a.r(t);var n=a(4),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_2-内存分配与垃圾收集"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-内存分配与垃圾收集"}},[s._v("#")]),s._v(" 2.内存分配与垃圾收集")]),s._v(" "),t("p",[s._v("JVM 需解决问题: 对象是如何分配内存的? 何时进行垃圾回收? 怎么回收? Java 自动内存管理最核心的功能是"),t("strong",[s._v("堆")]),s._v("内存中对象"),t("strong",[s._v("内存的分配与回收")]),s._v(".")]),s._v(" "),t("h4",{attrs:{id:"堆的基本结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#堆的基本结构"}},[s._v("#")]),s._v(" 堆的基本结构")]),s._v(" "),t("p",[s._v("HotSpot 虚拟机堆内存的基本结构如下, 分为:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("新生代")]),s._v(": 含 Eden 区, From Survivor 区和 To Survivor 区.")]),s._v(" "),t("li",[t("strong",[s._v("老年代")])])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220517230027658.png",alt:""}})]),s._v(" "),t("p",[s._v("Java 堆是垃圾收集器管理的主要区域, 因此也被称作 "),t("strong",[s._v("GC 堆(Garbage Collected Heap)")]),s._v(". 从垃圾回收的角度, 由于现在收集器基本都采用"),t("strong",[s._v("分代垃圾收集算法")]),s._v(", 所以 Java 堆还可以细分为: "),t("strong",[s._v("新生代和老年代")]),s._v(". 再细致一点分的话分成: Eden 空间, From Survivor, To Survivor 空间等. "),t("strong",[s._v("进一步划分的目的是更好地回收内存, 或者更快地分配内存")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("S0 与 S1 的区别与联系?")])]),s._v(" "),t("p",[s._v('经过一次 GC 后, Eden 区和 "From" 区已经被'),t("strong",[s._v("清空")]),s._v('. 这个时候, "From" 和 "To" 会'),t("strong",[s._v("交换")]),s._v('他们的角色(复制), 也就是新的 "To" 就是上次 GC 前的 "From", 新的 "From" 就是上次 GC 前的 "To".')]),s._v(" "),t("p",[s._v("不管怎样, 都会保证名为 "),t("strong",[s._v("To")]),s._v(" 的 Survivor 区域是"),t("strong",[s._v("空的")]),s._v('. Minor GC 会一直重复这样的过程, 直到 "To" 区被填满, "To" 区被填满之后, 会将所有对象移动到'),t("strong",[s._v("老年代")]),s._v("中. 这两个区一次"),t("strong",[s._v("只用一个")]),s._v(", Minor GC 时采用"),t("strong",[s._v("复制算法")]),s._v("将 Eden 区和一个 Survivor 区的存活对象复制到另一个 Survivor 区中. 因此在新生代中垃圾回收算法多为"),t("strong",[s._v("复制算法")]),s._v(".")]),s._v(" "),t("h4",{attrs:{id:"对象的内存分配策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象的内存分配策略"}},[s._v("#")]),s._v(" 对象的内存分配策略")]),s._v(" "),t("p",[s._v("对象内存分配流程图大体如下所示.")]),s._v(" "),t("p",[t("img",{attrs:{src:"assets/image-20230325163536-k63gzvs.png",alt:"https://www.processon.com/diagraming/641ea4c11fae9069cfbe5358"}})]),s._v(" "),t("p",[s._v("基于上述"),t("strong",[s._v("堆结构")]),s._v("的划分, 以下是 Hotspot 虚拟机在 "),t("strong",[s._v("Serial/Serial Old")]),s._v(" 收集器下("),t("strong",[s._v("注意这个前提")]),s._v(")的内存分配与回收策略")]),s._v(" "),t("h5",{attrs:{id:"_1-对象栈上分配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-对象栈上分配"}},[s._v("#")]),s._v(" 1.对象栈上分配")]),s._v(" "),t("p",[s._v("普遍的认识是对象都在堆区分配, 但是也可能分配到虚拟机栈上.")]),s._v(" "),t("p",[s._v("大部分对象都是在堆上进行分配, 当对象没有被引用的时候, 需要依靠 GC 进行回收内存, 如果对象数量较多的时候, 会给 GC 带来较大压力, 也间接影响了应用的性能. 为了减少临时对象在堆内分配的数量, JVM 通过逃逸分析确定该对象不会被外部访问. 如果不会逃逸可以"),t("strong",[s._v("将该对象在栈上分配内存")]),s._v(", 这样"),t("strong",[s._v("该对象所占用的内存空间就可以随栈帧出栈而销毁, 就减轻了垃圾回收的压力")]),s._v(".")]),s._v(" "),t("p",[s._v("对象逃逸分析: 就是分析对象动态作用域, 当一个对象在方法中被定义后, 它可能被外部方法所引用, 例如作为调用参数传递到其他地方中.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v(" user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Jack"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// TODO 保存到数据库")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v(" user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Jack"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// TODO 保存到数据库")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("很显然 test1() 方法中的 user 对象被返回了, 这个对象的作用域范围不确定, test2() 方法中的 user 对象可以确定当方法结束这个对象就可以认为是无效对象了, 对于这样的对象其实可以将其分配在栈内存里, 让其在方法结束时跟随栈内存一起被回收掉.")]),s._v(" "),t("p",[s._v("JVM 对于这种情况可以通过开启逃逸分析参数(-XX:+DoEscapeAnalysis)来优化对象内存分配位置, 使其通过标量替换优先分配在栈上(栈上分配), JDK7 之后默认开启逃逸分析, 如果要关闭使用参数(-XX:-DoEscapeAnalysis)")]),s._v(" "),t("p",[t("strong",[s._v("标量替换")]),s._v(": 通过逃逸分析确定该对象不会被外部访问, 并且对象可以被进一步分解时, JVM 不会创建该对象, 而是"),t("strong",[s._v("将该对象成员变量分解若干个被这个方法使用的成员变量")]),s._v("所代替, 这些代替的成员变量在栈帧或寄存器上分配空间, 这样就不会因为没有一大块连续空间导致对象内存不够分配. 开启标量替换参数(-XX:+EliminateAllocations), JDK7 之后默认开启.")]),s._v(" "),t("p",[s._v("标量与聚合量: 标量即不可被进一步分解的量, 而 JAVA 的基本数据类型就是标量(如: int, long等基本数据类型以及 reference 类型等), 标量的对立就是可以被进一步分解的量, 而这种量称之为聚合量. 而在 JAVA 中对象就是可以被进一步分解的聚合量.")]),s._v(" "),t("p",[s._v("栈上分配对象示例:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * 栈上分配, 标量替换\n * 代码调用了1亿次alloc(), 如果是分配到堆上, 大概需要1GB以上堆空间, 如果堆空间小于该值, 必然会触发GC. \n */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AllotOnStack")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" start "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentTimeMillis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100000000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alloc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" end "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentTimeMillis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("end "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alloc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v(" user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Jack"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("p",[s._v("对于上面的测试, 如果采用如下的参数执行, 则一般不会发生 GC. 其实就是开启了逃逸分析和标量替换, 使得 user 对象都分配到栈上了, 方法结束后就被销毁了, 所以不会 GC.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用如下参数不会发生GC")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xmx15m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xms15m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XX")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DoEscapeAnalysis")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XX")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PrintGC")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XX")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EliminateAllocations")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("如果使用下面的参数执行代码, 也就是关闭逃逸分析和标量替换, 使得 user 对象都分配到堆上了, 方法结束后对象一直在堆中, 从而触发了较多的 GC.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用如下参数都会发生大量GC")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xmx15m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xms15m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XX")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DoEscapeAnalysis")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XX")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PrintGC")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XX")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EliminateAllocations")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xmx15m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xms15m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XX")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DoEscapeAnalysis")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XX")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PrintGC")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XX")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EliminateAllocations")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("strong",[s._v("结论: 栈上分配依赖于逃逸分析和标量替换.")])]),s._v(" "),t("h5",{attrs:{id:"_2-对象在eden区分配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-对象在eden区分配"}},[s._v("#")]),s._v(" 2.对象在Eden区分配")]),s._v(" "),t("p",[s._v("大多数情况下, 对象优先在"),t("strong",[s._v("新生代的 Eden 区")]),s._v(" 上分配, 当 Eden 空间不够时则触发 "),t("strong",[s._v("Minor GC")]),s._v(", Minor GC 后存活的"),t("strong",[s._v("对象 Survivor 区放不下, 则会被移到老年代")]),s._v(".")]),s._v(" "),t("p",[s._v("看看 demo: 添加 -XX:+PrintGCDetails 可以"),t("strong",[s._v("打印 GC 日志")]),s._v(". 这里分配 "),t("strong",[s._v("Eden 区")]),s._v("大概 60M, From 与 To 区大概 10M.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 添加运行JVM参数: -XX:+PrintGCDetails")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GCTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" allocation1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里分配60M空间")]),s._v("\n        allocation1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60000")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("运行结果:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Heap")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PSYoungGen")]),s._v("      total "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("76288")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v("K "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076b400000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0000000770900000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000007c0000000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Eden区用了100%")]),s._v("\neden space "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076b400000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076f400000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076f400000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nfrom space "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10752")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076fe80000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076fe80000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0000000770900000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("to")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("space")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10752")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076f400000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076f400000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076fe80000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 老年代用了0K")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ParOldGen")]),s._v("       total "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("175104")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("K "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006c1c00000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006cc700000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076b400000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nobject space "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("175104")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006c1c00000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006c1c00000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006cc700000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 元空间")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Metaspace")]),s._v("       used "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3342")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" capacity "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4496")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" committed "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4864")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reserved "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1056768")]),s._v("K\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" space    used "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("361")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" capacity "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("388")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" committed "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("512")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reserved "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1048576")]),s._v("K\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("可以看出 eden 区内存几乎已经"),t("strong",[s._v("被分配完全")]),s._v(". "),t("strong",[s._v("假如再为 allocation2 分配内存会出现什么情况?")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 添加运行JVM参数: -XX:+PrintGCDetails")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GCTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" allocation1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" allocation2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里分配60M")]),s._v("\n        allocation1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60000")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里再分配8M")]),s._v("\n        allocation2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8000")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("运行结果:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GC")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Allocation")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Failure")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PSYoungGen")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65253")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("936K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("76288")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65253")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("60944K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("251392")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0279083")]),s._v(" secs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Times")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.13")]),s._v(" sys"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.02")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" real"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.03")]),s._v(" secs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Heap")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 年轻代用了9591K, 大概就是8M+其他的一些内部对象的内存")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PSYoungGen")]),s._v("      total "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("76288")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9591")]),s._v("K "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076b400000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0000000774900000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000007c0000000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\neden space "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076b400000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076bc73ef8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076f400000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nfrom space "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10752")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076f400000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076f4ea020")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076fe80000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("to")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("space")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10752")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0000000773e80000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0000000773e80000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0000000774900000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 老年代用了60M")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ParOldGen")]),s._v("       total "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("175104")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60008")]),s._v("K "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006c1c00000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006cc700000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076b400000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nobject space "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("175104")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("34")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006c1c00000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006c569a010")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006cc700000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Metaspace")]),s._v("       used "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3342")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" capacity "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4496")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" committed "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4864")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reserved "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1056768")]),s._v("K\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" space    used "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("361")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" capacity "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("388")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" committed "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("512")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reserved "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1048576")]),s._v("K\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("对比之前, 可以看到"),t("strong",[s._v("第一行")]),s._v("就打印了 GC 日志.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GC")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Allocation")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Failure")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PSYoungGen")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65253")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("936K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("76288")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65253")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("60944K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("251392")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0279083")]),s._v(" secs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Times")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.13")]),s._v(" sys"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.02")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" real"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.03")]),s._v(" secs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("这里就是第一次在 Eden 区放了一个 "),t("strong",[s._v("60M")]),s._v(" 的大对象, 第二次分配 8M 对象时, "),t("strong",[s._v("Eden 区满了")]),s._v(", 触发一次 "),t("strong",[s._v("Minor GC")]),s._v(", 就会尝试将 60M 的放到 "),t("strong",[s._v("From 区")]),s._v(", 但是 From 区只有 10M 放不下, 所以把原来 "),t("strong",[s._v("60M 的对象放到老年代")]),s._v(". 之后就会把 "),t("strong",[s._v("8M 新对象")]),s._v("放到 Eden 区中. 因为给 allocation2 分配内存的时候 eden 区内存"),t("strong",[s._v("几乎已经被分配完")]),s._v("了, 当 Eden 区没有足够空间进行分配时, 虚拟机将发起一次 Minor GC, GC 期间虚拟机又发现 allocation1 无法存入 Survior 空间, 所以只好把"),t("strong",[s._v("新生代")]),s._v("的对象"),t("strong",[s._v("提前转移到老年代")]),s._v("中去, 老年代上的空间"),t("strong",[s._v("足够存放 allocation1")]),s._v(", 所以不会出现 "),t("strong",[s._v("Full GC")]),s._v(". 执行 Minor GC 后, 后面分配的对象如果能够存在 eden 区的话, 还是会在 eden 区分配内存.")]),s._v(" "),t("p",[s._v("下面验证一下再加几个 "),t("strong",[s._v("1M")]),s._v(" 的小对象:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GCTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" allocation1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" allocation2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" allocation3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" allocation4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" allocation5"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" allocation6"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 60M的对象")]),s._v("\n        allocation1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60000")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 8M的对象")]),s._v("\n        allocation2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8000")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 再加几个1M的对象")]),s._v("\n        allocation3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        allocation4 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        allocation5 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        allocation6 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" sbyte"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("测试结果:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GC")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Allocation")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Failure")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PSYoungGen")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65253")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("952K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("76288")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65253")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("60960K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("251392")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0311467")]),s._v(" secs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Times")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.08")]),s._v(" sys"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.02")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" real"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.03")]),s._v(" secs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Heap")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PSYoungGen")]),s._v(" total "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("76288")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13878")]),s._v("K "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076b400000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0000000774900000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000007c0000000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的几个1M对象分配到Eden区")]),s._v("\neden space "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076b400000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076c09fb68")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076f400000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nfrom space "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10752")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076f400000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076f4ee030")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076fe80000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("to")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("space")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10752")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0000000773e80000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0000000773e80000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0000000774900000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 老年代没变化")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ParOldGen")]),s._v("       total "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("175104")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60008")]),s._v("K "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006c1c00000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006cc700000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076b400000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nobject space "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("175104")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("34")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006c1c00000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006c569a010")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006cc700000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Metaspace")]),s._v("       used "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3343")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" capacity "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4496")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" committed "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4864")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reserved "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1056768")]),s._v("K\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" space    used "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("361")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" capacity "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("388")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" committed "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("512")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reserved "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1048576")]),s._v("K\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("跟上面的类似, 新增的几个比较小的 "),t("strong",[s._v("1M")]),s._v(" 的对象都是分配在 "),t("strong",[s._v("Eden 区")]),s._v("的.")]),s._v(" "),t("blockquote",[t("p",[s._v("Eden与Survivor区默认8:1:1")])]),s._v(" "),t("p",[s._v("大量的对象被分配在 "),t("strong",[s._v("eden 区")]),s._v(", eden 区满了后会触发 "),t("strong",[s._v("Minor GC")]),s._v(", 可能会有 99% 以上的对象成为垃圾被回收掉, 剩余存活的对象会被挪到为空的那块 survivor 区, 下一次 eden 区满了后又会触发 Minor GC, 把 eden 区和 survivor 区的垃圾对象回收, 把剩余存活的对象一次性挪动到另外一块为空的 survivor 区, 因为新生代的对象大部分都是朝生夕死的, "),t("strong",[s._v("存活时间很短, 所以 JVM 默认的 8:1:1 的比例是很合适的")]),s._v(", 让 eden 区尽量的大, survivor 区够用即可.")]),s._v(" "),t("p",[s._v("JVM 默认有这个参数 -XX:+UseAdaptiveSizePolicy(默认开启), 会导致这个 8:1:1 比例自动变化, 因此线上实际可能不是这个比例值. 如果不想这个比例有变化可以设置参数 -XX:-UseAdaptiveSizePolicy.")]),s._v(" "),t("h5",{attrs:{id:"_3-大对象直接进入老年代"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-大对象直接进入老年代"}},[s._v("#")]),s._v(" 3.大对象直接进入老年代")]),s._v(" "),t("p",[t("strong",[s._v("大对象")]),s._v("是指需要"),t("strong",[s._v("连续内存空间")]),s._v("的对象, 最典型的大对象是"),t("strong",[s._v("很长的字符串及数组")]),s._v(". 如果一个对象的大小直接已经超过了 Eden 区的大小, 则"),t("strong",[s._v("直接就放到老年代")]),s._v("了. 经常出现大对象会提"),t("strong",[s._v("前触")]),s._v("发垃圾收集以获取足够的连续空间分配给大对象. 避免为大对象分配内存时由于"),t("strong",[s._v("分配担保机制")]),s._v("带来的复制而"),t("strong",[s._v("降低效率")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("Serial 和 ParNew 两个垃圾收集器")]),s._v("可以使用参数 "),t("strong",[s._v("-XX:PretenureSizeThreshold")]),s._v(" 配置大于此值的对象"),t("strong",[s._v("直接在老年代")]),s._v("分配, 避免在 Eden 和 Survivor 之间的大量内存复制(新生代采用复制算法收集内存).")]),s._v(" "),t("p",[t("strong",[s._v("为什么要这样呢? ​")]),s._v("​"),t("strong",[t("strong",[s._v("这是为了避免为")])]),s._v("​"),t("strong",[s._v("大对象分配内存时的复制操作而降低效率")]),s._v(". 举个例子: 如果 Eden 区 60M, From 和 To 都是 10M, 当一个对象 4M 时, 假设会一直引用这个对象, 那么这个 4M 的对象就会因为 Minor GC 在 From 和 To 之间不断移动, 影响 GC 性能.")]),s._v(" "),t("h5",{attrs:{id:"_4-长期存活的对象进入老年代"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-长期存活的对象进入老年代"}},[s._v("#")]),s._v(" 4.长期存活的对象进入老年代")]),s._v(" "),t("p",[s._v("既然虚拟机采用了分代收集的思想来管理内存, 那么内存回收时就必须能识别哪些对象应放在新生代, 哪些对象应放在老年代中. 因此虚拟机给每个对象设置了一个"),t("strong",[s._v("对象年龄(Age)计数器")]),s._v(".")]),s._v(" "),t("p",[s._v("对象在 Eden 出生并经过 "),t("strong",[s._v("Minor GC")]),s._v(" 依然存活, 将移动到 "),t("strong",[s._v("Survivor")]),s._v(" 中, 年龄就增加 1 岁, 增加到"),t("strong",[s._v("一定年龄")]),s._v("则移动到老年代中. 默认晋升年龄并不都是 "),t("strong",[s._v("15")]),s._v(", 这个是要"),t("strong",[s._v("区分垃圾收集器")]),s._v("的, CMS 就是 6.")]),s._v(" "),t("p",[s._v("如果对象在 Eden 出生并经过第一次 "),t("strong",[s._v("Minor GC")]),s._v(" 后仍然能够存活, 并且能被 "),t("strong",[s._v("Survivor 容纳")]),s._v("的话, 将被移动到 Survivor 空间中, 并将对象年龄设为 1. 对象在 Survivor 中每熬过一次 MinorGC, 年龄就增加 1 岁, 当它的年龄增加到一定程度, 就会被晋升到"),t("strong",[s._v("老年代")]),s._v("中.")]),s._v(" "),t("p",[s._v("参数 -"),t("strong",[s._v("XX:MaxTenuringThreshold")]),s._v(" 用来定义"),t("strong",[s._v("年龄的阈值")]),s._v(". 年龄阈值默认为 "),t("strong",[s._v("15")]),s._v(" 岁, CMS 收集器默认 6 岁, 不同的垃圾收集器会略微有点不同.")]),s._v(" "),t("h5",{attrs:{id:"_5-对象动态年龄判定机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-对象动态年龄判定机制"}},[s._v("#")]),s._v(" 5.对象动态年龄判定机制")]),s._v(" "),t("p",[s._v("虚拟机并不是永远要求对象的年龄必须达到 "),t("strong",[s._v("MaxTenuringThreshold")]),s._v(" 才能晋升老年代, 如果在 "),t("strong",[s._v("Survivor 中相同年龄所有对象大小的总和大于 Survivor 空间的一半")]),s._v(", 则年龄大于或等于该年龄的对象可以直接进入老年代, "),t("strong",[s._v("无需")]),s._v("等到 MaxTenuringThreshold 参数指定的年龄.")]),s._v(" "),t("p",[s._v("当前放对象的 "),t("strong",[s._v("Survivor")]),s._v(" 区域里(其中一块区域, 放对象的那块 S 区), 一批对象的总大小大于这块 Survivor 区域内存大小的 "),t("strong",[s._v("50%")]),s._v("(参数 -XX:TargetSurvivorRatio 可以指定), 那么此时"),t("strong",[s._v("大于等于")]),s._v("这批对象年龄最大值的对象, 就可以"),t("strong",[s._v("直接")]),s._v("进入老年代.")]),s._v(" "),t("p",[s._v("例如 Survivor 区域里现在有一批对象, 年龄 1 + 年龄 2 + 年龄 n 的多个年龄对象"),t("strong",[s._v("总和超过了 Survivor 区域的 50%")]),s._v(", 此时就会把年龄 n(含) 以上的对象"),t("strong",[s._v("都放入")]),s._v("老年代. 这个规则其实是希望那些"),t("strong",[s._v("可能是长期存活")]),s._v("的对象, 尽早进入老年代.")]),s._v(" "),t("p",[t("strong",[s._v("对象动态年龄判断机制一般是在 Minor GC 之后触发的.")])]),s._v(" "),t("h5",{attrs:{id:"_6-老年代空间分配担保机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-老年代空间分配担保机制"}},[s._v("#")]),s._v(" 6.老年代空间分配担保机制")]),s._v(" "),t("p",[s._v("在发生 "),t("strong",[s._v("Minor GC")]),s._v(" 之前, 虚拟机"),t("strong",[s._v("先检查老年代最大可用的连续空间")]),s._v("是否大于"),t("strong",[s._v("新生代所有对象的总空间")]),s._v(", 如果条件成立的话, 那么 Minor GC 可以确认是"),t("strong",[s._v("安全")]),s._v("的, 这就是"),t("strong",[s._v("老年代空间分配担保机制")]),s._v(". "),t("strong",[s._v("担保失败")]),s._v("可能会触发 "),t("strong",[s._v("Full GC")]),s._v(".")]),s._v(" "),t("p",[s._v("如果"),t("strong",[s._v("不成立")]),s._v("的话虚拟机会查看 "),t("strong",[s._v("HandlePromotionFailure")]),s._v("(可以理解成"),t("strong",[s._v("担保参数")]),s._v(") 的值是否"),t("strong",[s._v("允许担保失败")]),s._v(", 如果允许那么就会继续检查老年代最大可用的连续空间是否大于历次晋升到老年代对象的平均大小, 如果大于, 将尝试着进行一次 "),t("strong",[s._v("Minor GC")]),s._v("; 如果"),t("strong",[s._v("小于")]),s._v("(则空间分配担保"),t("strong",[s._v("失败")]),s._v("), 或者 HandlePromotionFailure 的值"),t("strong",[s._v("不允许冒险")]),s._v(", 那么就要进行一次 "),t("strong",[s._v("Full GC")]),s._v(".")]),s._v(" "),t("p",[s._v("这里其实就是"),t("strong",[s._v("假设")]),s._v("年轻代的"),t("strong",[s._v("全部对象")]),s._v("都突然一下子放到老年代中, 如果老年代"),t("strong",[s._v("都能放得下")]),s._v(", 就可以"),t("strong",[s._v("放心做 Minor GC")]),s._v("了, 因为 Minor GC "),t("strong",[s._v("最多")]),s._v("也就是把年轻代的全部对象都放到老年代中, 如果不能全部放下, 那就需要考虑一下是"),t("strong",[s._v("否有必要执行一次 Full GC")]),s._v(" 来清理老年代的空间来存放可能到来的年轻代对象了. "),t("strong",[s._v("担保的含义")]),s._v("就是担保老年代中一定有空间来存放年轻代中可能来的对象.")]),s._v(" "),t("p",[s._v("年轻代每次 "),t("strong",[s._v("Minor GC")]),s._v(" 之前 JVM 都会计算下老年代"),t("strong",[s._v("剩余可用空间")]),s._v(". 如果这个可用空间"),t("strong",[s._v("小于年轻代里现有的所有对象大小之和")]),s._v("("),t("strong",[s._v("包括垃圾对象")]),s._v('), 就会看是否设置了担保参数 "-XX:-'),t("strong",[s._v("HandlePromotionFailure")]),s._v('"(JDK1.8 默认设置), 如果有这个参数, 就会看看老年代的可用内存大小, 是否大于之前每一次'),t("a",{attrs:{href:""}}),s._v("Minor GC 后进入老年代的对象的"),t("strong",[s._v("平均大小")]),s._v(". 如果上一步结果是"),t("strong",[s._v("小于或者之前说的参数没有设置")]),s._v(", 那么就会"),t("strong",[s._v("触发一次 Full GC")]),s._v(", 对"),t("strong",[s._v("老年代和年轻代一起回收一次垃圾")]),s._v(', 如果回收完还是没有足够空间存放新的对象就会发生 "'),t("strong",[s._v("OOM")]),s._v('".')]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220521114637643.png",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("为何这样做")]),s._v("? 其实原因就是如果 Minor GC 执行后, 如果老年代空间不够依然需要进行 Full GC 的话, "),t("strong",[s._v("不如直接一来就进行一次 Full GC")]),s._v(", 还能同时对"),t("strong",[s._v("堆的所有位置")]),s._v("进行垃圾收集, 免得 Minor GC 做了之后还要做 Full GC. 而且做了 Full GC 之后 Minor GC 也可以不用做了.")]),s._v(" "),t("h4",{attrs:{id:"minor-gc与full-gc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#minor-gc与full-gc"}},[s._v("#")]),s._v(" Minor GC与Full GC")]),s._v(" "),t("p",[s._v("针对"),t("strong",[s._v("新生代")]),s._v("和"),t("strong",[s._v("老年代")]),s._v("有不同的 "),t("strong",[s._v("GC 方法")]),s._v("即 Minor GC 和 Full GC.")]),s._v(" "),t("h5",{attrs:{id:"_1-对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-对比"}},[s._v("#")]),s._v(" 1.对比")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("新生代 GC(Minor GC/Young GC)")]),s._v(": 指发生"),t("strong",[s._v("新生代")]),s._v("的的垃圾收集动作, Minor GC 非常"),t("strong",[s._v("频繁")]),s._v(", 回收速度一般也比较快.")]),s._v(" "),t("li",[t("strong",[s._v("老年代 GC(Full GC/Major GC)")]),s._v(": 一般会同时回收"),t("strong",[s._v("老年代, 年轻代, 方法区")]),s._v("的垃圾, 出现了 Major GC 经常会伴随至少一次的 Minor GC(并非绝对), Major GC 的速度一般会比 Minor GC 的"),t("strong",[s._v("慢")]),s._v(" 10 倍以上.")])]),s._v(" "),t("h5",{attrs:{id:"_2-minor-gc触发条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-minor-gc触发条件"}},[s._v("#")]),s._v(" 2.Minor GC触发条件")]),s._v(" "),t("p",[s._v("Minor GC 发生在"),t("strong",[s._v("新生代")]),s._v("上, 因为新生代对象存活时间很短, 因此 Minor GC 会"),t("strong",[s._v("频繁")]),s._v("执行, 执行速度一般比较快.")]),s._v(" "),t("p",[t("strong",[s._v("Eden 区满了")]),s._v("就触发了 Minor GC.")]),s._v(" "),t("ul",[t("li",[s._v("新生代中的垃圾收集动作, 采用的是"),t("strong",[s._v("复制算法")]),s._v(".")]),s._v(" "),t("li",[s._v("对于较大的对象, 在 Minor GC 的时候可以直接进入"),t("strong",[s._v("老年代")]),s._v(".")])]),s._v(" "),t("h5",{attrs:{id:"_3-full-gc触发条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-full-gc触发条件"}},[s._v("#")]),s._v(" 3.Full GC触发条件")]),s._v(" "),t("p",[s._v("Full GC 发生在"),t("strong",[s._v("老年代")]),s._v("上, 老年代对象存活时间长, 因此 Full GC "),t("strong",[s._v("很少执行")]),s._v(", 执行速度会比 Minor GC 慢很多.")]),s._v(" "),t("p",[s._v("Full GC 触发相对复杂, 有以下条件:")]),s._v(" "),t("h6",{attrs:{id:"_1-调用system-gc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-调用system-gc"}},[s._v("#")]),s._v(" (1)调用System.gc()")]),s._v(" "),t("p",[s._v("只是"),t("strong",[s._v("建议")]),s._v("虚拟机执行 Full GC, 但是虚拟机"),t("strong",[s._v("不一定")]),s._v("真正去执行. 不建议使用这种方式, 而是让虚拟机管理内存. (常考)")]),s._v(" "),t("h6",{attrs:{id:"_2-老年代空间不足"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-老年代空间不足"}},[s._v("#")]),s._v(" (2)老年代空间不足")]),s._v(" "),t("p",[t("strong",[s._v("老年代空间不足")]),s._v("的常见场景为大对象直接进入老年代, 长期存活的对象进入老年代等. 为避免以上原因引起 Full GC, 应当尽量"),t("strong",[s._v("不要创建过大的对象以及数组")]),s._v(".")]),s._v(" "),t("p",[s._v("除此之外, 可以"),t("strong",[s._v("通过 -Xmn 虚拟机参数调大新生代的大小, 让对象尽量在新生代被回收掉")]),s._v(", 不进入老年代.")]),s._v(" "),t("p",[s._v("还可以通过 "),t("strong",[s._v("-XX:MaxTenuringThreshold")]),s._v(" 调大对象进入老年代的"),t("strong",[s._v("年龄")]),s._v(", 让"),t("strong",[s._v("对象在新生代多存活一段时间")]),s._v(".")]),s._v(" "),t("h6",{attrs:{id:"_3-空间分配担保失败"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-空间分配担保失败"}},[s._v("#")]),s._v(" (3)空间分配担保失败")]),s._v(" "),t("p",[s._v("使用"),t("strong",[s._v("复制算法")]),s._v("的 Minor GC 需要老年代的内存空间作"),t("strong",[s._v("担保")]),s._v(", 如果"),t("strong",[s._v("担保失败")]),s._v("会执行一次 "),t("strong",[s._v("Full GC")]),s._v(".")]),s._v(" "),t("h6",{attrs:{id:"_4-jdk7及以前的永久代空间不足"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-jdk7及以前的永久代空间不足"}},[s._v("#")]),s._v(" (4)JDK7及以前的永久代空间不足")]),s._v(" "),t("p",[s._v("在 JDK 1.7 及以前, HotSpot 虚拟机中的"),t("strong",[s._v("方法区是用永久代")]),s._v("实现的, 永久代中存放的为一些 Class 的信息, 常量, 静态变量等数据. 当系统中要加载的类, "),t("strong",[s._v("反射的类")]),s._v("和调用的方法较多时, 永久代可能会"),t("strong",[s._v("被占满")]),s._v(". Spring 经常使用反射, 在未配置为采用 CMS GC 的情况下就能触发 Full GC. 如果经过 Full GC 仍然回收不了, 就会抛出 java.lang.OutOfMemoryError.")]),s._v(" "),t("p",[s._v("为避免以上原因引起的 Full GC, 可采用的方法为"),t("strong",[s._v("增大永久代空间或转为使用 CMS GC")]),s._v(".")]),s._v(" "),t("h6",{attrs:{id:"_5-concurrent-mode-failure"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-concurrent-mode-failure"}},[s._v("#")]),s._v(" (5)Concurrent Mode Failure")]),s._v(" "),t("p",[s._v("执行 CMS GC 的过程中同时有对象要放入老年代, 而此时老年代空间不足(可能是 GC 过程中浮动垃圾过多导致暂时性的空间不足), 便会报 Concurrent Mode Failure 错误, 并触发 Full GC. 解决办法就是要"),t("strong",[s._v("让年老代留有足够的空间")]),s._v(", 以保证新对象空间的分配.")]),s._v(" "),t("h4",{attrs:{id:"判断对象是否可回收"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#判断对象是否可回收"}},[s._v("#")]),s._v(" 判断对象是否可回收?")]),s._v(" "),t("h5",{attrs:{id:"_1-引用计数算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-引用计数算法"}},[s._v("#")]),s._v(" 1.引用计数算法")]),s._v(" "),t("p",[s._v("为对象添加一个"),t("strong",[s._v("引用计数器")]),s._v(", 当对象增加一个引用时计数器加 1, 引用失效时减 1, 引用计数为 0 的对象就能被回收.")]),s._v(" "),t("p",[s._v("主流虚拟机中并没有选择这个算法来管理内存, 因为它很难解决对象之间"),t("strong",[s._v("相互循环引用")]),s._v("的问题. 在两个对象出现"),t("strong",[s._v("循环引用")]),s._v("的情况下, 此时引用计数器永远不为 0, 导致"),t("strong",[s._v("无法")]),s._v("对它们进行回收, 造成"),t("strong",[s._v("内存泄漏")]),s._v("问题.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CircularReferenceTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" instance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CircularReferenceTest")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CircularReferenceTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CircularReferenceTest")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CircularReferenceTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 循环引用")]),s._v("\n        a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("instance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("instance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 同时置空")]),s._v("\n        a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// doSomething();")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[s._v("这里实例 a 与 b 互相持有对方的引用, 因此当把对 a 与 b 的引用去除之后, 由于两个对象还存在互相之间的引用, 如果采用引用计数法就会导致这两个对象无法被回收.")]),s._v(" "),t("h5",{attrs:{id:"_2-可达性分析算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-可达性分析算法"}},[s._v("#")]),s._v(" 2.可达性分析算法")]),s._v(" "),t("p",[s._v("可达性分析算法就是以 "),t("strong",[s._v("GC Roots")]),s._v(" 为"),t("strong",[s._v("起始点")]),s._v("进行搜索, "),t("strong",[s._v("可达")]),s._v("的对象都是"),t("strong",[s._v("存活")]),s._v("的, 不可达的对象被认定为垃圾对象可被回收. 是主流的判断方法.")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220521121813327.png",alt:""}})]),s._v(" "),t("p",[s._v("Java 虚拟机使用该算法来判断对象是否可被回收, "),t("strong",[s._v("GC Roots 对象")]),s._v("有如下:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("==线程栈的本地变量==")]),s._v(". 其实就是方法执行过程中产生的对象, 这些对象实际分配到"),t("strong",[s._v("堆")]),s._v("中, 方法栈中保存着这些对象到堆区的引用. 在 GC 的时候, 如果这个方法的栈帧依然是有效的, 那这里面指向的对象就不能被回收, 因此需要以它们为 GC Root 来寻找存活的对象. 但是当线程结束之后, 这些对象就没有任何引用了.")]),s._v(" "),t("li",[t("strong",[s._v("方法区中的静态变量. ​")]),s._v("静态变量所指向的对象也是在堆中的, 因此会用静态变量作为 Root 来找堆中的存活对象.")]),s._v(" "),t("li",[t("strong",[s._v("常量池")]),s._v("中"),t("strong",[s._v("常量")]),s._v("引用的对象.")]),s._v(" "),t("li",[t("strong",[s._v("本地方法栈")]),s._v("中 JNI(即一般说的 Native 方法) 引用的对象.")])]),s._v(" "),t("p",[s._v("GC Roots 的节点主要在"),t("strong",[s._v("全局性的引用")]),s._v("(例如常量或类静态属性) 与"),t("strong",[s._v("执行上下文")]),s._v("(例如栈帧中的本地变量表) 中.")]),s._v(" "),t("h5",{attrs:{id:"_3-对象自救与finalize"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-对象自救与finalize"}},[s._v("#")]),s._v(" 3.对象自救与finalize")]),s._v(" "),t("p",[t("strong",[s._v('不可达的对象并非"非死不可"')]),s._v(". 即使在可达性分析法中"),t("strong",[s._v("不可达")]),s._v('的对象, 也并非是"非死不可"的, 这时候它们暂时处于 "'),t("strong",[s._v("缓刑阶段")]),s._v('", 要真正宣告一个对象死亡, 至少要经历'),t("strong",[s._v("两次标记")]),s._v("过程.")]),s._v(" "),t("p",[t("strong",[s._v("标记的前提是对象在进行可达性分析后发现没有与 GC Roots 相连接的引用链.")])]),s._v(" "),t("p",[t("strong",[s._v("第一次标记")]),s._v(": 可达性分析法中"),t("strong",[s._v("不可达的对象")]),s._v("被"),t("strong",[s._v("第一次标记")]),s._v("并且进行一次"),t("strong",[s._v("筛选")]),s._v(", 筛选的条件是"),t("strong",[s._v("此对象是否有必要执行 finalize() 方法")]),s._v(". 当对象没有"),t("strong",[s._v("覆写")]),s._v(" finalize() 方法, 或 finalize() 方法已经被虚拟机"),t("strong",[s._v("调用过")]),s._v("时, 对象将被"),t("strong",[s._v("直接回收")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("第二次标记")]),s._v(": 如果这个对象覆写了 finalize() 方法, finalize() 方法是对象脱逃死亡命运的"),t("strong",[s._v("最后一次机会")]),s._v(", 如果对象要在 finalize() 中成功拯救自己, 只要"),t("strong",[s._v("重新与 GC Root 引用链上的任何的一个对象建立关联")]),s._v("即可, 譬如把自己"),t("strong",[s._v("赋值给某个类变量或对象的成员变量")]),s._v(', 那在第二次标记时它将移除出 "即将回收" 的集合. 如果对象这时候还没逃脱, 那基本上它就真的被回收了.')]),s._v(" "),t("p",[s._v("注意: 一个对象的 finalize() 方法"),t("strong",[s._v("只会被执行一次")]),s._v(", 也就是说通过调用 finalize() 方法自我救命的机会"),t("strong",[s._v("就一次")]),s._v(".")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 静态变量, 这里就是一个GCRoot对象")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" userList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("finalize")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Throwable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用静态变量来挂钩GCRoot对象")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("userList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"关闭资源, userid="')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"即将被回收"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[t("strong",[s._v("总结如何自我救赎:")])]),s._v(" "),t("ol",[t("li",[s._v("对象"),t("strong",[s._v("覆写")]),s._v("了 "),t("strong",[s._v("finalize")]),s._v("() 方法(这样在被"),t("strong",[s._v("判死后才会调用此方法")]),s._v(", 才有机会做最后的救赎).")]),s._v(" "),t("li",[s._v("在 "),t("strong",[s._v("finalize")]),s._v("() 方法中"),t("strong",[s._v('重新引用到 "GC  Roots" 链')]),s._v("上(如把当前对象的引用 this 赋值给某对象的类变量/成员变量, 重新建立可达的引用).")])]),s._v(" "),t("p",[s._v("虽然以上以对象救赎举例, 但 finalize() 的作用往往被认为是"),t("strong",[s._v("用来做最后的资源回收")]),s._v(". 而且 finalize() 的调用具有"),t("strong",[s._v("不确定性")]),s._v(", 只保证方法会调用, 但"),t("strong",[s._v("不保证方法里的任务会被执行完")]),s._v("(比如一个对象可能还在自救的过程中, 就被回收了). 它用来回收资源也不会有什么好的表现. 综上: finalize() 方法"),t("strong",[s._v("并没有什么鸟用")]),s._v(".")]),s._v(" "),t("p",[s._v("finalize() 方法的运行代价高昂, 不确定性大, 无法保证各个对象的调用顺序, 如今已被官方明确声明为不推荐使用的语法.")]),s._v(" "),t("h4",{attrs:{id:"静态方法区回收"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态方法区回收"}},[s._v("#")]),s._v(" 静态方法区回收")]),s._v(" "),t("p",[s._v("Java 虚拟机规范中规定可以"),t("strong",[s._v("不要求虚拟机在方法区实现垃圾收集")]),s._v(". 因为方法区主要存放"),t("strong",[s._v("永久代")]),s._v("对象, 而永久代对象的回收率比新生代低很多, 所以在方法区上进行"),t("strong",[s._v("回收性价比不高")]),s._v(", 且回收的条件非常"),t("strong",[s._v("苛刻")]),s._v(".")]),s._v(" "),t("p",[s._v("但是为了避免内存溢出, 在大量使用"),t("strong",[s._v("反射, 动态代理, GGLib 等")]),s._v(" ByteCode 框架, OSGI 这类"),t("strong",[s._v("频繁自定义 ClassLoader")]),s._v(" 的场景都需要"),t("strong",[s._v("虚拟机具备类卸载")]),s._v("的功能, 以保证永久代"),t("strong",[s._v("不会溢出")]),s._v(".")]),s._v(" "),t("blockquote",[t("p",[s._v("方法区的垃圾回收主要是对常量池的回收和对类的卸载.(废弃常量与无用的类)")])]),s._v(" "),t("p",[t("strong",[s._v("类的卸载")]),s._v("条件很多, 需要满足以下三个条件, 并且满足了条件也不一定会被卸载, 同时满足以下的条件才是"),t("strong",[s._v("无用")]),s._v("的类:")]),s._v(" "),t("ul",[t("li",[s._v("该类所有的"),t("strong",[s._v("实例都已经被回收")]),s._v(", 此时堆中不存在该类的任何实例.")]),s._v(" "),t("li",[s._v("加载该类的 "),t("strong",[s._v("ClassLoader")]),s._v(" 已经被回收.")]),s._v(" "),t("li",[s._v("该类对应的 "),t("strong",[s._v("Class 对象")]),s._v("没有在任何地方被"),t("strong",[s._v("引用")]),s._v(", 无法在任何地方通过"),t("strong",[s._v("反射访问")]),s._v("该类方法.")])]),s._v(" "),t("blockquote",[t("p",[s._v("如何判断一个常量是废弃常量?")])]),s._v(" "),t("p",[s._v("Java 8 之后运行时常量池从"),t("strong",[s._v("方法区")]),s._v("移动到了"),t("strong",[s._v("堆")]),s._v("中, 因此也有 "),t("strong",[s._v("GC")]),s._v(" 发生. 运行时常量池主要回收的是"),t("strong",[s._v("废弃的常量")]),s._v(". 如何判断一个常量是废弃常量呢?")]),s._v(" "),t("p",[s._v('假如在常量池中存在字符串 "abc", 如果'),t("strong",[s._v("当前没有任何 String 对象引用该字符串常量")]),s._v('的话, 就说明常量 "abc" 就是废弃常量, 如果这时发生内存回收的话而且有必要的话, "abc" 就会被系统清理出常量池.')]),s._v(" "),t("h4",{attrs:{id:"引用类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引用类型"}},[s._v("#")]),s._v(" 引用类型")]),s._v(" "),t("p",[s._v("无论是通过引用计数算法判断对象的引用数量, 还是通过可达性分析算法判断对象是否可达, 判定"),t("strong",[s._v("对象是否可被回收都与引用")]),s._v("有关. Java 提供了四种强度不同的引用类型: "),t("strong",[s._v("强软弱虚")]),s._v("(强度递减).")]),s._v(" "),t("h5",{attrs:{id:"_1-强引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-强引用"}},[s._v("#")]),s._v(" 1.强引用")]),s._v(" "),t("p",[s._v("最常见的普通变量引用就是强引用.")]),s._v(" "),t("p",[s._v("被强引用的对象"),t("strong",[s._v("不会")]),s._v("被回收. 使用 new 一个新对象的方式来创建强引用, 最普遍, 类似"),t("strong",[s._v("生活必需品")]),s._v(".")]),s._v(" "),t("p",[s._v("当内存空间不足时, 虚拟机"),t("strong",[s._v("宁愿")]),s._v("抛出 OutOfMemoryError 错误使程序异常终止, 也"),t("strong",[s._v("不会")]),s._v("靠随意回收具有强引用的对象来解决内存不足问题.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h5",{attrs:{id:"_2-软引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-软引用"}},[s._v("#")]),s._v(" 2.软引用")]),s._v(" "),t("p",[s._v("被"),t("strong",[s._v("软引用")]),s._v("关联的对象只有在"),t("strong",[s._v("内存不够")]),s._v("的情况下才会被回收. 将对象用 SoftReference 软引用类型的对象包裹, 正常情况不会被回收, 但是 "),t("strong",[s._v("GC 做完")]),s._v("后发现释放不出空间存放新的对象, 则会把这些软引用的对象回收掉. "),t("strong",[s._v("类似可有可无的生活用品")]),s._v(". 如果内存"),t("strong",[s._v("足够")]),s._v(", 垃圾回收器就"),t("strong",[s._v("不会")]),s._v("回收它, 如果没有回收, 那么就可以继续使用.")]),s._v(" "),t("p",[t("strong",[s._v("软引用可用来实现内存敏感的高速缓存. ​")]),s._v("比如可以用于缓存浏览器的历史页面实现后退按钮.")]),s._v(" "),t("p",[s._v("使用 "),t("strong",[s._v("SoftReference")]),s._v(" 类来创建软引用.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SoftReference")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" sf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SoftReference")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nobj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使对象只被软引用关联")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h5",{attrs:{id:"_3-弱引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-弱引用"}},[s._v("#")]),s._v(" 3.弱引用")]),s._v(" "),t("p",[s._v("弱引用与软引用的区别在于: "),t("strong",[s._v("只具有弱引用的对象拥有更短暂的生命周期")]),s._v(". 发生 "),t("strong",[s._v("GC 的时候")]),s._v(", 如果发现有"),t("strong",[s._v("弱引用对象")]),s._v(", 不管内存够不够"),t("strong",[s._v("都会直接进行回收")]),s._v(".")]),s._v(" "),t("p",[s._v("使用 "),t("strong",[s._v("WeakReference")]),s._v(" 类来创建弱引用.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("WeakReference")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" wf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("WeakReference")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nobj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h5",{attrs:{id:"_4-虚引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-虚引用"}},[s._v("#")]),s._v(" 4.虚引用")]),s._v(" "),t("p",[s._v("又称为幽灵引用或者幻影引用, 一个对象是否有虚引用的存在, 不会对其生存时间造成影响, 也"),t("strong",[s._v("无法")]),s._v("通过虚引用得到一个对象. 如果一个对象仅持有虚引用, 那么它就和"),t("strong",[s._v("没有任何引用一样")]),s._v(", 在"),t("strong",[s._v("任何时候都可能被垃圾回收")]),s._v(". 为一个对象设置虚引用的"),t("strong",[s._v("唯一目的")]),s._v("是能在这个对象被回收时收到一个系统通知.")]),s._v(" "),t("p",[s._v("使用 "),t("strong",[s._v("PhantomReference")]),s._v(" 来创建虚引用.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PhantomReference")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" pf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PhantomReference")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nobj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h5",{attrs:{id:"_5-引用队列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-引用队列"}},[s._v("#")]),s._v(" 5.引用队列")]),s._v(" "),t("p",[t("strong",[s._v("软引用和弱引用")]),s._v("都可以和一个"),t("strong",[s._v("引用队列")]),s._v("(ReferenceQueue) 联合使用, 如果软引用或弱引用所引用的对象"),t("strong",[s._v("被垃圾回收")]),s._v(", 虚拟机就会把这个软引用或弱引用加入到"),t("strong",[s._v("与之关联的引用队列中")]),s._v(". 虚引用必须和引用队列(ReferenceQueue) 联合使用. 当垃圾回收器准备回收一个对象时, 如果发现它还有虚引用, 就会在回收对象的内存之前, 把这个虚引用加入到与之关联的引用队列中. 程序可以通过判断引用队列中是否已经加入了虚引用, 来了解被引用的对象是否将要被垃圾回收. 程序如果发现某个虚引用已经被加入到引用队列, 那么就可以在所引用的对象的内存被回收之前采取必要的行动.")]),s._v(" "),t("h4",{attrs:{id:"垃圾收集算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#垃圾收集算法"}},[s._v("#")]),s._v(" 垃圾收集算法")]),s._v(" "),t("p",[s._v("主要有四种算法. 四种算法可以应用在不同的区域及场合.")]),s._v(" "),t("h5",{attrs:{id:"_1-标记-清除算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-标记-清除算法"}},[s._v("#")]),s._v(" 1.标记-清除算法")]),s._v(" "),t("p",[s._v("主要分为"),t("strong",[s._v("标记")]),s._v("与"),t("strong",[s._v("清除")]),s._v("两个步骤.")]),s._v(" "),t("p",[t("strong",[s._v("标记阶段")]),s._v(": 程序会检查每个对象是否为"),t("strong",[s._v("活动对象")]),s._v(", 如果是活动对象, 则程序会在"),t("strong",[s._v("对象头部")]),s._v("打上标记.")]),s._v(" "),t("p",[t("strong",[s._v("清除阶段")]),s._v(": 会进行对象回收并取消标志位, 另外还会判断回收后的分块与前一个空闲分块是否连续, 若连续, 会"),t("strong",[s._v("合并这两个分块")]),s._v(". 回收对象就是把对象作为分块, "),t("strong",[s._v('连接到被称为 "空闲链表" 的单向链表')]),s._v(", 之后进行分配时只需要"),t("strong",[s._v("遍历")]),s._v("这个空闲链表, 就可以找到分块.")]),s._v(" "),t("p",[s._v("在"),t("strong",[s._v("分配")]),s._v("时, 程序会搜索空闲链表寻找空间大于等于新对象大小 size 的块 block. 如果它找到的块等于 size, 会直接返回这个分块; 如果找到的块大于 size, 会将块分割成大小为 size 与 (block - size) 的两部分, 返回大小为 size 的分块, 并把大小为 (block - size) 的块返回给空闲链表.")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220521125600745.png",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("问题")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("效率问题. 如果需要标记的对象太多, 效率不高.")]),s._v(" "),t("li",[s._v("空间问题. 标记清除后会产生大量不连续的"),t("strong",[s._v("内存碎片")]),s._v(", 导致无法给"),t("strong",[s._v("大对象")]),s._v("分配内存. 如果后面一直没有内存给大对象就会一直触发 "),t("strong",[s._v("Full GC")]),s._v(".")])]),s._v(" "),t("h5",{attrs:{id:"_2-复制算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-复制算法"}},[s._v("#")]),s._v(" 2.复制算法")]),s._v(" "),t("p",[s._v("将"),t("strong",[s._v("内存")]),s._v("划分为大小相等的"),t("strong",[s._v("两块")]),s._v(", 每次"),t("strong",[s._v("只使用其中一块")]),s._v(", 当这一块内存用完了就将还存活的对象复制到"),t("strong",[s._v("另一块上面")]),s._v(", 然后再把使用过的内存空间进行一次清理.")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220521130236760.png",alt:""}})]),s._v(" "),t("p",[s._v("现在的商业虚拟机"),t("strong",[s._v("都采用")]),s._v("这种收集算法回收"),t("strong",[s._v("新生代")]),s._v(", 但"),t("strong",[s._v("并不是划分为大小相等")]),s._v("的两块, 而是一块"),t("strong",[s._v("较大的 Eden 空间和两块较小的 Survivor 空间")]),s._v(", 每次使用 Eden 和其中"),t("strong",[s._v("一块 Survivor")]),s._v(". 即前述的 "),t("strong",[s._v("S0 和 S1 区域")]),s._v(", 回收时将 Eden 和 Survivor 中还存活的对象全部"),t("strong",[s._v("复制到另一块 Survivor")]),s._v(" 上, 最后清理 Eden 和使用过的那一块 Survivor, 确保总是有一半是干净的内存. 而且由于新生代大部分对象存活率"),t("strong",[s._v("都低")]),s._v(", 所以复制的时候需要"),t("strong",[s._v("复制的对象一般也不多")]),s._v(", 因此效率还不错.")]),s._v(" "),t("p",[s._v("HotSpot 虚拟机的 Eden 和 Survivor 大小比例默认为 "),t("strong",[s._v("8:1:1")]),s._v(", 保证了内存的利用率达到 90%. 如果每次回收有多于 10% 的对象存活, 那么一块 Survivor 就"),t("strong",[s._v("不够用")]),s._v("了, 此时需要依赖于"),t("strong",[s._v("老年代进行空间分配担保")]),s._v(", 也就是借用老年代的空间存储放不下的对象. 如果空间担保失败, 则触发 Full GC.")]),s._v(" "),t("p",[t("strong",[s._v("不足")]),s._v(": 主要不足是只使用了"),t("strong",[s._v("一半")]),s._v("的内存, 而且如果存活对象过多时导致"),t("strong",[s._v("复制")]),s._v("开销较大.")]),s._v(" "),t("h5",{attrs:{id:"_3-标记-整理算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-标记-整理算法"}},[s._v("#")]),s._v(" 3.标记-整理算法")]),s._v(" "),t("p",[s._v("让所有存活的对象都"),t("strong",[s._v("向一端移动")]),s._v(", 然后直接清理掉端边界以外的内存. 适用于"),t("strong",[s._v("老年代")]),s._v("的特点(大对象, 且存活时间长的对象).")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220521132900524.png",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("优点")]),s._v(": "),t("strong",[s._v("不会产生内存碎片")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("不足")]),s._v(": 需要"),t("strong",[s._v("移动")]),s._v("大量对象, 处理效率比较低.")]),s._v(" "),t("h5",{attrs:{id:"_4-分代收集算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-分代收集算法"}},[s._v("#")]),s._v(" 4.分代收集算法")]),s._v(" "),t("p",[s._v("现在的商业虚拟机几乎都采用"),t("strong",[s._v("分代收集算法")]),s._v(", 这种算法没有什么新的思想, 它根据"),t("strong",[s._v("对象存活周期的不同将内存划分为几块(如新生代, 老年代)")]),s._v(", 然后根据各个年代的"),t("strong",[s._v("特点")]),s._v("选择"),t("strong",[s._v("合适")]),s._v("的垃圾收集算法(这也是为什么一般将堆分为"),t("strong",[s._v("新生代和老年代")]),s._v("的原因).")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("新生代")]),s._v("使用: "),t("strong",[s._v("复制算法")]),s._v(". 在"),t("strong",[s._v("新生代")]),s._v("中, 每次收集都会有"),t("strong",[s._v("大量对象死去")]),s._v(", 所以可以选择"),t("strong",[s._v("复制算法")]),s._v(", 每次垃圾收集需要复制的对象通常"),t("strong",[s._v("不会太多")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("老年代")]),s._v("使用: "),t("strong",[s._v("标记-清除")]),s._v(" 或者 "),t("strong",[s._v("标记-整理")]),s._v(" 算法(老年代中对象存活率较高). 老年代的"),t("strong",[s._v("对象存活几率是比较高")]),s._v('的, 而且没有额外的空间对它进行分配担保, 所以必须选择 "'),t("strong",[s._v("标记-清除")]),s._v('" 或 "'),t("strong",[s._v("标记-整理")]),s._v('" 算法进行垃圾收集. "'),t("strong",[s._v("标记-清除")]),s._v('" 或 "'),t("strong",[s._v("标记-整理")]),s._v('" 算法会比复制算法'),t("strong",[s._v("慢")]),s._v(" 10 倍以上.")])]),s._v(" "),t("h4",{attrs:{id:"hotspot虚拟机垃圾收集算法实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hotspot虚拟机垃圾收集算法实现"}},[s._v("#")]),s._v(" HotSpot虚拟机垃圾收集算法实现")]),s._v(" "),t("h5",{attrs:{id:"_1-枚举根节点gc-roots"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-枚举根节点gc-roots"}},[s._v("#")]),s._v(" 1.枚举根节点GC Roots")]),s._v(" "),t("p",[s._v("以"),t("strong",[s._v("可达性分析")]),s._v("中从 "),t("strong",[s._v("GC Roots")]),s._v(" 节点找引用链的操作为例, 可以作为 GC Roots 的节点主要在"),t("strong",[s._v("全局性的引用")]),s._v("(例如常量或者类静态属性)与"),t("strong",[s._v("执行上下文")]),s._v("(例如栈帧中的本地变量表) 中.")]),s._v(" "),t("p",[s._v("但是现在很多应用仅仅"),t("strong",[s._v("方法区")]),s._v("就有数百兆, 如果要"),t("strong",[s._v("逐个检查")]),s._v("这里面的引用, 就会消耗很多的时间. 另外, 可达性分析对"),t("strong",[s._v("执行时间的敏感")]),s._v("还体现在 "),t("strong",[s._v("GC 停顿")]),s._v("上, 因为这项分析工作必须在一个能确保一致性的快照中进行---这里的“一致性”指的是在整个分析过程中整个执行系统看起来就像是被冻结在某个时间点上, 不可以出现分析过程中对象引用关系还在不停变化的情况, 该点不满足的话分析结果准确性就无法得到保证.")]),s._v(" "),t("p",[s._v("这个点是"),t("strong",[s._v("导致 GC 进行时必须停顿")]),s._v("所有执行线程的其中一个重要原因, 即使是号称不会发生停顿的 CMS 收集器中, 枚举根节点也是必须要停顿的.")]),s._v(" "),t("p",[s._v("由于目前主流 Java 虚拟机使用的都是"),t("strong",[s._v("准确式 GC")]),s._v(", 所以当执行系统停顿下来后, 并不需要一个不漏的检查完成所有执行上下文和全局的引用位置, "),t("strong",[s._v("虚拟机应当是有办法直接得知那些地方存放着对象引用的. ​")]),s._v("​"),t("strong",[t("strong",[s._v("在 HotSpot 实现中, 是使用一组被称为 ​")])]),s._v("​"),t("strong",[t("strong",[t("strong",[s._v("OopMap"),t("strong",[t("strong",[t("strong",[s._v("​")])]),s._v("​ 的数据结构来达到这个目的, 在")])]),s._v("​")]),s._v("类加载完成")]),s._v("的时候, HotSpot 就把对象上什么偏移量是什么类型计算出来, 并"),t("strong",[s._v("放入 OopMap")]),s._v(" 数据结构中了; 在 JIT 编译过程中, 也会在特定的位置记录下栈和寄存器中哪些位置是引用.")]),s._v(" "),t("p",[s._v("这样, "),t("strong",[s._v("GC 在扫描")]),s._v("时就可以直接得知这些信息了.")]),s._v(" "),t("h5",{attrs:{id:"_2-安全点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-安全点"}},[s._v("#")]),s._v(" 2.安全点")]),s._v(" "),t("p",[s._v("在 "),t("strong",[s._v("OopMap")]),s._v(" 的帮助下, HotSpot 可以"),t("strong",[s._v("快速并且准确")]),s._v("的"),t("strong",[s._v("完成 GC Roots 枚举")]),s._v("(也就是找到所有的 GC Roots), 但是这"),t("strong",[s._v("可能导致引用关系变化")]),s._v(", 也就是说在执行程序的时候 GC Roots 的引用关系可能因为"),t("strong",[s._v("代码的执行而发生变化")]),s._v(", 这时候进入 GC 就可能出问题.")]),s._v(" "),t("p",[s._v("实际上 HotSpot 也的确没有为每一条指令都生成 OopMap, 只是在 "),t("strong",[s._v('"特定的位置" 记录了这些信息')]),s._v(", 这些位置被称为是"),t("strong",[s._v("安全点")]),s._v(", "),t("strong",[s._v("即程序执行时并非是在所有地方都能停顿下来开始 GC, 只有到达安全点时才能暂停.")])]),s._v(" "),t("p",[s._v("安全点的选择既不能太少以至于让 GC 等待太长时间, 也不能过于频繁导致增大运行时负荷.")]),s._v(" "),t("p",[t("strong",[s._v('所以, 安全点的选定基本上是以程序 "是否具有让程序长时间执行的特征" 为标准进行选定的. 因为每条指令执行的时间都非常短暂, 程序不太可能因为指令流长度太长这个原因而过长时间运行, "长时间执行" 的最明显特征就是指令序列复用, 例如方法调用, 循环跳转, 异常跳转等, 所以具有这些功能的指令才会产生安全点.')])]),s._v(" "),t("p",[t("strong",[s._v("安全点")]),s._v("就是指代码中一些"),t("strong",[s._v("特定的位置")]),s._v(", 当线程运行到这些位置时它的"),t("strong",[s._v("状态是确定的")]),s._v(", 这样 JVM 就可以"),t("strong",[s._v("安全的进行一些操作")]),s._v(", 比如 "),t("strong",[s._v("GC")]),s._v(" 等, "),t("strong",[s._v("所以 GC 不是想什么时候做就立即触发的, 是需要等待所有线程运行到安全点后才能触发")]),s._v(".")]),s._v(" "),t("p",[s._v("这些特定的安全点位置主要有以下几种:")]),s._v(" "),t("ol",[t("li",[s._v("方法返回之前")]),s._v(" "),t("li",[s._v("调用某个方法之后")]),s._v(" "),t("li",[s._v("抛出异常的位置")]),s._v(" "),t("li",[s._v("循环的末尾")])]),s._v(" "),t("p",[s._v("大体实现思想是当垃圾收集需要"),t("strong",[s._v("中断线程")]),s._v("的时候, 不直接对线程操作, 仅仅简单地设置一个"),t("strong",[s._v("标志位")]),s._v(", 各个线程执行过程时会不停地主动去"),t("strong",[s._v("轮询这个标志")]),s._v(", 一旦发现中断标志为真时就自己在"),t("strong",[s._v("最近的安全点上主动中断挂起")]),s._v(". 轮询标志的地方和安全点是重合的.")]),s._v(" "),t("h5",{attrs:{id:"_3-安全区域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-安全区域"}},[s._v("#")]),s._v(" 3.安全区域")]),s._v(" "),t("p",[s._v("使用安全点似乎已经完美解决了"),t("strong",[s._v("如何进入 GC 的问题")]),s._v(", 但实际情况却并不一定, 安全点机制保证了程序执行, 在不太长的时间内就会遇到可以进入 GC 的安全点.")]),s._v(" "),t("p",[s._v('但是线程 "不执行" 的时候呢? 所谓不执行就是没有分配 CPU 时间, 典型的例子就是线程处于 Sleep 状态或者 Blocked 状态, 这时候线程无法响应 JVM 的中断请求, "走" 到安全点去中断挂起, JVM 显然也不太可能等待线程重新被分配 CPU 时间.')]),s._v(" "),t("p",[s._v("对于这种状况, 就需要"),t("strong",[s._v("安全区域")]),s._v("来解决. "),t("strong",[s._v("安全区域就是在一段代码片段中, 引用关系不会发生变化, 在这个区域中的任意地方开始 GC 都是安全的.")])]),s._v(" "),t("p",[s._v("在线程执行到安全区域中的代码时, 首先标识自己已经进入了安全区域, 当这段时间里 JVM 要发起 GC 时, 就"),t("strong",[s._v("不用管")]),s._v("标识自己为安全区域状态的线程了. 当线程要离开安全区域时, 它要检查系统是否已经完成了根节点枚举(或者是整个 GC 过程), 如果完成了, 那线程就继续执行, 否则它就必须等待直到收到可以安全离开安全区域的信号为止.")]),s._v(" "),t("p",[s._v("安全点是对"),t("strong",[s._v("正在执行的线程设定")]),s._v("的. 如果一个线程处于 Sleep 或中断状态, 它就不能响应 JVM 的中断请求, 再运行到安全点上. 因此 JVM 引入了安全区域. 安全区域是指在一段代码片段中, "),t("strong",[s._v("引用关系不会发生变化")]),s._v(". 在这个区域内的"),t("strong",[s._v("任意地方开始 GC 都是安全的")]),s._v(".")]),s._v(" "),t("h4",{attrs:{id:"垃圾收集器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#垃圾收集器"}},[s._v("#")]),s._v(" 垃圾收集器")]),s._v(" "),t("p",[t("strong",[s._v("如果说收集算法是内存回收的方法论, 那么垃圾收集器就是内存回收算法的具体实现. ​")])]),s._v(" "),t("p",[s._v("虽然对各个收集器进行比较, 但并非为了挑选出一个最好的收集器. 因为直到现在为止还没有最好的垃圾收集器出现, 更加没有万能的垃圾收集器, 能做的就是"),t("strong",[s._v("根据具体应用场景选择适合自己的垃圾收集器")]),s._v(". 如果有一种在任何场景下都适用的完美收集器存在, 那么就不会实现那么多不同的垃圾收集器了.")]),s._v(" "),t("p",[t("strong",[s._v("垃圾收集范围")]),s._v(": 垃圾收集主要是针对"),t("strong",[s._v("堆和方法区")]),s._v("进行. "),t("strong",[s._v("程序计数器, 虚拟机栈和本地方法栈这三个区域属于线程私有")]),s._v("的, 只存在于线程的生命周期内, 线程结束之后就会消失, 因此"),t("strong",[s._v("不需要")]),s._v("对这三个区域进行垃圾回收.")]),s._v(" "),t("p",[s._v("下图是 HotSpot 虚拟机中的 7 个垃圾收集器, "),t("strong",[s._v("连线")]),s._v("表示垃圾收集器可以"),t("strong",[s._v("配合使用")]),s._v(". 注意哪些收集器使用的范围.")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("新生代收集器")]),s._v(": Serial, ParNew, Parallel Scavenge 收集器.")]),s._v(" "),t("li",[t("strong",[s._v("老年代收集器")]),s._v(": Serial Old, ParNew Old, "),t("strong",[s._v("CMS 收集器")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("新生代与老年代均可")]),s._v(": "),t("strong",[s._v("G1 收集器, ZGC 等")]),s._v(".")])]),s._v(" "),t("p",[t("img",{attrs:{src:"assets/image-20230326141727-e2hy6yx.png",alt:"image"}})]),s._v(" "),t("blockquote",[t("p",[s._v("几个概念")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("单线程与多线程")]),s._v(": 单线程指的是垃圾收集器"),t("strong",[s._v("只使用一个线程")]),s._v(", 而多线程使用多个线程.")]),s._v(" "),t("li",[t("strong",[s._v("串行与并行")]),s._v(": "),t("strong",[s._v("串行")]),s._v("指的是垃圾收集器与用户程序"),t("strong",[s._v("交替执行")]),s._v(", 这意味着在执行垃圾收集的时候需要"),t("strong",[s._v("停顿用户程序")]),s._v("; "),t("strong",[s._v("并行")]),s._v("指的是垃圾收集器和用户程序"),t("strong",[s._v("同时执行")]),s._v(", 只有 "),t("strong",[s._v("CMS 和 G1 是并行")]),s._v("执行.")])]),s._v(" "),t("blockquote",[t("p",[s._v("停顿时间与吞吐量的权衡")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("停顿时间越短就越适合需要与用户交互的程序, 良好的响应速度能提升用户体验. ​")]),s._v("使用 "),t("strong",[s._v("Parallel Scavenge 和 Parallel Old")]),s._v(" 收集器. 缩短停顿时间是以牺牲吞吐量和新生代空间来换取的: 新生代空间变小, 垃圾回收变得频繁, 导致吞吐量下降.")]),s._v(" "),t("li",[t("strong",[s._v("高吞吐量则可以高效率地利用 CPU 时间, 尽快完成程序的运算任务, 适合在后台运算而不需要太多交互的任务. ​")]),s._v("可以使用 "),t("strong",[s._v("CMS")]),s._v(" 收集器.")])]),s._v(" "),t("blockquote",[t("p",[s._v("STW = Stop The World")])]),s._v(" "),t("p",[s._v("就是进行垃圾收集工作的时候必须暂停其他所有的"),t("strong",[s._v("工作线程")]),s._v(".")]),s._v(" "),t("h5",{attrs:{id:"_1-serial收集器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-serial收集器"}},[s._v("#")]),s._v(" 1.Serial收集器")]),s._v(" "),t("p",[s._v("配置参数: "),t("strong",[s._v("-XX:+UseSerialGC  -XX:+UseSerialOldGC")]),s._v(".")]),s._v(" "),t("p",[s._v("Serial 翻译为"),t("strong",[s._v("串行")]),s._v(", 也就是说它以"),t("strong",[s._v("串行的方式执行")]),s._v(". 它是"),t("strong",[s._v("单线程")]),s._v("的收集器, 只会使用一个线程进行垃圾收集工作. 它在垃圾收集时"),t("strong",[s._v("必须暂停其他")]),s._v("的工作线程(STW), 直到收集结束. 参考下图.")]),s._v(" "),t("p",[s._v("下图是 Serial 配合 Serial Old 一起使用, 这里"),t("strong",[s._v("新生代采用复制算法, 老年代采用标记-整理算法.")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220521141659319.png",alt:""}})]),s._v(" "),t("p",[s._v("它的优点是"),t("strong",[s._v("简单高效")]),s._v(", 在"),t("strong",[s._v("单个 CPU")]),s._v(" 环境下, 由于没有线程交互的开销, 因此拥有"),t("strong",[s._v("最高的单线程收集效率")]),s._v(".")]),s._v(" "),t("p",[s._v("它是虚拟机运行在 "),t("strong",[s._v("Client")]),s._v(" 模式下的默认新生代收集器, 因为在该场景下内存一般不会很大.")]),s._v(" "),t("h5",{attrs:{id:"_2-parnew收集器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-parnew收集器"}},[s._v("#")]),s._v(" 2.ParNew收集器")]),s._v(" "),t("p",[s._v("Serial 收集器适合单 CPU 下工作, 如果有"),t("strong",[s._v("多 CPU")]),s._v(", 那么可以考虑用 ParNew 收集器. 它是 "),t("strong",[s._v("Serial")]),s._v(" 收集器对应的"),t("strong",[s._v("多线程")]),s._v("版本. 多条垃圾收集线程"),t("strong",[s._v("并行")]),s._v("工作, 依然需要暂停全部用户线程(STW), 除多个线程并行执行垃圾收集外, 其余行为(控制参数, 收集算法, 回收策略等等) 和 Serial 收集器"),t("strong",[s._v("完全一样")]),s._v(".")]),s._v(" "),t("p",[s._v("它是虚拟机在 "),t("strong",[s._v("Server")]),s._v(" 模式下默认的"),t("strong",[s._v("新生代收集器")]),s._v(". 下图是 ParNew 配合 SerialOld 收集器进行, 这里"),t("strong",[s._v("新生代采用复制算法, 老年代采用标记-整理算法.")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220521142052614.png",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("默认")]),s._v("开启的"),t("strong",[s._v("线程数量")]),s._v("与 "),t("strong",[s._v("CPU 数量")]),s._v("相同, 可以使用 -XX:ParallelGCThreads 参数来设置"),t("strong",[s._v("线程数")]),s._v(".")]),s._v(" "),t("h5",{attrs:{id:"_3-parallel-scavenge收集器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-parallel-scavenge收集器"}},[s._v("#")]),s._v(" 3.Parallel Scavenge收集器")]),s._v(" "),t("p",[s._v("与 ParNew 一样是"),t("strong",[s._v("多线程")]),s._v("收集器. 但是主要关注"),t("strong",[s._v("吞吐量")]),s._v(". 因此它被称为 "),t("strong",[s._v('"吞吐量优先"')]),s._v(" 收集器. 这里的"),t("strong",[s._v("吞吐量")]),s._v("指 CPU 用于运行用户代码的时间占总时间的比值.")]),s._v(" "),t("blockquote",[t("p",[s._v("吞吐量 = 运行用户代码时间 / (运行用户代码时间 + 垃圾收集时间)")])]),s._v(" "),t("p",[s._v("下图是 Parallel Scavenge 搭配 Parallel Old, 这里"),t("strong",[s._v("新生代采用复制算法, 老年代采用标记-整理算法.")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220521142336388.png",alt:""}})]),s._v(" "),t("p",[s._v("可以通过 "),t("strong",[s._v("-XX:+UserAdaptiveSizePolicy")]),s._v(" 参数打开 GC "),t("strong",[s._v("自适应的调节策略")]),s._v(", 就不需要手工指定新生代的大小, Eden 和 Survivor 区的比例, 晋升老年代对象年龄等细节参数了. 虚拟机会根据当前系统的运行情况收集性能监控信息, "),t("strong",[s._v("动态调整")]),s._v("这些参数以提供最合适的停顿时间或者最大的吞吐量.")]),s._v(" "),t("p",[t("strong",[s._v("停顿时间越短")]),s._v("就越适合需要与用户交互的程序, 良好的响应速度能提升用户体验. 而"),t("strong",[s._v("高吞吐量")]),s._v("则可以高效率地利用 CPU 时间, 尽快完成程序的运算任务, 主要适合在"),t("strong",[s._v("后台运算")]),s._v("而不需要太多交互的任务.")]),s._v(" "),t("p",[t("strong",[s._v("与 ParNew 的不同之处: 自适应调节策略")]),s._v("是 Parallel Scavenge 与 ParNew 收集器的一个"),t("strong",[s._v("重要区别")]),s._v(". 此外, Parallel Scavenge 收集器关注点是"),t("strong",[s._v("吞吐量")]),s._v("(高效率的利用 CPU), 许多收集器关注点更多的是用户线程的停顿时间(提高用户体验).")]),s._v(" "),t("p",[s._v("Parallel Scavenge 收集器提供了两个参数用于"),t("strong",[s._v("精确控制吞吐量")]),s._v(":")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("最大垃圾收集停顿时间: ​")]),s._v("​****-XX:MaxGCPauseMills, 这个参数允许的值是一个大于 0 的毫秒数, 收集器将尽可能地保证内存回收所花费的时间****​"),t("strong",[s._v("不超过设定值")]),s._v(". 但 GC 的停顿时间缩短是以牺牲吞吐量和新生代空间来换取的. 停顿时间下降, 但吞吐量也降下来了.")]),s._v(" "),t("li",[t("strong",[s._v("吞吐量大小: ​")]),s._v("​****-XX:GCTimeRatio, 这个参数的值是一个大于 0 且小于 100 的整数, 也就是****​"),t("strong",[s._v("垃圾收集时间占总时间的比例")]),s._v(", 相当于吞吐量的倒数. 区间 1/(1+99) ~ 1/(1+1), 即 1% ~ 50%.")])]),s._v(" "),t("h5",{attrs:{id:"_4-serial-old收集器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-serial-old收集器"}},[s._v("#")]),s._v(" 4.Serial Old收集器")]),s._v(" "),t("p",[s._v("是 "),t("strong",[s._v("Serial")]),s._v(" 收集器的"),t("strong",[s._v("老年代")]),s._v("版本, 也是给 "),t("strong",[s._v("Client")]),s._v(" 场景下的虚拟机使用. 它同样是一个"),t("strong",[s._v("单线程")]),s._v('收集器, 使用 "标记-整理" 算法.')]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220521141659319.png",alt:""}})]),s._v(" "),t("p",[s._v("如果用在 Server 场景下, 它有两大用途:")]),s._v(" "),t("ul",[t("li",[s._v("在 JDK5 以及之前版本(Parallel Old 诞生以前) 中与 Parallel Scavenge 收集器搭配使用.")]),s._v(" "),t("li",[s._v("作为 CMS 收集器的后备预案, 在并发收集发生 Concurrent Mode Failure 时使用.")])]),s._v(" "),t("h5",{attrs:{id:"_5-parallel-old收集器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-parallel-old收集器"}},[s._v("#")]),s._v(" 5.Parallel Old收集器")]),s._v(" "),t("p",[s._v("是 "),t("strong",[s._v("Parallel Scavenge")]),s._v(" 收集器的"),t("strong",[s._v("老年代")]),s._v("版本, 也是关注"),t("strong",[s._v("吞吐量")]),s._v('. 使用多线程和 "标记-整理" 算法.')]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220521142336388.png",alt:""}})]),s._v(" "),t("p",[s._v("在注重"),t("strong",[s._v("吞吐量")]),s._v("以及 "),t("strong",[s._v("CPU 资源敏感")]),s._v("的场合, 都可以优先考虑 Parallel Scavenge 加 Parallel Old 收集器.")]),s._v(" "),t("h5",{attrs:{id:"_6-cms收集器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-cms收集器"}},[s._v("#")]),s._v(" 6.CMS收集器")]),s._v(" "),t("p",[s._v("CMS 只能用在"),t("strong",[s._v("老年代")]),s._v(", 通常搭配 "),t("strong",[s._v("ParNew")]),s._v(" 使用(JDK 1.8 之前).")]),s._v(" "),t("p",[s._v("CMS(Concurrent Mark Sweep), Concurrent 指"),t("strong",[s._v("并发")]),s._v(", Mark Sweep 指的是 "),t("strong",[s._v('"标记-清除" 算法')]),s._v(". 是一种以"),t("strong",[s._v("获取最短回收停顿时间")]),s._v("为目标的收集器, 注重用户体验. 比如"),t("strong",[s._v("服务器尤其重视服务响应速度")]),s._v(", 希望系统的停顿时间最短. "),t("strong",[s._v("它非常符合在注重用户体验的应用上使用, 它是 HotSpot 虚拟机第一款真正意义上的并发收集器, 它第一次实现了让垃圾收集线程与用户线程(基本上)同时工作.")])]),s._v(" "),t("h6",{attrs:{id:"_1-收集流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-收集流程"}},[s._v("#")]),s._v(" (1)收集流程")]),s._v(" "),t("p",[s._v("分为以下几个流程:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("初始标记")]),s._v(": "),t("strong",[s._v("暂停所有")]),s._v("其他线程, 并记录下 GC Roots "),t("strong",[s._v("直接能引用的对象(也就是 GC Root 直接连接的对象, 后面的引用链上的对象不管)")]),s._v(", 虽然会存在 STW 但是"),t("strong",[s._v("速度很快")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("并发标记")]),s._v(": 并发标记阶段就是从上一步找到的 GC Roots 的"),t("strong",[s._v("直接关联对象")]),s._v("开始"),t("strong",[s._v("遍历整个对象图")]),s._v("的过程, 从而得到所有跟 GC Root 连接的对象, 这个过程耗时"),t("strong",[s._v("最长")]),s._v("但是"),t("strong",[s._v("不需要停顿")]),s._v("用户线程, 可以与垃圾收集线程一起"),t("strong",[s._v("并发运行")]),s._v(". 因为用户程序继续运行, 可能会有导致已经标记过的对象状态发生改变. 比如有的对象在开始并发标记的时候是存活的, 但是并发标记不会 STW, 随着用户线程释放后就变成垃圾对象了.")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220521143207389.png",alt:""}})]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("重新标记")]),s._v(": 为了"),t("strong",[s._v("修正并发标记")]),s._v("期间因用户程序"),t("strong",[s._v("继续运作而导致标记产生变动")]),s._v("的那一部分对象的标记记录(主要是处理漏标问题), 也需要进行 STW. "),t("strong",[s._v("这个阶段的停顿时间一般会比初始标记阶段的时间稍长, 但也远远比并发标记阶段时间短")]),s._v(". "),t("strong",[s._v("这个阶段主要用到")]),s._v("​**==三色标记里的增量更新算法=="),t("strong",[s._v("​")]),s._v("做重新标记**.")]),s._v(" "),t("li",[t("strong",[s._v("并发清理")]),s._v(": 开启用户线程, 同时 GC 线程开始对未标记的区域做"),t("strong",[s._v("清扫")]),s._v(". "),t("strong",[s._v("不需要")]),s._v("停顿. 这个阶段如果有"),t("strong",[s._v("新增对象会被标记为黑色")]),s._v("不做任何处理.")]),s._v(" "),t("li",[t("strong",[s._v("重置清理")]),s._v(": 重置本次 GC 过程中的标记数据.")])]),s._v(" "),t("p",[s._v("在整个过程中"),t("strong",[s._v("耗时最长的并发标记和并发清除")]),s._v("过程中, 收集器线程都可以与用户线程一起工作, "),t("strong",[s._v("不需要进行停顿")]),s._v(". 需要 STW 的地方都是耗时比较短的初始标记和重新标记阶段.")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220521154058783.png",alt:""}})]),s._v(" "),t("h6",{attrs:{id:"_2-优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-优缺点"}},[s._v("#")]),s._v(" (2)优缺点")]),s._v(" "),t("p",[t("strong",[s._v("优点")]),s._v(": "),t("strong",[s._v("并发收集, 低停顿")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("缺点:")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("对 CPU 资源敏感吞吐量低. ​")]),s._v("缩短停顿时间是以牺牲吞吐量和新生代空间来换取的, 新生代空间变小, 垃圾回收变得频繁, 导致吞吐量下降. 导致 CPU 利用率不够高. 垃圾收集会和服务"),t("strong",[s._v("抢资源")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("==无法处理浮动垃圾, 从而导致执行过程存在不确定性=="),t("strong",[s._v("​")]),s._v(". 浮动垃圾")]),s._v("是指并发清除阶段由于"),t("strong",[s._v("用户线程继续运行")]),s._v("而产生的垃圾, 这部分垃圾只能到"),t("strong",[s._v("下一次")]),s._v(" GC 时才能进行回收. 可能出现上一次垃圾回收还没执行完, 然后垃圾回收又被触发的情况, 特别是在并发标记和并发清理阶段会出现, 一边回收, 系统一边运行, 也许没回收完就再次触发 Full GC, 也就是 "),t("strong",[s._v("Concurrent Mode Failure")]),s._v("(不会 OOM), 这时虚拟机将 STW 并临时启用 "),t("strong",[s._v("Serial Old")]),s._v(" 来替代 CMS 进行垃圾收集.")]),s._v(" "),t("li",[t("strong",[s._v('"标记-清除" 算法导致的空间碎片')]),s._v(", 往往出现老年代空间剩余, 但无法找到"),t("strong",[s._v("足够大连续空间")]),s._v("来分配当前对象, 不得不提前触发一次 "),t("strong",[s._v("Full GC")]),s._v(". 当然通过参数 -XX:+UseCMSCompactAtFullCollection 可以让 JVM 在执行完标记清除后再做整理.")])]),s._v(" "),t("h6",{attrs:{id:"_3-参数设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-参数设置"}},[s._v("#")]),s._v(" (3)参数设置")]),s._v(" "),t("p",[s._v("CMS 相关虚拟机参数:")]),s._v(" "),t("ul",[t("li",[s._v("-XX:+UseConcMarkSweepGC: "),t("strong",[s._v("启用 CMS")]),s._v(".")]),s._v(" "),t("li",[s._v("-XX:ConcGCThreads: 并发的 GC 线程数.")]),s._v(" "),t("li",[s._v("-XX:+UseCMSCompactAtFullCollection: FullGC 之后做压缩整理(减少碎片), Mark Sweep 不会自动进行碎片整理, 需要在此配置.")]),s._v(" "),t("li",[s._v("-XX:CMSFullGCsBeforeCompaction: 多少次 FullGC 之后"),t("strong",[s._v("压缩一次")]),s._v(", 默认是 0, 代表每次 FullGC 后都会压缩一次.")]),s._v(" "),t("li",[s._v("-XX:CMSInitiatingOccupancyFraction: 当老年代使用达到该"),t("strong",[s._v("比例")]),s._v("时会触发 FullGC.")]),s._v(" "),t("li",[s._v("-XX:+UseCMSInitiatingOccupancyOnly: 只使用设定的回收阈值(-XX:CMSInitiatingOccupancyFraction 设定的值), 如果不指定, JVM 仅在第一次使用设定值, 后续则会自动调整.")]),s._v(" "),t("li",[s._v("-XX:+CMSScavengeBeforeRemark: 在 CMS GC "),t("strong",[s._v("前启动一次 Minor GC")]),s._v(", 目的在于"),t("strong",[s._v("减少老年代对年轻代的引用")]),s._v("(因为年轻代很多对象都是垃圾对象), 降低 CMS GC 的标记阶段时的开销, 一般 CMS 的 GC 耗时 80% 都在"),t("strong",[s._v("并发标记阶段")]),s._v(".")]),s._v(" "),t("li",[s._v("-XX:+CMSParallellnitialMarkEnabled: 表示在初始标记的多线程执行, 减少 STW.")]),s._v(" "),t("li",[s._v("-XX:+CMSParallelRemarkEnabled: 在重新标记的时候多线程执行, 降低 STW.")])]),s._v(" "),t("h6",{attrs:{id:"_4-应用实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-应用实例"}},[s._v("#")]),s._v(" (4)应用实例")]),s._v(" "),t("p",[t("strong",[s._v("内存较小")]),s._v("的系统可以使用: "),t("strong",[s._v("ParNew + CMS, ​")]),s._v("一般的应用场景可以用这个组合.")]),s._v(" "),t("h5",{attrs:{id:"_7-g1收集器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-g1收集器"}},[s._v("#")]),s._v(" 7.G1收集器")]),s._v(" "),t("h6",{attrs:{id:"_1-概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[s._v("#")]),s._v(" (1)概述")]),s._v(" "),t("p",[t("strong",[s._v("G1")]),s._v("(Garbage-First) 是一款"),t("strong",[s._v("面向服务端")]),s._v("应用的垃圾收集器, 主要针对配备"),t("strong",[s._v("多颗处理器及大容量内存")]),s._v("的机器, "),t("strong",[s._v("以极高概率满足 GC 停顿时间要求的同时,还具备高吞吐量性能特征")]),s._v(". JDK9 中默认的垃圾收集器就是 G1.")]),s._v(" "),t("p",[t("strong",[s._v("G1 可以同时用在年轻代和老年代. ​")]),s._v("​"),t("strong",[t("strong",[s._v("堆被分为新生代和老年代, 其它收集器进行收集的范围都是整个新生代或者老年代中的一个, 而 ​")])]),s._v("​"),t("strong",[t("strong",[t("strong",[s._v("G1 可以直接对新生代和老年代一起回收. ​"),t("strong",[t("strong",[t("strong",[s._v("​")])])])]),s._v("G1 的设计原则就是简单可行的性能调优, G1 将新生代, 老年代的")])]),t("strong",[t("strong",[s._v("​")])]),t("strong",[s._v("物理空间"),t("strong",[t("strong",[t("strong",[s._v("​")])]),s._v("划分")])]),s._v("​"),t("strong",[s._v("取消")]),s._v("了.")]),s._v(" "),t("p",[s._v("G1 把"),t("strong",[s._v("堆")]),s._v("划分成多个大小相等的"),t("strong",[s._v("独立区域")]),s._v("(Region), 新生代和老年代"),t("strong",[s._v("不再")]),s._v("物理隔离, 各个区域是"),t("strong",[s._v("不一定连续")]),s._v("的. 如下图所示.")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220521153429792.png",alt:""}})]),s._v(" "),t("p",[s._v("一般 "),t("strong",[s._v("Region")]),s._v(" 大小等于"),t("strong",[s._v("堆大小除以 2048(个)")]),s._v(', 比如堆大小为 4096 M, 则 Region 大小为 2M, 当然也可以用参数 "-XX:G1HeapRegionSize" 手动指定 Region 大小, 推荐默认的计算方式.')]),s._v(" "),t("p",[s._v("G1 保留了"),t("strong",[s._v("年轻代和老年代的概念")]),s._v(", 但"),t("strong",[s._v("不再是物理隔离")]),s._v("了, 它们都是可以不连续 Region 的集合. 默认"),t("strong",[s._v("年轻代")]),s._v("对堆内存的占比是 "),t("strong",[s._v("5%")]),s._v(', 如果堆大小为 4096 M, 那么年轻代占据 200MB 左右的内存, 对应大概是 100 个 Region, 可以通过 "-XX:G1NewSizePercent" 设置'),t("strong",[s._v("年轻代初始占比")]),s._v(", 在系统运行中, JVM 会"),t("strong",[s._v("不停的给年轻代增加更多")]),s._v("的 Region, 但是最多"),t("strong",[s._v("新生代的占比不会超过 60%")]),s._v(', 可以通过 "-XX:G1MaxNewSizePercent" 调整. 年轻代中的 Eden 和 Survivor 对应的 region 也跟之前一样, 默认 '),t("strong",[s._v("8:1:1")]),s._v(", 假设年轻代现在有 1000 个 region, eden 区对应 800 个, s0 对应 100 个, s1 对应 100 个.")]),s._v(" "),t("p",[s._v("一个 Region 可能之前是年轻代, 如果 Region 进行了垃圾回收, 之后可能又会变成老年代, 也就是说 Region 的"),t("strong",[s._v("区域功能可能会动态变化")]),s._v(".")]),s._v(" "),t("p",[s._v("G1 垃圾收集器对于对象什么时候会转移到老年代跟之前的原则(参考对象内存分配原则)一样, "),t("strong",[s._v("唯一不同的是对大对象的处理")]),s._v(", G1 有"),t("strong",[s._v("专门分配大对象")]),s._v("的 Region 叫 "),t("strong",[s._v("Humongous 区")]),s._v(", 而"),t("strong",[s._v("不是让大对象直接进入老年代的 Region")]),s._v(" 中. 在 G1 中, 大对象的判定规则就是一个"),t("strong",[s._v("大对象")]),s._v("超过了一个 "),t("strong",[s._v("Region 大小的 50%")]),s._v(", 比如按照上面算的, 每个 Region 是 2M, 只要一个大对象超过了 1M, 就会被放入 "),t("strong",[s._v("Humongous")]),s._v(" 中, 而且一个大对象如果太大, 可能会"),t("strong",[s._v("横跨多个")]),s._v(" Region 来存放. 用 "),t("strong",[s._v("Humongous")]),s._v(" 区专门"),t("strong",[s._v("存放短期巨型对象")]),s._v(", 不用直接进老年代, 可以节约老年代的空间, 避免因为老年代空间不够的 GC 开销. Full GC 的时候除了收集年轻代和老年代之外, 也会将 Humongous 区一并回收.")]),s._v(" "),t("p",[s._v("通过引入 "),t("strong",[s._v("Region")]),s._v(" 的概念, 从而将原来的一整块内存空间划分成多个的"),t("strong",[s._v("小空间")]),s._v(", 使得每个"),t("strong",[s._v("小空间")]),s._v("可以"),t("strong",[s._v("单独")]),s._v("进行垃圾回收. 这种划分方法带来了很大的灵活性, 使得"),t("strong",[s._v("可预测的停顿时间")]),s._v("模型成为可能. 通过记录每个 Region 垃圾回收时间以及回收所获得的空间(这两个值是通过过去回收的经验获得), 并维护一个"),t("strong",[s._v("优先列表")]),s._v(", 每次根据允许的收集时间, 优先回收"),t("strong",[s._v("价值最大")]),s._v("的 Region. 每个 Region 都有一个 "),t("strong",[s._v("Remembered Set")]),s._v(", 用来记录该 Region 对象的引用对象所在的 Region. 通过使用 Remembered Set, 在做可达性分析的时候就可以"),t("strong",[s._v("避免全堆扫描")]),s._v(".")]),s._v(" "),t("h6",{attrs:{id:"_2-收集流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-收集流程"}},[s._v("#")]),s._v(" (2)收集流程")]),s._v(" "),t("p",[s._v("对比 CMS 与 G1 的前面几个步骤都类似, 初始标记, 并发标记, 再次标记(最终标记), 不同主要在于最后一步的筛选回收的部分, G1 通过分 region 的方式可以设置"),t("strong",[s._v("具体的停顿时间")]),s._v(", 并且 G1 不会产生内存碎片.")]),s._v(" "),t("p",[s._v("如果"),t("strong",[s._v("不计算")]),s._v("维护 Remembered Set 的操作, G1 收集器的运作大致可划分为以下几个步骤, 前几个步骤与 CMS 收集器类似, 主要区别在于"),t("strong",[s._v("第四步")]),s._v(":")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("初始标记(STW)")]),s._v(": 类似 CMS 的初始标记, 暂停所有的其他线程, 并记录下 GC Roots 直接能引用的对象, "),t("strong",[s._v("速度很快")]),s._v(" .")]),s._v(" "),t("li",[t("strong",[s._v("并发标记")]),s._v(": 类似 CMS 的并发标记.")]),s._v(" "),t("li",[t("strong",[s._v("最终标记(STW)")]),s._v(": 类似 CMS 的重新标记. 为了修正在"),t("strong",[s._v("并发标记期间")]),s._v("因用户线程"),t("strong",[s._v("继续运作")]),s._v("而导致标记产生变动的那一部分标记记录, 虚拟机将这段时间对象变化记录在线程的 Remembered Set Logs 里面, 最终标记阶段需要把 Remembered Set Logs 的数据合并到 Remembered Set 中. 这阶段需要停顿线程, 但是可并行执行.")]),s._v(" "),t("li",[t("strong",[s._v("筛选回收(STW)")]),s._v(": 首先对各个 Region 中的**==回收价值和成本进行排序=="),t("strong",[s._v(", 根据用户所期望的 GC "),t("strong",[s._v("停顿 STW 时间(可以用参数 -XX:MaxGCPauseMillis 指定)")]),s._v(" 来制定回收计划. 比如老年代有 1000 个 Region 都满了, 但是根据预期设置的停顿时间, 本次垃圾回收可能")]),s._v("只能停顿 200 毫秒**, 那么通过之前回收成本计算得知回收其中 800 个 Region 刚好需要 200ms, 那么就只会回收 800 个 Region, 尽量把 GC 导致的停顿时间控制在"),t("strong",[s._v("指定的范围内")]),s._v(". 此阶段其实也可以做到与用户程序一起并发执行, 但是因为只回收"),t("strong",[s._v("一部分 Region")]),s._v(", 时间是用户可控制的, 而且停顿用户线程将大幅度提高收集效率. G1 不管是年轻代或是老年代, "),t("strong",[s._v("回收算法主要用的是复制算法")]),s._v(", "),t("strong",[s._v("将一个 region 中的存活对象复制到另一个 region 中, 这种不会像 CMS 那样回收完因为有很多内存碎片还需要整理一次, G1 采用复制算法回收几乎不会有太多内存碎片")]),s._v(". 看上图觉得可能也会有很多空格, 这不算内存碎片, 因为一个 region 格子可以存放很多对象. (注意: CMS 回收阶段是跟用户线程一起并发执行的, G1 因为内部实现太复杂暂时没实现并发回收, 不过到了 ZGC, Shenandoah 就实现了并发收集, Shenandoah 可以看成是 G1 的升级版本).")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20220521154201453.png",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("G1 收集器在后台维护了一个优先列表, 每次根据允许的收集时间, 优先选择回收价值最大的 Region, 这也就是它的名字 Garbage-First 的由来. 比如一个 Region 花 200ms 能回收 10M 垃圾, 另外一个 Region 花 50ms 能回收 20M 垃圾, 在回收时间有限情况下, G1 当然会优先选择后面这个 Region 回收")]),s._v(". 这种使用 Region 划分内存空间以及有"),t("strong",[s._v("优先级")]),s._v("的区域回收方式, 保证了 G1 收集器在"),t("strong",[s._v("有限时间内可以尽可能高的收集效率")]),s._v(".")]),s._v(" "),t("h6",{attrs:{id:"_3-特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-特点"}},[s._v("#")]),s._v(" (3)特点")]),s._v(" "),t("p",[s._v("具备如下"),t("strong",[s._v("特点")]),s._v(":")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("并行与并发")]),s._v(". G1 能充分利用 CPU, 多核环境下的硬件优势, 使用多 CPU 来"),t("strong",[s._v("缩短")]),s._v(" STW 停顿时间. 部分其他收集器原本需要停顿用户线程来执行 GC, G1 收集器可以通过并发的方式让用户线程继续执行.")]),s._v(" "),t("li",[s._v("分代收集: 虽然 G1 可以不需要其他收集器配合就能独立管理整个 GC 堆, 但是依然保留了分代的概念.")]),s._v(" "),t("li",[t("strong",[s._v("空间整合")]),s._v(": G1 从"),t("strong",[s._v("整体")]),s._v('来看是基于 "'),t("strong",[s._v("标记-整理")]),s._v('" 算法实现的收集器; 从'),t("strong",[s._v("局部")]),s._v('(两个 Region 之间) 上来看是基于 "'),t("strong",[s._v("复制")]),s._v('" 算法实现的, 这意味着运行期间'),t("strong",[s._v("不会产生内存空间碎片")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("==可预测的停顿==")]),s._v(": 这是 G1 相对于 CMS 的另一个大"),t("strong",[s._v("优势")]),s._v(", "),t("strong",[s._v("降低 STW 时间")]),s._v("是 G1 和 CMS 共同的关注点, 但 G1 除了追求低停顿外, 还能建立"),t("strong",[s._v("可预测的停顿时间模型")]),s._v(', 能让使用者明确指定在一个**长度为 M 毫秒的时间片段(参数"-XX:MaxGCPauseMillis")**内完成垃圾收集.')])]),s._v(" "),t("p",[s._v("可以"),t("strong",[s._v("由用户指定期望的停顿时间")]),s._v('是 G1 收集器很强大的一个功能, 设置不同的期望停顿时间, 可使得 G1 在不同应用场景中取得关注吞吐量和关注延迟之间的最佳平衡. 不过这里设置的 "期望值" 必须是符合实际的, 毕竟 G1 需要暂停用户线程来复制对象, 这个停顿时间再怎么低也得有个'),t("strong",[s._v("限度")]),s._v(". 它默认的停顿目标为 "),t("strong",[s._v("200ms")]),s._v(". 一般来说, 回收阶段占到几十到一百甚至接近两百毫秒都很正常, 但如果把停顿时间调得非常低如二十毫秒, 很可能出现的结果就是由于停顿目标时间太短, 导致每次选出来的回收集只占堆内存很小的一部分, 收集器收集的速度逐渐跟不上分配器分配的速度, 导致"),t("strong",[s._v("垃圾慢慢堆积")]),s._v(". 应用运行时间一长就不行了, 最终占满堆引发 Full GC 反而降低性能, 所以通常把期望停顿时间设置为 "),t("strong",[s._v("100-300 ms")]),s._v(" 会是比较合理的.")]),s._v(" "),t("h6",{attrs:{id:"_4-参数设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-参数设置"}},[s._v("#")]),s._v(" (4)参数设置")]),s._v(" "),t("p",[s._v("可配置的虚拟机参数如下:")]),s._v(" "),t("ul",[t("li",[s._v("-XX:"),t("strong",[s._v("+UseG1GC")]),s._v(": 使用 G1 收集器.")]),s._v(" "),t("li",[s._v("-XX:"),t("strong",[s._v("ParallelGCThreads")]),s._v(": 指定 GC 工作的"),t("strong",[s._v("线程数量")]),s._v(".")]),s._v(" "),t("li",[s._v("-XX:G1HeapRegionSize: 指定 Region 大小(1MB ~ 32MB, 且必须是 2 的幂), 默认将整堆划分为 2048 个 region.")]),s._v(" "),t("li",[s._v("-"),t("strong",[s._v("XX:MaxGCPauseMillis")]),s._v(": "),t("strong",[s._v("目标暂停时间")]),s._v("(默认 "),t("strong",[s._v("200ms")]),s._v(").")]),s._v(" "),t("li",[s._v("-XX:G1NewSizePercent: 新生代内存初始空间(默认整堆 5%).")]),s._v(" "),t("li",[s._v("-XX:G1MaxNewSizePercent: 新生代内存最大空间.")]),s._v(" "),t("li",[s._v("-XX:TargetSurvivorRatio: Survivor 区的填充容量(默认 50%), Survivor 区域里的一批对象(年龄1 + 年龄2 + 年龄n 的多个年龄对象)总和超过了 Survivor 区域的 50%, 此时就会把年龄 n (含)以上的对象都放入老年代.")]),s._v(" "),t("li",[s._v("-XX:MaxTenuringThreshold: 最大年龄阈值(默认 15).")]),s._v(" "),t("li",[s._v("-XX:InitiatingHeapOccupancyPercent: 老年代占用空间达到整堆内存阈值(默认 45%), 则执行新生代和老年代的混合收集("),t("strong",[s._v("MixedGC")]),s._v("), 比如堆默认有 2048 个 Region, 如果有接近 1000 个 Region 都是老年代的, 则可能就要触发 MixedGC.")]),s._v(" "),t("li",[s._v("-XX:G1HeapWastePercent(默认 5%): GC 过程中空出来的 region 是否充足阈值, 在混合回收的时候, 对 Region 回收都是基于复制算法进行的, 都是把要回收的 Region 里的存活对象放入其他 Region, 然后这个 Region 中的垃圾对象全部清理掉, 这样的话在回收过程就会不断空出来新的 Region, 一旦空闲出来的 Region 数量达到了堆内存的 5%, 此时就会立即停止混合回收, 意味着本次混合回收就结束了.")]),s._v(" "),t("li",[s._v("-XX:G1MixedGCLiveThresholdPercent(默认85%): Region 中的存活对象低于这个值时才会回收该 Region, 如果超过这个值, 存活对象过多, 回收的意义不大.")]),s._v(" "),t("li",[s._v("-XX:G1MixedGCCountTarget: 在一次回收过程中指定做几次筛选回收(默认 8 次), 在最后一个筛选回收阶段可以回收一会, 然后暂停回收, 恢复系统运行, 一会再开始回收, 这样可以让系统不至于单次停顿时间过长.")])]),s._v(" "),t("h6",{attrs:{id:"_5-g1垃圾收集类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-g1垃圾收集类型"}},[s._v("#")]),s._v(" (5)G1垃圾收集类型")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("Young GC")]),s._v(": Young GC 并不是说现有的 Eden 区放满了就会马上触发, G1 会计算下现在 Eden 区回收大概要多久时间, 如果回收时间远远小于参数 -XX:MaxGCPauseMills 设定的值, 那么"),t("strong",[s._v("增加年轻代的 region")]),s._v(", 继续存放新对象, 不会马上做 Young GC, "),t("strong",[s._v("直到下一次 Eden 区放满")]),s._v(". 当计算回收时间接近参数 -"),t("strong",[s._v("XX:MaxGCPauseMills")]),s._v(" 设定的值, 那么就会触发 Young GC.")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Mixed GC")]),s._v(": 不是 Full GC, 老年代的堆占有率达到参数("),t("strong",[s._v("-XX:InitiatingHeapOccupancyPercent")]),s._v(") 设定的值则触发, 回收"),t("strong",[s._v("所有的 Young 和部分 Old")]),s._v("(根据期望的 GC 停顿时间确定 old 区垃圾收集的优先顺序)以及大对象区, 正常情况 G1 的垃圾收集是先做 "),t("strong",[s._v("Mixed GC")]),s._v(", 主要使用"),t("strong",[s._v("复制算法")]),s._v(", 需要把各个 region 中存活的对象拷贝到别的 region 里去, 拷贝过程中如果发现"),t("strong",[s._v("没有足够的空 region")]),s._v(" 能够承载拷贝对象就会触发一次 Full GC. 大对象也会在 Mixed GC 中回收.")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Full GC")]),s._v(": 停止"),t("strong",[s._v("系统程序")]),s._v(", 然后采用单线程进行标记, 清理和压缩整理, 好空闲出来一批 Region 来供下一次 Mixed GC 使用, 这个过程非常耗时. (Shenandoah 优化成多线程收集了)")])])]),s._v(" "),t("h6",{attrs:{id:"_6-g1垃圾收集器优化建议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-g1垃圾收集器优化建议"}},[s._v("#")]),s._v(" (6)G1垃圾收集器优化建议")]),s._v(" "),t("p",[t("strong",[s._v("核心在于调节 -XX:MaxGCPauseMills(期望停顿时间) 参数的值")]),s._v(", 需要保证"),t("strong",[s._v("年轻代 GC 别太频繁")]),s._v("的同时, 还得考虑每次 GC 过后的存活对象有多少, 避免存活对象太多快速进入老年代, "),t("strong",[s._v("频繁触发 Mixed GC")]),s._v(".")]),s._v(" "),t("p",[s._v("假设参数 -"),t("strong",[s._v("XX:MaxGCPauseMills")]),s._v(" 设置的"),t("strong",[s._v("很大")]),s._v(", 导致系统运行很久, 年轻代可能都占用了堆内存的 60%了, 此时才触发年轻代 GC. 那么存活下来的对象可能就会"),t("strong",[s._v("很多")]),s._v(", 此时就会导致 Survivor 区域放不下那么多的对象, 就会进入"),t("strong",[s._v("老年代")]),s._v("中. 或者是年轻代 GC 过后, 存活下来的对象过多, 导致进入 Survivor 区域后触发了动态年龄判定规则, 达到了 Survivor 区域的 50%, 也会快速导致一些对象进入老年代中. 但是 -"),t("strong",[s._v("XX:MaxGCPauseMills ​")]),s._v("也不能设置的很小, 因为很小的情况下会导致每次 GC 可以清理的对象太少, 久而久之可能就触发 Full GC 了.")]),s._v(" "),t("blockquote",[t("p",[s._v("什么场景适合使​用G1?")])]),s._v(" "),t("ol",[t("li",[s._v("50% 以上的堆被"),t("strong",[s._v("存活对象")]),s._v("占用.")]),s._v(" "),t("li",[s._v("对象分配和晋升的"),t("strong",[s._v("速度变化")]),s._v("非常大.")]),s._v(" "),t("li",[s._v("垃圾回收"),t("strong",[s._v("时间特别长")]),s._v(", 超过 1 秒.")]),s._v(" "),t("li",[s._v("8GB 以上的"),t("strong",[s._v("堆内存")]),s._v("(建议值), 即"),t("strong",[s._v("大内存")]),s._v("下.")]),s._v(" "),t("li",[s._v("停顿时间是 "),t("strong",[s._v("500ms 以内")]),s._v(".")])]),s._v(" "),t("h6",{attrs:{id:"_7-g1应用实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-g1应用实例"}},[s._v("#")]),s._v(" (7)G1应用实例")]),s._v(" "),t("p",[s._v("对于 Kafka 这种高并发消息的系统来说, "),t("strong",[s._v("每秒处理几万甚至几十万消息")]),s._v("是很正常的, 一般部署 Kafka 需要用"),t("strong",[s._v("大内存机器")]),s._v("(比如 64G), 也就是说可以给年轻代分配三四十 G 的内存用来支撑高并发处理. 这里就涉及到一个问题, 之前说对于 eden 区的 Young GC 是"),t("strong",[s._v("很快")]),s._v("的, 这种情况下它的执行还会很快吗? 很显然不可能, 因为内存太大, 处理还是要花不少时间的, 假设三四十 G 内存回收可能最快也要"),t("strong",[s._v("几秒钟")]),s._v(", 按 Kafka 这个"),t("strong",[s._v("并发量放满三四十 G 的 eden 区可能也就一两分钟")]),s._v(", 那么意味着整个系统"),t("strong",[s._v("每运行一两分钟就会因为 Young GC 卡顿几秒钟")]),s._v("没法处理新消息, 这显然不行. 这种情况可以使用 G1 收集器, 设置 -"),t("strong",[s._v("XX:MaxGCPauseMills")]),s._v(" 为 "),t("strong",[s._v("50ms")]),s._v(", 假设 50ms 能够回收三到四个 G 内存, 然后 50ms 的卡顿完全能够接受, 用户几乎无感知, 那么整个系统就可以在卡顿几乎无感知的情况下"),t("strong",[s._v("一边处理业务一边收集垃圾")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("G1 天生就适合这种大内存机器的 JVM 运行, 可以比较完美的解决大内存垃圾回收时间过长的问题. 如果用 CMS 这种收集器的话, 在大内存下由于需要处理的内存太大而导致 STW 的时间可能会很长. ​")])]),s._v(" "),t("h5",{attrs:{id:"_8-zgc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-zgc"}},[s._v("#")]),s._v(" 8.ZGC")]),s._v(" "),t("p",[s._v("ZGC 是一款 JDK 11 中新加入的具有实验性质的低延迟垃圾收集器.")]),s._v(" "),t("p",[s._v("ZGC 的目标主要有:")]),s._v(" "),t("ul",[t("li",[s._v("支持 TB 量级的堆.")]),s._v(" "),t("li",[s._v("GC 停顿时间极低, 可以低至 10ms 量级.")]),s._v(" "),t("li",[t("strong",[s._v("GC 停顿时间不会随内存空间增大而增大")]),s._v(". 这个是很猛的特性.")])]),s._v(" "),t("p",[t("strong",[s._v("ZGC 没有分代")]),s._v('. 之前的垃圾回收器之所以分代, 是源于 "大部分对象朝生夕死" 的假设, 事实上大部分系统的对象分配行为也确实符合这个假设. '),t("strong",[s._v("不同对象的生命周期是不一致的")]),s._v(", 所以才有了分代的处理方式.")]),s._v(" "),t("p",[s._v("为什么 ZGC 不分代? 因为分代实现起来麻烦, 作者就先实现出一个比较简单可用的单代版本, 后续会优化.")]),s._v(" "),t("h6",{attrs:{id:"_1-zgc内存布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-zgc内存布局"}},[s._v("#")]),s._v(" (1)ZGC内存布局")]),s._v(" "),t("p",[s._v("ZGC 收集器是一款基于 Region 内存布局的, 暂时不设分代的, 使用了读屏障, 颜色指针等技术来实现可并发的标记-整理算法的, 以低延迟为首要目标的一款垃圾收集器.")]),s._v(" "),t("p",[s._v("ZGC 的 Region 可以具有下图所示的大, 中, 小三类容量:")]),s._v(" "),t("ul",[t("li",[s._v("小型 Region(Small Region): 容量固定为 2MB,  用于放置小于 256KB 的小对象.")]),s._v(" "),t("li",[s._v("中型 Region(Medium Region): 容量固定为 32MB,  用于放置大于等于 256KB 但小于 4MB 的对象.")]),s._v(" "),t("li",[s._v('大型 Region(Large Region): 容量不固定, 可以动态变化, 但必须为 2MB 的整数倍, 用于放置 4MB 或以上的大对象. 每个大型 Region 中只会存放一个大对象, 这也预示着虽然名字叫作 "大型Region", 但它的实际容量完全有可能小于中型 Region, 最小容量可低至 4MB. 大型 Region 在 ZGC 的实现中是不会被重分配(重分配是 ZGC 的一种处理动作, 用于复制对象的收集器阶段)的, 因为复制一个大对象的代价非常高昂.')])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20230401144145-pz9ey01.png",alt:"image"}})]),s._v(" "),t("h6",{attrs:{id:"_2-zgc运作过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-zgc运作过程"}},[s._v("#")]),s._v(" (2)ZGC运作过程")]),s._v(" "),t("p",[s._v("ZGC 的运作过程大致可划分为以下四个大的阶段:")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20230401144700-nm0r1n2.png",alt:"image"}})]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("并发标记(Concurrent Mark)")]),s._v(": 与 G1 一样, 并发标记是遍历对象图做可达性分析的阶段, 它的初始标记(Mark Start)和最终标记(Mark End)也会出现短暂的停顿, 与 G1 不同的是, ZGC 的标记是在指针上而不是在对象上进行的, 标记阶段会更新颜色指针(见下面详解)中的 Marked 0, Marked 1 标志位.")]),s._v(" "),t("li",[t("strong",[s._v("并发预备重分配(Concurrent Prepare for Relocate)")]),s._v(": 这个阶段需要根据特定的查询条件统计得出本次收集过程要清理哪些 Region, 将这些 Region 组成重分配集(Relocation Set). ZGC 每次回收都会扫描所有的 Region, 用范围更大的扫描成本换取省去 G1 中记忆集的维护成本.")]),s._v(" "),t("li",[t("strong",[s._v("并发重分配(Concurrent Relocate)")]),s._v(": 重分配是 ZGC 执行过程中的"),t("strong",[s._v("核心阶段")]),s._v(", 这个过程要把重分配集中的"),t("strong",[s._v("存活对象复制到新的 Region 上")]),s._v(", 并为重分配集中的每个 Region 维护一个"),t("strong",[s._v("转发表")]),s._v('(Forward Table), 记录从旧对象到新对象的转向关系. ZGC 收集器能仅从引用上就明确得知一个对象是否处于重分配集之中, 如果用户线程此时并发访问了位于重分配集中的对象, 这次访问将会被预置的内存屏障(读屏障(见下面详解))所截获, 然后立即根据 Region上的转发表记录将访问转发到新复制的对象上, 并同时修正更新该引用的值, 使其直接指向新对象, ZGC 将这种行为称为指针的"自愈"(Self-Healing)能力. ZGC 的颜色指针因为"自愈"能力, 所以只有第一次访问旧对象会变慢, 一旦重分配集中某个 Region 的存活对象都复制完毕后, 这个 Region 就可以立即释放用于新对象的分配, 但是转发表还得留着不能释放掉, 因为可能还有访问在使用这个转发表.')]),s._v(" "),t("li",[t("strong",[s._v("并发重映射(Concurrent Remap)")]),s._v(': 重映射所做的就是修正整个堆中指向重分配集中旧对象的所有引用, 但是 ZGC 中对象引用存在"自愈"功能, 所以这个重映射操作并不是很迫切. ZGC 很巧妙地把并发重映射阶段要做的工作, '),t("strong",[s._v("合并到了下一次垃圾收集循环中的并发标记阶段里去完成")]),s._v(", 反正它们都是要遍历所有对象的, 这样合并就节省了一次遍历对象图的开销. 一旦所有指针都被修正之后, 原来记录新旧对象关系的转发表就可以释放掉了.")])]),s._v(" "),t("h6",{attrs:{id:"_3-颜色指针"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-颜色指针"}},[s._v("#")]),s._v(" (3)颜色指针")]),s._v(" "),t("p",[s._v("Colored Pointers, 即颜色指针, ZGC 的核心设计之一. 以前的垃圾回收器的 GC 信息都保存在对象头中, 而 ZGC 的 GC 信息保存在指针中.")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20230401144421-3vmomk0.png",alt:"image"}})]),s._v(" "),t("p",[s._v("每个对象有一个 64 位指针, 这 64 位被分为:")]),s._v(" "),t("ul",[t("li",[s._v("18 位: 预留给以后使用;")]),s._v(" "),t("li",[s._v("1 位: Finalizable 标识, 此位与并发引用处理有关, 它表示这个对象只能通过 finalizer 才能访问;")]),s._v(" "),t("li",[s._v("1 位: Remapped 标识, 设置此位的值后, 对象未指向 relocation set 中(relocation set表示需要GC的Region集合);")]),s._v(" "),t("li",[s._v("1 位: Marked1 标识;")]),s._v(" "),t("li",[s._v("1 位: Marked0 标识, 和上面的 Marked1 都是标记对象用于辅助 GC;")]),s._v(" "),t("li",[s._v("42 位: 对象的地址(所以它可以支持2^42=4T内存):")])]),s._v(" "),t("p",[s._v("为什么有 2 个 mark 标记?")]),s._v(" "),t("p",[s._v("每一个 GC 周期开始时, 会交换使用的标记位, 使上次 GC 周期中修正的已标记状态失效, 所有引用都变成未标记.")]),s._v(" "),t("p",[s._v("GC 周期 1: 使用 mark0, 则周期结束所有引用 mark 标记都会成为 01.")]),s._v(" "),t("p",[s._v("GC 周期 2: 使用 mark1, 则期待的 mark 标记 10, 所有引用都能被重新标记.")]),s._v(" "),t("p",[s._v("通过对配置 ZGC 后对象指针分析可知, 对象指针必须是 64 位, 那么 ZGC 就无法支持 32 位操作系统, 同样的也就无法支持压缩指针了(CompressedOops, 压缩指针也是 32 位).")]),s._v(" "),t("p",[s._v("颜色指针的三大优势:")]),s._v(" "),t("ol",[t("li",[s._v("一旦某个 Region 的存活对象被移走之后, 这个 Region 立即就能够被释放和重用掉, 而不必等待整个堆中所有指向该 Region 的引用都被修正后才能清理, 这使得理论上只要还有一个空闲 Region, ZGC 就能完成收集.")]),s._v(" "),t("li",[s._v("颜色指针可以大幅减少在垃圾收集过程中内存屏障的使用数量, ZGC 只使用了读屏障.")]),s._v(" "),t("li",[s._v("颜色指针具备强大的扩展性, 它可以作为一种可扩展的存储结构用来记录更多与对象标记, 重定位过程相关的数据, 以便日后进一步提高性能.")])]),s._v(" "),t("h6",{attrs:{id:"_4-读屏障"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-读屏障"}},[s._v("#")]),s._v(" (4)读屏障")]),s._v(" "),t("p",[s._v("之前的 GC 都是采用 Write Barrier, ZGC 采用了完全不同的方案: 读屏障. 假如尝试读取堆中的一个对象引用并赋值给另一个对象, 如果这时候对象在 GC 时被移动了, 接下来 JVM 就会加上一个读屏障, 这个读屏障会把读出的指针更新到对象的新地址上, 并把堆里的之歌指针“修正”到元吧的字段里. 这样就算 GC 把对象移动了, 读屏障也会发现并修正指针, 于是应用程序持有的就是更新后的有效指针, 而且不需要 STW.")]),s._v(" "),t("h6",{attrs:{id:"_5-zgc存在的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-zgc存在的问题"}},[s._v("#")]),s._v(" (5)ZGC存在的问题")]),s._v(" "),t("p",[s._v("ZGC 最大的问题是浮动垃圾. ZGC 的停顿时间是在 10ms 以下, 但是 ZGC 的执行时间还是远远大于这个时间的. 假如 ZGC 全过程需要执行 10 分钟, 在这个期间由于对象分配速率很高, 将创建大量的新对象, 这些对象很难进入当次 GC, 所以只能在下次 GC 的时候进行回收, 这些只能等到下次 GC 才能回收的对象就是浮动垃圾.")]),s._v(" "),t("blockquote",[t("p",[s._v('ZGC 没有分代概念, 每次都需要进行全堆扫描, 导致一些"朝生夕死"的对象没能及时的被回收.')])]),s._v(" "),t("p",[t("strong",[s._v("解决方案")])]),s._v(" "),t("p",[s._v("目前唯一的办法是"),t("strong",[s._v("增大堆的容量")]),s._v(", 使得程序得到更多的喘息时间, 但是这个也是一个治标不治本的方案. 如果需要从根本上解决这个问题, 还是需要引入分代收集, 让新生对象都在一个专门的区域中创建, 然后专门针对这个区域进行更频繁, 更快的收集.")]),s._v(" "),t("h6",{attrs:{id:"_6-zgc参数设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-zgc参数设置"}},[s._v("#")]),s._v(" (6)ZGC参数设置")]),s._v(" "),t("p",[s._v("启用 ZGC 比较简单, 设置 JVM 参数即可: -XX:+UnlockExperimentalVMOptions, -XX:+UseZGC. 调优也并不难, 因为 ZGC 调优参数并不多, 远不像 CMS 那么复杂. 它和 G1 一样, 可以调优的参数都比较少, 大部分工作 JVM 能很好的自动完成.")]),s._v(" "),t("h5",{attrs:{id:"_9-比较与选择"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-比较与选择"}},[s._v("#")]),s._v(" 9.比较与选择")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"center"}},[s._v("收集器")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("单线程/并行")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("串行/并发")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("新生代/老年代")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("收集算法")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("目标")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("适用场景")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"center"}},[t("strong",[s._v("Serial")])]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("单线程")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("串行")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("新生代")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("复制")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("响应速度优先")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("单 CPU 环境下的 Client 模式")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[t("strong",[s._v("ParNew")])]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("并行")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("串行")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("新生代")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("复制算法")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("响应速度优先")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("多 CPU 环境时在 Server 模式下与 CMS 配合")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[t("strong",[s._v("Parallel Scavenge")])]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("并行")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("串行")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("新生代")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("复制算法")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("吞吐量优先")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("在后台运算而不需要太多交互的任务")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[t("strong",[s._v("Serial Old")])]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("单线程")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("串行")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("老年代")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("标记-整理")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("响应速度优先")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("单 CPU 环境下的 Client 模式, CMS 的后备预案")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[t("strong",[s._v("Parallel Old")])]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("并行")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("串行")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("老年代")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("标记-整理")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("吞吐量优先")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("在后台运算而不需要太多交互的任务")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[t("strong",[s._v("CMS")])]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[t("strong",[s._v("并行")])]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[t("strong",[s._v("并发")])]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("老年代")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("标记-清除")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("响应速度优先")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("集中在互联网站或 B/S 系统服务端上的 Java 应用")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[t("strong",[s._v("G1")])]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[t("strong",[s._v("并行")])]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[t("strong",[s._v("并发")])]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("新生代 + 老年代")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("标记-整理 + 复制算法")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("响应速度优先")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[t("strong",[s._v("面向服务端应用, 替换 CMS")])])])])]),s._v(" "),t("p",[t("strong",[s._v("内存较小推荐使用 ParNew + CMS. 内存较大使用 G1.")])]),s._v(" "),t("p",[s._v("一些选用的策略:")]),s._v(" "),t("ol",[t("li",[s._v("优先调整堆的大小让服务器自己来选择.")]),s._v(" "),t("li",[s._v("如果内存小于 100M, 使用串行收集器.")]),s._v(" "),t("li",[s._v("如果是"),t("strong",[s._v("单核")]),s._v(", 并且没有停顿时间的要求, 串行或 JVM 自己选择.")]),s._v(" "),t("li",[s._v("如果允许停顿时间超过 1 秒, 选择并行或者 JVM 自己选.")]),s._v(" "),t("li",[s._v("如果响应时间最重要, 并且不能超过 1 秒, 使用并发收集器.")])]),s._v(" "),t("p",[s._v("Jdk1.7 默认垃圾收集器 Parallel Scavenge(新生代) + Parallel Old(老年代).")]),s._v(" "),t("p",[t("strong",[s._v("Jdk1.8")]),s._v(" 默认垃圾收集器 "),t("strong",[s._v("Parallel Scavenge(新生代) + Parallel Old(老年代)")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("Jdk1.9")]),s._v(" 默认垃圾收集器 "),t("strong",[s._v("G1")]),s._v(".")]),s._v(" "),t("h4",{attrs:{id:"三色标记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三色标记"}},[s._v("#")]),s._v(" 三色标记")]),s._v(" "),t("h5",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),t("p",[s._v("在 CMS 并发标记的过程中, 需要从 GC Root 对对象进行标记. 由于"),t("strong",[s._v("标记期间不是 STW 的, 应用线程还在继续跑, 对象间的引用可能发生变化, 多标和漏标的情况就有可能发生")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("漏标的问题主要引入了三色标记算法")]),s._v("来解决.")]),s._v(" "),t("p",[s._v('三色标记算法是把 GC roots 可达性分析遍历对象过程中遇到的对象, 按照 "'),t("strong",[s._v("是否访问过")]),s._v('" 这个条件标记成以下三种颜色:')]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("==黑色==")]),s._v(": 表示对象已经被垃圾收集器访问过, 且"),t("strong",[s._v("这个对象的所有引用都已经扫描过")]),s._v(". 黑色的对象代表已经扫描过, "),t("strong",[s._v("它是安全存活的")]),s._v(", 如果有其他对象引用指向了黑色对象, 无须重新扫描一遍. 黑色对象不可能直接(不经过灰色对象)指向某个白色对象.")]),s._v(" "),t("li",[t("strong",[s._v("==灰色==")]),s._v(": 表示对象已经被垃圾收集器访问过, 但这个"),t("strong",[s._v("对象上至少存在一个引用还没有被扫描过")]),s._v(". 灰色对象在重新标记阶段会重新扫描, 这里对象不会有状态变化了, 因为重新标记阶段会 STW.")]),s._v(" "),t("li",[t("strong",[s._v("==白色==")]),s._v(": 表示对象"),t("strong",[s._v("尚未被垃圾收集器访问过")]),s._v(". 显然在可达性分析刚刚开始的阶段, 所有的对象都是白色的; 若在分析结束的阶段, 仍然是白色的对象, 即代表不可达.")])]),s._v(" "),t("p",[s._v("看一个例子:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * 垃圾收集算法细节之三色标记(为简化例子, 代码是伪代码)\n */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreeColorRemark")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开始做并发标记")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("D")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1.读")]),s._v("\n        a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2.写")]),s._v("\n        a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3.写")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("D")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("C")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("C")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("D")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("D")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("C")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("D")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br")])]),t("p",[s._v("这里染色示例如下:")]),s._v(" "),t("p",[t("img",{attrs:{src:"assets/image-20230326155210-h9m0v1n.png",alt:"https://www.processon.com/diagraming/641ff8acb13bd654f02a20cd"}})]),s._v(" "),t("p",[s._v("标记染色过程可能产生"),t("strong",[s._v("多标与漏标")]),s._v("问题.")]),s._v(" "),t("h5",{attrs:{id:"多标问题与浮动垃圾"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多标问题与浮动垃圾"}},[s._v("#")]),s._v(" 多标问题与浮动垃圾")]),s._v(" "),t("p",[s._v("在并发标记过程中, 如果由于用户线程运行结束导致部分局部变量(gcroot)被销毁, 这个 gcroot 引用的对象"),t("strong",[s._v("之前又被扫描过")]),s._v('(被标记为非垃圾对象), 那么本轮 GC 不会回收这部分内存. 这部分本应该回收但是没有回收到的内存, 被称之为"浮动垃圾". 浮动垃圾并不会影响垃圾回收的正确性, 只是需要等到下一轮垃圾回收中才被清除.')]),s._v(" "),t("p",[s._v("另外, 针对并发标记(还有并发清理)"),t("strong",[s._v("开始后产生的新对象, 通常的做法是直接全部当成黑色")]),s._v(", 本轮不会进行清除. 这部分对象期间可能也会变为垃圾, 这也算是浮动垃圾的一部分.")]),s._v(" "),t("h5",{attrs:{id:"漏标问题与读写屏障"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#漏标问题与读写屏障"}},[s._v("#")]),s._v(" 漏标问题与读写屏障")]),s._v(" "),t("p",[t("strong",[s._v("漏标会导致被引用的对象被当成垃圾误删除. ​")]),s._v("比如刚开始某对象没有引用, 但是随着业务线程执行被引用了. 漏标问题必须解决, 有两种解决方案: "),t("strong",[s._v("增量更新(Incremental Update)和原始快照(Snapshot At The Beginning, SATB)")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("增量更新")]),s._v("就是当黑色对象插入新的指向白色对象的引用关系时, 就将这个新插入的引用记录下来, 等并发扫描结束之后, 再将这些记录过的引用关系中的黑色对象为根, "),t("strong",[s._v("重新扫描一次")]),s._v(". 这可以简化理解为,  黑色对象一旦新插入了指向白色对象的引用之后, 它就"),t("strong",[s._v("变回灰色对象")]),s._v("了.")]),s._v(" "),t("p",[t("strong",[s._v("原始快照")]),s._v("就是当灰色对象要删除指向白色对象的引用关系时, 就将这个要删除的引用记录下来, 在并发扫描结束之后, 再将这些记录过的引用关系中的灰色对象为根, "),t("strong",[s._v("重新扫描一次")]),s._v(", 这样就能扫描到白色的对象, 将白色对象直接标记为黑色(目的就是让这种对象在本轮 GC 清理中能存活下来, 待下一轮 GC 的时候重新扫描, 这个对象也有可能是浮动垃圾).")]),s._v(" "),t("p",[s._v("以上无论是对引用关系记录的插入还是删除, 虚拟机的记录操作都是通过"),t("strong",[s._v("写屏障")]),s._v("实现的, 写屏障是"),t("strong",[s._v("代码级别实现")]),s._v("的, 与 JMM 中的写屏障不一样, 这里更类似于 AOP 操作.")]),s._v(" "),t("h6",{attrs:{id:"_1-写屏障"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-写屏障"}},[s._v("#")]),s._v(" (1)写屏障")]),s._v(" "),t("p",[s._v("给某个对象的成员变量赋值时, 其底层代码大概如下, 下面都是"),t("strong",[s._v("伪代码")]),s._v(".")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @param field 某对象的成员变量, 如 a.b.d \n * @param new_value 新值, 如 null\n */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("oop_field_store")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oop"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" field"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oop new_value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("field "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" new_value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 赋值操作")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("所谓写屏障其实就是指在赋值操作前后, 加入一些处理(可以参考 AOP 的概念):")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("oop_field_store")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oop"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" field"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oop new_value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  \n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pre_write_barrier")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("field"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 写屏障-写前操作")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("field "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" new_value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 赋值操")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("post_write_barrier")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("field"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 写屏障-写后操作")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("blockquote",[t("p",[s._v("写屏障实现SATB")])]),s._v(" "),t("p",[s._v("当对象 B 的成员变量的引用发生变化时, 比如引用消失(a.b.d = null), 可以利用写屏障, 将 B 原来成员变量的引用对象 D 记录下来. SATB 是记录删掉的引用, 因此需要在删之前进行记录.")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pre_write_barrier")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oop"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" field"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    oop old_value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("field"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取旧值")]),s._v("\n    remark_set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("old_value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 记录原来的引用对象(加入到一个set中)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("blockquote",[t("p",[s._v("写屏障实现增量更新")])]),s._v(" "),t("p",[s._v("当对象 A 的成员变量的引用发生变化时, 比如新增引用(a.d = d), 可以利用写屏障, 将 A 新的成员变量引用对象 D 记录下来. 增量更新是记录新增的引用, 因此要在新增之后进行记录.")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("post_write_barrier")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oop"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" field"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oop new_value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  \n    remark_set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("new_value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 记录新引用的对象(加入到一个set中)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h6",{attrs:{id:"_2-读屏障"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-读屏障"}},[s._v("#")]),s._v(" (2)读屏障")]),s._v(" "),t("p",[s._v("读屏障实现伪代码如下.")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[s._v("oop "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("oop_field_load")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oop"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" field"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pre_load_barrier")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("field"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 读屏障-读取前操作")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("field"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("读屏障是当"),t("strong",[s._v("读取成员变量")]),s._v("时, 一律记录下来:")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pre_load_barrier")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oop"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" field"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  \n    oop old_value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("field"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    remark_set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("old_value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 记录读取到的对象")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h6",{attrs:{id:"_3-总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-总结"}},[s._v("#")]),s._v(" (3)总结")]),s._v(" "),t("p",[s._v("现代"),t("strong",[s._v("追踪式(可达性分析)的垃圾回收器几乎都借鉴了三色标记的算法思想")]),s._v(", 尽管实现的方式不尽相同: 比如白色/黑色集合一般都不会出现(但是有其他体现颜色的地方), 灰色集合可以通过栈/队列/缓存日志等方式进行实现, 遍历方式可以是广度/深度遍历等等.")]),s._v(" "),t("p",[s._v("对于读写屏障, 以 Java HotSpot VM 为例, 其并发标记时对"),t("strong",[s._v("漏标")]),s._v("的处理方案如下:")]),s._v(" "),t("ul",[t("li",[s._v("CMS: 写屏障 + 增量更新")]),s._v(" "),t("li",[s._v("G1, Shenandoah: 写屏障 + SATB")]),s._v(" "),t("li",[s._v("ZGC: 读屏障")])]),s._v(" "),t("p",[s._v("工程实现中, 读写屏障还有其他功能, 比如写屏障可以用于记录跨代/区引用的变化, 读屏障可以用于支持移动对象的并发执行等. 功能之外, 还有性能的考虑, 所以对于选择哪种, 每款垃圾回收器都有自己的想法.")]),s._v(" "),t("h4",{attrs:{id:"内存泄漏与内存溢出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏与内存溢出"}},[s._v("#")]),s._v(" 内存泄漏与内存溢出")]),s._v(" "),t("h5",{attrs:{id:"_1-内存泄漏"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-内存泄漏"}},[s._v("#")]),s._v(" 1.内存泄漏")]),s._v(" "),t("p",[s._v("指"),t("strong",[s._v("无用对象")]),s._v("(不再使用的对象)"),t("strong",[s._v("持续占有内存")]),s._v("或无用对象的内存得不到及时释放, 从而造成的内存空间的浪费称为内存泄露. 某些对象可以关联到 GC Roots 对象, 但是在业务上已经不需要再使用了, 这些对象不会被 GC 所回收, 然而它却占用内存, 这就会导致内存泄漏.")]),s._v(" "),t("h5",{attrs:{id:"_2-内存泄漏原因"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-内存泄漏原因"}},[s._v("#")]),s._v(" 2.内存泄漏原因")]),s._v(" "),t("p",[t("strong",[s._v("长生命周期的对象持有短生命周期对象的引用就很可能发生内存泄露")]),s._v(", 尽管短生命周期对象已经不再需要, 但是"),t("strong",[s._v("因为长生命周期对象持有它的引用而导致不能被回收")]),s._v(". 具体主要有如下几大类场景:")]),s._v(" "),t("h6",{attrs:{id:"_1-静态集合类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-静态集合类"}},[s._v("#")]),s._v(" (1)静态集合类")]),s._v(" "),t("p",[s._v("使用静态集合类, 比如 Set, Vector, HashMap 等集合类的时候需要特别注意. 当这些类被定义成静态时, 其生命周期跟应用程序一样长, 这时候就有可能发生内存泄漏.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 例子 ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StaticTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Vector")]),s._v(" v "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Vector")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" object "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n            v"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n            object "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("在上面的代码中, 循环申请 object 对象, 并添加到 Vector 中, 然后设置 object = null(就是清除栈中引用变量 object), 但是这些对象被 vector 引用着, 必然不能被 GC 回收, 造成内存泄露. 因此要释放这些对象, 还需要将它们从 vector 中删除, 最简单的方法就是将 "),t("strong",[s._v("vector=null")]),s._v(", 清空集合类中的引用.")]),s._v(" "),t("h6",{attrs:{id:"_2-监听器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-监听器"}},[s._v("#")]),s._v(" (2)监听器")]),s._v(" "),t("p",[s._v("许多场景都需要和监听器打交道, 通常一个应用中会用到很多监听器, 但往往在释放的时候却没有去删除这些监听器, 从而增加了内存泄漏的可能.")]),s._v(" "),t("h6",{attrs:{id:"_3-各种连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-各种连接"}},[s._v("#")]),s._v(" (3)各种连接")]),s._v(" "),t("p",[s._v("比如"),t("strong",[s._v("数据库连接")]),s._v(", 网络连接和 IO 连接等, 除非其显式的调用了其 "),t("strong",[s._v("close")]),s._v("() 方法将其连接关闭, "),t("strong",[s._v("否则是不会自动被 GC 回收的")]),s._v(".")]),s._v(" "),t("h6",{attrs:{id:"_4-内部类和外部模块等的引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-内部类和外部模块等的引用"}},[s._v("#")]),s._v(" (4)内部类和外部模块等的引用")]),s._v(" "),t("p",[t("strong",[s._v("内部类")]),s._v("的引用是比较容易遗忘的一种, 而且一旦没释放可能导致一系列的后继类对象没有释放. 在调用外部模块的时候, 也应该注意防止内存泄漏, 如果模块 A 调用了外部模块 B 的一个方法, 如 register(Object o), 这个方法有可能就使得 A 模块持有传入对象的引用, 这时候需要查看 B 模块是否提供了出去引用的方法, 这种情况容易忽略, 而且发生内存泄漏的话, 还比较难察觉.")]),s._v(" "),t("h6",{attrs:{id:"_5-单例模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-单例模式"}},[s._v("#")]),s._v(" (5)单例模式")]),s._v(" "),t("p",[s._v("因为单利对象初始化后将在 JVM 的"),t("strong",[s._v("整个生命周期内存在")]),s._v(", 如果它持有一个生命周期比较短的外部对象的引用, 那么这个外部对象就不能被回收, 从而导致内存泄漏. 如果这个外部对象还持有其他对象的引用, 那么内存泄漏更严重.")]),s._v(" "),t("h5",{attrs:{id:"_3-内存泄露查询工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-内存泄露查询工具"}},[s._v("#")]),s._v(" 3.内存泄露查询工具")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("MemoryAnalyzer")]),s._v(": 一个功能丰富的 JAVA "),t("strong",[s._v("堆转储")]),s._v("文件分析工具, 可以发现内存漏洞和减少内存消耗.")]),s._v(" "),t("li",[t("strong",[s._v("EclipseMAT")]),s._v(": 是一款开源的 JAVA 内存分析软件, 查找内存泄漏, 能容易找到大块内存并验证谁在一直占用它. .")])]),s._v(" "),t("h5",{attrs:{id:"_4-内存溢出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-内存溢出"}},[s._v("#")]),s._v(" 4.内存溢出")]),s._v(" "),t("p",[t("strong",[s._v("内存溢出")]),s._v(": 指程序运行过程中"),t("strong",[s._v("无法申请到足够的内存")]),s._v("而导致的一种错误, 当内存较小的时候可能正常的业务也会导致内存溢出. "),t("strong",[s._v("内存泄露是内存溢出的一种诱因")]),s._v(", 不是唯一因素.")]),s._v(" "),t("p",[s._v("说白了就是内存不够用了.")]),s._v(" "),t("h4",{attrs:{id:"溢出异常"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#溢出异常"}},[s._v("#")]),s._v(" 溢出异常")]),s._v(" "),t("h5",{attrs:{id:"_1-堆溢出异常"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-堆溢出异常"}},[s._v("#")]),s._v(" 1.堆溢出异常")]),s._v(" "),t("p",[s._v("堆用于存储对象实例, 只要不断地创建对象, 并且保证 GC Roots 到对象之间有可达路径来避免垃圾回收机制清除这些对象, 那么在"),t("strong",[s._v("对象数量到达最大堆的容量限制")]),s._v("后就会产生内存溢出异常.")]),s._v(" "),t("p",[s._v("将堆的大小限制为 20MB, 不可扩展(将堆的最小值 -Xms 参数与最大值 -Xmx 参数设置为一样即可避免堆自动扩展), 通过参数 "),t("strong",[s._v("-XX:+HeapDumpOnOutOfMemoryError")]),s._v(" 可以让虚拟机在出现内存溢出异常时 Dump 出当前的内存堆转储快照以便后续分析.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HeapOOM")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OOMObject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OOMObject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" list "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HeapOOM"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("OOMObject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            list"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OOMObject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v('当出现堆内存溢出时, 异常堆栈信息 "java.lang.OutOfMemoryError" 会跟着进一步提示 "'),t("strong",[s._v("Java heap space")]),s._v('".')]),s._v(" "),t("p",[s._v("要解决堆内存溢出异常, 一般的手段是先通过"),t("strong",[s._v("内存映像分析工具")]),s._v("(如 Eclipse Memory Analyzer) 对 Dump 出来的"),t("strong",[s._v("堆转储快照进行分析")]),s._v(", 重点是确认内存中的对象是否是必要的, 也就是要先分清除到底是出现了"),t("strong",[s._v("内存泄漏(Memory Leak) 还是内存溢出(Memory Overflow)")]),s._v(".")]),s._v(" "),t("p",[s._v("如果是"),t("strong",[s._v("内存泄漏")]),s._v(", 可进一步通过工具查看泄漏对象到 GC Roots 的引用链. 于是就能找到泄露对象是通过怎样的路径与 GC Roots 相关联并导致垃圾收集器无法自动回收它们的. 掌握了泄漏对象的类型信息及 GC Roots 引用链的信息, 就可以比较准确的定位出泄漏代码的位置.")]),s._v(" "),t("p",[s._v("如果"),t("strong",[s._v("不存在泄漏")]),s._v(", 换句话说就是内存中的对象确实还必须存活着, 那就应当检查虚拟机的"),t("strong",[s._v("堆参数")]),s._v("(-Xmx 与 -Xms), 与机器物理内存对比看是否还可以调大, 从代码上检查是否存在某些对象生命周期过长, 持有状态时间过长的情况, 尝试减少的程序运行期的内存消耗.")]),s._v(" "),t("h5",{attrs:{id:"_2-虚拟机栈和本地方法栈溢出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-虚拟机栈和本地方法栈溢出"}},[s._v("#")]),s._v(" 2.虚拟机栈和本地方法栈溢出")]),s._v(" "),t("p",[s._v("由于在 Hotspot 虚拟机中"),t("strong",[s._v("不区分虚拟机栈和本地方法栈")]),s._v(", 可以通过修改 "),t("strong",[s._v("-Xss")]),s._v(" 设定.")]),s._v(" "),t("ul",[t("li",[s._v("如果线程请求的栈深度大于虚拟机允许的"),t("strong",[s._v("最大深度")]),s._v(", 将抛出 "),t("strong",[s._v("StackOverflowError")]),s._v(" 异常.")]),s._v(" "),t("li",[s._v("如果虚拟机在扩展栈时无法申请到足够的"),t("strong",[s._v("内存空间")]),s._v(", 将抛出 "),t("strong",[s._v("OutOfMemoryError")]),s._v(" 异常.")])]),s._v(" "),t("p",[s._v("这两种异常有一些重叠的部分: 当栈空间无法继续分配时, 到底是内存太小, 还是已经使用的栈空间过大, 其本质只是对同一件事情的两种不同描述.")]),s._v(" "),t("p",[s._v("可以通过递归调用的方式进行测试:")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("stackLeak")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("stackLeak")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h5",{attrs:{id:"_3-方法区溢出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-方法区溢出"}},[s._v("#")]),s._v(" 3.方法区溢出")]),s._v(" "),t("p",[t("strong",[s._v("动态代理")]),s._v("可能在运行时产生大量的"),t("strong",[s._v("类导致方法区溢出")]),s._v(", 所以 Spring 等实用 CGLIB 可以配置较大的"),t("strong",[s._v("方法区")]),s._v(".")]),s._v(" "),t("h5",{attrs:{id:"_4-本机直接内存溢出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-本机直接内存溢出"}},[s._v("#")]),s._v(" 4.本机直接内存溢出")]),s._v(" "),t("p",[t("strong",[s._v("DirectoryMemory")]),s._v(" 可以通过 -"),t("strong",[s._v("XX: MaxDirectMemorySize")]),s._v(" 指定, 如果不指定则默认与 Java 堆大小一样. 其明显特征是 Heap Dump 文件中不会看见明显的异常, 如果 Dump 文件很小, 程序中又直接或者间接"),t("strong",[s._v("使用了 NIO")]),s._v(", 可以检查一下是否是这方面原因.")]),s._v(" "),t("p",[s._v("‍")]),s._v(" "),t("h4",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),t("ul",[t("li",[s._v("如何阅读GC日志: "),t("a",{attrs:{href:"https://www.jianshu.com/p/4e508ed55155",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.jianshu.com/p/4e508ed55155"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("《深入理解 Java 虚拟机: JVM 高级特性与最佳实践(第二版》")]),s._v(" "),t("li",[t("a",{attrs:{href:"https://my.oschina.net/hosee/blog/644618",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://my.oschina.net/hosee/blog/644618"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://docs.oracle.com/javase/specs/jvms/se8/html/index.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://docs.oracle.com/javase/specs/jvms/se8/html/index.html"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1958285",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://cloud.tencent.com/developer/article/1958285"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=r.exports}}]);