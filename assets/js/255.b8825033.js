(window.webpackJsonp=window.webpackJsonp||[]).push([[255],{583:function(s,t,a){"use strict";a.r(t);var n=a(4),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_5-红黑树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-红黑树"}},[s._v("#")]),s._v(" 5.红黑树")]),s._v(" "),t("h5",{attrs:{id:"_1-红黑树与2-3树的关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-红黑树与2-3树的关系"}},[s._v("#")]),s._v(" 1.红黑树与2-3树的关系")]),s._v(" "),t("p",[s._v("红黑树也是"),t("strong",[s._v("二叉查找树")]),s._v(", 二叉查找树这一数据结构并不难, 而红黑树之所以难是难在它是"),t("strong",[s._v("自平衡")]),s._v("的二叉查找树, 在进行插入和删除等可能会破坏树的平衡的操作时, 需要"),t("strong",[s._v("重新自处理达到平衡状态")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("2-3 树")]),s._v("不太好写代码, 所以红黑树借鉴了 2-3 树的思想对其进行了转换, "),t("strong",[s._v("方便编码")]),s._v(". 红黑树的思想是用"),t("strong",[s._v("标准的二叉查找树")]),s._v("(完全由 "),t("strong",[s._v("2- 结点")]),s._v("构成)和一些"),t("strong",[s._v("额外的信息")]),s._v("(替换 3- 结点)来"),t("strong",[s._v("表示 2-3 树")]),s._v(".")]),s._v(" "),t("p",[s._v("如下图中上半部分示一个 2-3 树的 3- 结点, 改变成红黑树如下.")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1577275033695.png",alt:""}})]),s._v(" "),t("p",[s._v("红黑树将树中的"),t("strong",[s._v("连接")]),s._v("分成两种:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("红链接")]),s._v(": 将"),t("strong",[s._v("两个 2- 结点连接起来构成一个 3- 结点")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("黑链接")]),s._v(": 2-3 树中的"),t("strong",[s._v("普通结点")]),s._v(".")])]),s._v(" "),t("p",[s._v("可以将 "),t("strong",[s._v("3- 结点")]),s._v("视为一条"),t("strong",[s._v("左斜的红色")]),s._v("链接.")]),s._v(" "),t("p",[s._v("一种"),t("strong",[s._v("等价")]),s._v("的定义:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("红链接")]),s._v("均为"),t("strong",[s._v("左连接")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("没有")]),s._v("任何一个结点"),t("strong",[s._v("同时和两条红链接")]),s._v("相连.")]),s._v(" "),t("li",[s._v("红黑树是"),t("strong",[s._v("完美黑色平衡")]),s._v("的, 即任意"),t("strong",[s._v("空链接")]),s._v("到"),t("strong",[s._v("根节点路径上的黑链接数量相同")]),s._v(".")])]),s._v(" "),t("p",[s._v("如果将"),t("strong",[s._v("红链接")]),s._v("链接的结点"),t("strong",[s._v("合并")]),s._v(", 得到的就是一颗 2-3 树. "),t("strong",[s._v("红黑树既是 2-3 树, 又是二叉查找树. ​")]),s._v("​"),t("strong",[t("strong",[s._v("如果把红链接")])]),s._v("​"),t("strong",[s._v("画平")]),s._v(", 即可明显看出任意"),t("strong",[s._v("空链接")]),s._v("到"),t("strong",[s._v("根节点路径上的黑链接数量相同")]),s._v(", 放平后红黑树就是 2-3 树. 如下图所示.")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1577275605952.png",alt:""}})]),s._v(" "),t("p",[s._v("红黑树与 "),t("strong",[s._v("2-3")]),s._v(" 树的一一对应关系如下图.")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1577275936573.png",alt:""}})]),s._v(" "),t("h5",{attrs:{id:"_2-红黑树的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-红黑树的特点"}},[s._v("#")]),s._v(" 2.红黑树的特点")]),s._v(" "),t("p",[s._v("红黑树的特点如下:")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("根节点")]),s._v("必为"),t("strong",[s._v("黑色")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("叶子节点都为黑色")]),s._v(", 且为 null.")]),s._v(" "),t("li",[s._v("连接"),t("strong",[s._v("红色节点")]),s._v("的两个子节点都为"),t("strong",[s._v("黑色")]),s._v("(红黑树"),t("strong",[s._v("不会出现相邻的红色节点")]),s._v(").")]),s._v(" "),t("li",[s._v("从任意节点出发, 到其"),t("strong",[s._v("每个叶子节点的路径中包含相同数量的黑色节点")]),s._v("(由于是 2-3 树, 所以叶子节点都在"),t("strong",[s._v("同一层")]),s._v(").")]),s._v(" "),t("li",[s._v("新插入的结点为"),t("strong",[s._v("红色")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("红链接")]),s._v("均为"),t("strong",[s._v("左连接")]),s._v(".")])]),s._v(" "),t("h5",{attrs:{id:"_3-颜色表示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-颜色表示"}},[s._v("#")]),s._v(" 3.颜色表示")]),s._v(" "),t("p",[s._v("由于红黑树是二叉树, 为了表示 2-3 树, 所以需要一些额外的信息, 因此在红黑树节点中加入了一个"),t("strong",[s._v("表示颜色的布尔变量")]),s._v(". 这里的一个关键是"),t("strong",[s._v("一个节点的颜色")]),s._v("指的是"),t("strong",[s._v("指向这个节点的链接的颜色")]),s._v(".")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1577276030606.png",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("结点类")]),s._v("如下.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RED")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义RED为true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("BLACK")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),s._v(" root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 结点类")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 键")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Key")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 值")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Value")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这棵树的总结点数")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("N")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 左右子树")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),s._v(" left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 父节点指向它的链接的颜色 ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Key")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Value")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("N")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("N")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("N")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isRed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RED")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("h5",{attrs:{id:"_4-旋转"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-旋转"}},[s._v("#")]),s._v(" 4.旋转")]),s._v(" "),t("p",[t("strong",[s._v("旋转")]),s._v("是一项非常重要的操作. 在"),t("strong",[s._v("不改变树的有序性")]),s._v("的情况下, 将某个"),t("strong",[s._v("红链接从左链接变成右链接")]),s._v(", 或者从右链接变成左链接, 这在处理一些情况比如对应于 2-3 树中向 3 节点"),t("strong",[s._v("插入元素")]),s._v("的时候, "),t("strong",[s._v("更新整个树")]),s._v("是很有用的.")]),s._v(" "),t("p",[t("strong",[s._v("红黑树自平衡基本操作")]),s._v(": 头结点往左偏就是左旋, 头结点往右偏就是右旋.")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("变色")]),s._v(": 在不违反上述红黑树规则特点情况下, 将红黑树某个 node 节点颜色"),t("strong",[s._v("由红变黑")]),s._v(", 或者"),t("strong",[s._v("由黑变红")]),s._v(".")]),s._v(" "),t("li",[t("strong",[s._v("左旋")]),s._v(": "),t("strong",[s._v("逆时针")]),s._v("旋转两个节点, 让一个节点被其右子节点取代, 而该节点成为右子节点的左子节点.")]),s._v(" "),t("li",[t("strong",[s._v("右旋")]),s._v(": "),t("strong",[s._v("顺时针")]),s._v("旋转两个节点, 让一个节点被其左子节点取代, 而该节点成为左子节点的右子节点.")])]),s._v(" "),t("p",[s._v("旋转操作会"),t("strong",[s._v("改变红链接的指向")]),s._v(".")]),s._v(" "),t("h6",{attrs:{id:"_1-左旋转"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-左旋转"}},[s._v("#")]),s._v(" (1)左旋转")]),s._v(" "),t("p",[s._v("因为合法的"),t("strong",[s._v("红链接")]),s._v("都为"),t("strong",[s._v("左链接")]),s._v(", 如果出现右链接为红链接, 那么就需要进行"),t("strong",[s._v("左旋")]),s._v("转操作.")]),s._v(" "),t("p",[s._v("下面是左旋转 h 的右链接.")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1577276247175.png",alt:""}})]),s._v(" "),t("h6",{attrs:{id:"_2-右旋转"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-右旋转"}},[s._v("#")]),s._v(" (2)右旋转")]),s._v(" "),t("p",[s._v("进行"),t("strong",[s._v("右旋转")]),s._v("是为了转换两个连续的"),t("strong",[s._v("左红链接")]),s._v(". 下面是"),t("strong",[s._v("右旋转")]),s._v(" h 的左链接.")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1577276320045.png",alt:""}}),s._v("​")]),s._v(" "),t("h6",{attrs:{id:"_3-颜色转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-颜色转换"}},[s._v("#")]),s._v(" (3)颜色转换")]),s._v(" "),t("p",[s._v("一个 "),t("strong",[s._v("4-")]),s._v(" 节点在红黑树中表现为"),t("strong",[s._v("一个节点的左右子节点都是红色")]),s._v("的. "),t("strong",[s._v("分裂 4- 节点")]),s._v("除了需要将子节点的"),t("strong",[s._v("颜色由红变黑")]),s._v("之外, 同时需要将"),t("strong",[s._v("父节点的颜色由黑变红")]),s._v(", 从 "),t("strong",[s._v("2-3 树")]),s._v("的角度看就是将"),t("strong",[s._v("中间节点移到上层节点")]),s._v(".")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1563523728805.png",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("flipColors")]),s._v("() 的操作.")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1577276403912.png",alt:""}}),s._v("​")]),s._v(" "),t("p",[s._v("可以看出这个函数就对应于 2-3 树中将"),t("strong",[s._v("中间元素插入父节点")]),s._v("的操作, 因为它把原来的"),t("strong",[s._v("两条红链接变成黑链接")]),s._v(", 相当于"),t("strong",[s._v("分裂")]),s._v("成了两个 2 节点, 而"),t("strong",[s._v("中间元素")]),s._v("因为颜色是"),t("strong",[s._v("红")]),s._v("的, 所以就加入了父节点.")]),s._v(" "),t("p",[t("strong",[s._v("注意: 根节点都是黑色的")]),s._v(".")]),s._v(" "),t("h5",{attrs:{id:"_5-查找"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-查找"}},[s._v("#")]),s._v(" 5.查找")]),s._v(" "),t("p",[s._v("红黑树的查找算法和二叉查找树的查找算法是"),t("strong",[s._v("完全一样")]),s._v("的. 对于查找算法来说, 红黑树中节点或者说链接的"),t("strong",[s._v("颜色是没有用到")]),s._v("的, 但是没有关系, 虽然红黑树只是黑链接平衡, 但是即使"),t("strong",[s._v("不考虑颜色")]),s._v("的查找, 整个树也不会出现像二叉树里面那种最极端的情况, 所以性能依然是有保障的.")]),s._v(" "),t("h5",{attrs:{id:"_6-插入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-插入"}},[s._v("#")]),s._v(" 6.插入")]),s._v(" "),t("p",[s._v("红黑树的插入的算法是比较"),t("strong",[s._v("复杂")]),s._v("的, 对于 2-3 树来说相对较简单, 但是在具体实现的时候, 每个 3 节点中是有着具体结构的, 那么我们在插入后就要"),t("strong",[s._v("调节")]),s._v("这些具体的结构, 才能实现 2-3 树中的功能.")]),s._v(" "),t("h6",{attrs:{id:"_1-向单个2-节点插入新键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-向单个2-节点插入新键"}},[s._v("#")]),s._v(" (1)向单个2-节点插入新键")]),s._v(" "),t("p",[s._v("在 2-3 树中向 2- 节点插入非常简单, 直接"),t("strong",[s._v("合并")]),s._v("成一个 3- 节点就行. 但是具体实现时, 因为相对于父节点可能有大有小, 那么在插入的时候就可能在父节点的"),t("strong",[s._v("左边或者右边")]),s._v(", 而"),t("strong",[s._v("红链接只能是左链接")]),s._v(", 那么当在"),t("strong",[s._v("右边插入")]),s._v("的时候, "),t("strong",[s._v("就需要进行旋转操作将右链接变成左链接")]),s._v(".")]),s._v(" "),t("p",[s._v("过程如下:")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1577276662417.png",alt:""}}),s._v("​")]),s._v(" "),t("h6",{attrs:{id:"_2-向树底部的2-节点插入新键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-向树底部的2-节点插入新键"}},[s._v("#")]),s._v(" (2)向树底部的2-节点插入新键")]),s._v(" "),t("p",[s._v("跟上述的过程类似, 如果是在右边插入新键那么需要进行"),t("strong",[s._v("旋转")]),s._v("操作, 让红链接到"),t("strong",[s._v("左边")]),s._v(".")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1577276742966.png",alt:""}}),s._v("​")]),s._v(" "),t("h6",{attrs:{id:"_3-向3-节点插入新键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-向3-节点插入新键"}},[s._v("#")]),s._v(" (3)向3-节点插入新键")]),s._v(" "),t("p",[s._v("向 3- 节点插入就更加复杂了, 因为此时不仅有插入方向的问题, 还有"),t("strong",[s._v("父节点也是红色")]),s._v("的问题, 要调整几个节点的结构, 实现 2-3 树中将中间节点插入到父节点的操作. 这里主要分三种情况.")]),s._v(" "),t("p",[t("strong",[s._v("I 新键大于原树两个键")])]),s._v(" "),t("p",[s._v("如果插入后一个节点的两个子节点都是红色的, 那么我们通过 "),t("strong",[s._v("flipColors")]),s._v("() 可以很容易的实现 2-3 树中将中间节点插入父节点, 两边节点独立成两个 2 节点, 同时保持有序性(这里默认中间节点是黑色的, 因为默认在插入之前整个树是有序的, 这个可以通过正确的插入来保证).")]),s._v(" "),t("p",[t("strong",[s._v("II 新键小于原树两个键")])]),s._v(" "),t("p",[s._v("第二种情况下, 需要先将第一个红链接进行右旋转, 这样就变成了第一种情况, 可以按照情况1 处理.")]),s._v(" "),t("p",[t("strong",[s._v("III 新键介于原树两个键之间")])]),s._v(" "),t("p",[s._v("第三种情况下, 需要先将下面的红链接进行左旋转就变成了第二种情况, 然后就可以按照第二种情况处理.")]),s._v(" "),t("p",[s._v("如下图所示.")]),s._v(" "),t("p",[s._v("​"),t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1577276916596.png",alt:""}}),s._v("​")]),s._v(" "),t("p",[s._v("红黑树的插入代码")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Key")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Value")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    root "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("BLACK")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Key")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Value")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),s._v(" node "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RED")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" cmp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("compareTo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cmp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("val "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cmp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n        x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isRed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isRed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rotateLeft")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isRed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isRed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rotateRight")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isRed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isRed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("flipColors")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("recalculateSize")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br")])]),t("p",[s._v("可以看到该插入操作和二叉查找树的插入操作"),t("strong",[s._v("类似")]),s._v(", 只是在最后加入了"),t("strong",[s._v("旋转和颜色变换操作")]),s._v("即可.")]),s._v(" "),t("p",[t("strong",[s._v("根节点一定为黑色")]),s._v(", 因为根节点没有上层节点, 也就没有上层节点的左链接指向根节点. "),t("strong",[s._v("flipColors")]),s._v("() 有可能会使得根节点的颜色变为红色, 每当根节点由红色变成黑色时树的"),t("strong",[s._v("黑链接高度加 1")]),s._v(".")]),s._v(" "),t("p",[s._v("这里面值得注意的一点就是那三行 if 条件句, 因为是放在"),t("strong",[s._v("递归")]),s._v("语句之后的, 所以是相当于沿着树往下走到底或者找到相等值, 处理完再返回的时候运行的, 可以看到这三句刚好可以将"),t("strong",[s._v("情况三处理")]),s._v("完成, 同时也容易检验, 这个语句是完全可以兼容前两种情况. 所以不断再返回根节点的过程运行这三句, 相当于 2-3 树中把可能的多余节点移到根节点的过程. 最后树是平衡的.")]),s._v(" "),t("p",[s._v("插入操作总结:")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("如果")]),s._v("​=="),t("strong",[s._v("右子")]),s._v("==​"),t("strong",[s._v("节点是")]),s._v("​=="),t("strong",[s._v("红色")]),s._v("==​"),t("strong",[s._v("的而")]),s._v("​=="),t("strong",[s._v("左子节点是黑色")]),s._v("==​"),t("strong",[s._v("的, 进行")]),s._v("​=="),t("strong",[s._v("左旋转")]),s._v("==​**. ​**")]),s._v(" "),t("li",[t("strong",[s._v("如果左子节点是红色的且它的左子节点是红色的, 进行右旋转. ​")])]),s._v(" "),t("li",[t("strong",[s._v("如果左右子节点均为红色, 进行颜色转换. ​")])])]),s._v(" "),t("p",[s._v("如下图所示.")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1577277149678.png",alt:""}})]),s._v(" "),t("h5",{attrs:{id:"_7-删除操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-删除操作"}},[s._v("#")]),s._v(" 7.删除操作")]),s._v(" "),t("p",[s._v("删除比较麻烦, 先考虑删除"),t("strong",[s._v("最小值")]),s._v(", 当删除一个 "),t("strong",[s._v("3- 节点")]),s._v("中的元素的时候倒还好, 直接删除之后留下了一个 2- 节点, 树的平衡性没有发生变化. 但是直接删除 "),t("strong",[s._v("2- 节点")]),s._v("会造成树的高度的变化. 所以还是要处理一下, 从上往下进行变换, 最终的目标就是保证在删除的时候当前节点不只是一个 2- 节点.")]),s._v(" "),t("h6",{attrs:{id:"_1-删除最小值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-删除最小值"}},[s._v("#")]),s._v(" (1)删除最小值")]),s._v(" "),t("p",[s._v("最小值在"),t("strong",[s._v("最左边")]),s._v(", 沿着左边下去的时候需要合并三个 2 节点形成一个 4- 节点, 或者右边是三节点的话从右边节点“借”一个形成一个 3- 节点或者 4- 节点, 这样就能保证当前节点大于 2- 节点.")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1577277497212.png",alt:""}})]),s._v(" "),t("p",[s._v("代码如下")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("moveRedLeft")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),s._v(" h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这个函数是用来处理2节点的")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("flipColors")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 把上面的节点"拉下来", 形成一个大节点')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isRed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n        h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rotateRight")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        h "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rotateLeft")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("flipColors")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 注意! ! ! 《算法4》书中这一章的习题中的代码缺少这一行, 这一行代表借了一个节点之后, 再还一个给父节点. 否则我们就连着兄弟节点一起变成一个大节点了. ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("delMin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isRed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isRed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RED")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    root "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("delMin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isEmpty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("BLACK")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("delMin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),s._v(" h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 意味着h的左子节点为一个2节点")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isRed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isRed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        h"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("moveRedLeft")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("delMin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("balance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("h5",{attrs:{id:"_8-红黑树的性能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-红黑树的性能"}},[s._v("#")]),s._v(" 8.红黑树的性能")]),s._v(" "),t("p",[s._v("红黑树大多数的操作所需要的时间都是"),t("strong",[s._v("对数级别")]),s._v("的, 一颗大小为 N 的红黑树的高度"),t("strong",[s._v("不会")]),s._v("超过 "),t("strong",[s._v("2logN")]),s._v(". "),t("strong",[s._v("最坏")]),s._v("的情况下是它所对应的 "),t("strong",[s._v("2-3 树")]),s._v(", 构成最左边的路径节点全部都是 3 节点而其余都是 2 节点.")]),s._v(" "),t("p",[s._v("‍")])])}),[],!1,null,null,null);t.default=r.exports}}]);