(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{420:function(t,s,_){"use strict";_.r(s);var v=_(4),r=Object(v.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_4-外设管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-外设管理"}},[t._v("#")]),t._v(" 4.外设管理")]),t._v(" "),s("h4",{attrs:{id:"磁盘调度算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#磁盘调度算法"}},[t._v("#")]),t._v(" 磁盘调度算法")]),t._v(" "),s("p",[t._v("读写一个"),s("strong",[t._v("磁盘块")]),t._v("的时间的影响因素有:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("旋转时间")]),t._v(": 主轴转动盘面, 使得磁头移动到适当的扇区上.")]),t._v(" "),s("li",[s("strong",[t._v("寻道时间")]),t._v(": 制动手臂移动, 使得磁头移动到适当的磁道上.")]),t._v(" "),s("li",[t._v("实际的数据传输时间.")])]),t._v(" "),s("p",[t._v("其中寻道时间最长, 因此磁盘调度的"),s("strong",[t._v("主要目标是使磁盘的平均寻道时间最短")]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"_1-先来先服务算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-先来先服务算法"}},[t._v("#")]),t._v(" 1.先来先服务算法")]),t._v(" "),s("p",[t._v("FCFS 算法(First Come First Served), 按照"),s("strong",[t._v("磁盘请求的顺序")]),t._v("进行调度. 优点是公平和简单. 缺点也很明显, 因为"),s("strong",[t._v("未对寻道做任何优化")]),t._v(", 使平均寻道时间可能较长.")]),t._v(" "),s("h5",{attrs:{id:"_2-最短寻道时间优先算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-最短寻道时间优先算法"}},[t._v("#")]),t._v(" 2.最短寻道时间优先算法")]),t._v(" "),s("p",[t._v("SSTF 算法(Shortest Seek Time First), 优先调度与"),s("strong",[t._v("当前磁头所在磁道距离最近的磁道")]),t._v(". 虽然平均寻道时间比较低, 但是"),s("strong",[t._v("不够公平")]),t._v(". 如果新到达的磁道请求总是比一个在等待的磁道请求近, 那么在等待的磁道请求会一直等待下去, 也就是出现饥饿现象. 具体来说, 两端的磁道请求更容易出现饥饿现象.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1563375829100.png",alt:"",title:"SSTF算法"}})]),t._v(" "),s("h5",{attrs:{id:"_3-电梯-扫描-算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-电梯-扫描-算法"}},[t._v("#")]),t._v(" 3.电梯(扫描)算法")]),t._v(" "),s("p",[t._v("SCAN 算法, "),s("strong",[t._v("电梯总是保持一个方向运行")]),t._v(", 直到该方向"),s("strong",[t._v("没有请求为止")]),t._v(", 然后"),s("strong",[t._v("改变运行方向")]),t._v(". 电梯算法(扫描算法)和电梯的运行过程类似, 总是按一个方向来进行磁盘调度, 直到该方向上没有未完成的磁盘请求, 然后改变方向. 因为考虑了移动方向, 因此"),s("strong",[t._v("所有的磁盘请求都会被满足")]),t._v(", 解决了 SSTF 的饥饿问题.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/1563375839968.png",alt:"",title:"电梯扫描算法"}})]),t._v(" "),s("p",[t._v("‍")])])}),[],!1,null,null,null);s.default=r.exports}}]);