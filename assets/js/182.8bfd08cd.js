(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{512:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_304-mysql锁机制与事务并发控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_304-mysql锁机制与事务并发控制"}},[t._v("#")]),t._v(" 304.MySQL锁机制与事务并发控制")]),t._v(" "),s("h4",{attrs:{id:"mysql锁机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql锁机制"}},[t._v("#")]),t._v(" MySQL锁机制")]),t._v(" "),s("p",[t._v("无论何时, 只要有多个查询需要在"),s("strong",[t._v("同一时刻修改数据")]),t._v(", 都会产生并发控制的问题. 为了解决多事务并发问题, 数据库设计了事务隔离机制, 锁机制, MVCC 多版本并发控制隔离机制, 日志机制, 用一整套机制来解决多事务并发问题.")]),t._v(" "),s("p",[t._v("锁是计算机协调多个进程或线程并发访问某一资源的机制. 在数据库中, 除 CPU, I/O 等传统计算资源的争用以外, 数据也是一种供需要用户"),s("strong",[t._v("共享的资源")]),t._v(". 如何保证数据并发访问的一致性, 有效性是所有数据库必须解决的一个问题, 锁冲突也是影响数据库并发访问性能的一个重要因素.")]),t._v(" "),s("h5",{attrs:{id:"_1-锁的分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-锁的分类"}},[t._v("#")]),t._v(" 1.锁的分类")]),t._v(" "),s("ul",[s("li",[t._v("从对数据库操作的类型分: "),s("strong",[t._v("读锁")]),t._v("和"),s("strong",[t._v("写锁")]),t._v("(都属于悲观锁), 以及意向锁.")]),t._v(" "),s("li",[t._v("从对数据操作的粒度分: "),s("strong",[t._v("表锁, 行锁")]),t._v(".")])]),t._v(" "),s("ul",[s("li",[t._v("从性能上分为乐观锁(用版本对比或 CAS 机制)和悲观锁, 乐观锁适合读操作较多的场景, 悲观锁适合写操作较多的场景, 如果在写操作较多的场景使用乐观锁会导致比对次数过多, 影响性能.")])]),t._v(" "),s("h6",{attrs:{id:"_1-读写锁-共享-排他锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-读写锁-共享-排他锁"}},[t._v("#")]),t._v(" (1)读写锁(共享/排他锁)")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("写锁/排他锁")]),t._v("(Exclusive), 简写为 X 锁.")]),t._v(" "),s("li",[s("strong",[t._v("读锁/共享锁")]),t._v("(Shared), 简写为 S 锁.")])]),t._v(" "),s("p",[t._v("有以下两个规定:")]),t._v(" "),s("ul",[s("li",[t._v("一个事务对数据对象 A 加了写锁, 就可以对 A 进行"),s("strong",[t._v("读取和更新")]),t._v(". 加锁期间其它事务不能对 A 加任何锁.")]),t._v(" "),s("li",[t._v("一个事务对数据对象 A 加了读锁, 可以对 A 进行读取操作, 但是不能进行更新操作. 加锁期间其它事务能对 A 加读锁, 但是不能加写锁.")])]),t._v(" "),s("p",[t._v("只有这样, 才能确保在给定的时间里, "),s("strong",[t._v("只有一个用户能执行写入, 并防止其他用户读取")]),t._v("正在写入的同一资源.")]),t._v(" "),s("p",[t._v("锁的兼容关系如下:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("X写锁")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("S读锁")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("X写锁")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("×")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("×")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("S读锁")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("×")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("√")])])])])]),t._v(" "),s("p",[t._v("总结一下: "),s("strong",[t._v("只能共享读锁, 含写锁的都是排他的")]),t._v(". 读锁会阻塞写, 但是不会阻塞读, 而写锁则会把读和写都阻塞.")]),t._v(" "),s("p",[s("strong",[t._v("读锁")]),t._v("针对同一份数据, 多个读操作可以同时进行而不会互相影响, 比如:")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" T "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lock")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("share")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("当前写操作没有完成前, 写锁会阻断其他写锁和读锁, 数据修改操作都会加写锁; "),s("strong",[t._v("查询也可以通过 FOR UPDATE 加写锁")]),t._v(", 比如:")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" T "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h6",{attrs:{id:"_2-意向锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-意向锁"}},[t._v("#")]),t._v(" (2)意向锁")]),t._v(" "),s("p",[s("strong",[t._v("问题: ​")]),t._v("​"),s("strong",[s("strong",[t._v("在存在")])]),t._v("​"),s("strong",[t._v("行锁和表锁")]),t._v("的情况下, 事务 T 想要对"),s("strong",[t._v("表 A")]),t._v(" 加写锁(X), 就需要先检测是否有其它事务对表 A 或者表 A 中的"),s("strong",[t._v("任意一行")]),t._v("加了锁, 那么就需要对表 A 的"),s("strong",[t._v("每一行都检测一次")]),t._v(", 这是非常耗时的.")]),t._v(" "),s("p",[t._v("意向锁又称 I 锁, 针对表锁, 主要是为了提高加表锁的效率, 是 MySQL 自己加的. 当有事务给表的数据行加了读锁或写锁时, 同时会给表设置一个标识, 代表已经有行锁了, 其他事务要想对表加表锁时, 就不必逐行判断有没有行锁可能跟表锁冲突了, 直接读这个标识就可以确定自己该不该加表锁. "),s("strong",[t._v("这个标识就是意向锁")]),t._v(".")]),t._v(" "),s("p",[t._v("使用"),s("strong",[t._v("意向锁")]),t._v("(Intention Locks)可以更容易地支持"),s("strong",[t._v("多粒度")]),t._v("封锁. 意向锁在原来的 "),s("strong",[t._v("X/S 锁")]),t._v("之上引入了 "),s("strong",[t._v("IX/IS, IX/IS 都是表锁")]),t._v(", 用来表示一个事务"),s("strong",[t._v("想要")]),t._v("在表中的某个数据行上"),s("strong",[t._v("加写锁(X)或 读锁(S)")]),t._v(".")]),t._v(" "),s("p",[t._v("有以下两个分类:")]),t._v(" "),s("ul",[s("li",[t._v("意向共享锁(IS锁): 一个事务在获得某个数据行对象的"),s("strong",[t._v("读锁(S)之前")]),t._v(", 必须先获得表的 "),s("strong",[t._v("IS 锁或者更强的锁")]),t._v(".")]),t._v(" "),s("li",[t._v("意向排他锁(IX锁): 一个事务在获得某个数据行对象的**写锁(X)**之前, 必须先获得表的 "),s("strong",[t._v("IX 锁")]),t._v(".")])]),t._v(" "),s("p",[t._v("通过引入"),s("strong",[t._v("意向锁")]),t._v(", 事务 T 想要对表 A 加 "),s("strong",[t._v("X 锁")]),t._v(", 只需要先检测"),s("strong",[t._v("是否有其它事务")]),t._v("对表 A 加了 "),s("strong",[t._v("X/IX/S/IS 锁")]),t._v(", 如果"),s("strong",[t._v("加了")]),t._v("就表示有其它事务"),s("strong",[t._v("正在使用")]),t._v("这个表或者表中某一行的锁, 因此事务 T 加 X 锁"),s("strong",[t._v("失败")]),t._v(". 从而避免了每一行都去检查是否加锁.")]),t._v(" "),s("p",[t._v("意向锁的兼容关系如下:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("X")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("IX")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("S")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("IS")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("X")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("×")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("×")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("×")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("×")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("IX")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("×")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("√")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("×")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("√")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("S")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("×")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("×")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("√")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("√")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("IS")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("×")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("√")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("√")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("√")])])])]),t._v(" "),s("p",[t._v("解释如下:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("任意 IS/IX 锁")]),t._v("之间都是"),s("strong",[t._v("兼容")]),t._v("的, 因为它们只是表示"),s("strong",[t._v("想要")]),t._v("对表加锁, 而"),s("strong",[t._v("不是真正加锁")]),t._v(".")]),t._v(" "),s("li",[t._v("S 锁只与 S 锁和 IS 锁兼容, 也就是说事务 T 想要对数据行加 S 锁, 其它事务可以获得对表或者表中的行的 S 锁.")])]),t._v(" "),s("h5",{attrs:{id:"_2-加锁粒度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-加锁粒度"}},[t._v("#")]),t._v(" 2.加锁粒度")]),t._v(" "),s("p",[t._v("MySQL 中提供了两种封锁粒度: "),s("strong",[t._v("行级锁以及表级锁")]),t._v(". "),s("strong",[t._v("MyISAM 仅支持表级锁. InnoDB 支持行级锁和表级锁, 默认行级锁.")])]),t._v(" "),s("p",[t._v("任何时候, 在给定的资源上, 锁定的数据量越少, 则系统的并发程度越高, 只要相互之间不发生冲突即可. 所谓的锁策略, 就是在锁的开销和数据的安全性之间寻求平衡, 这种平衡当然也会影响到性能.")]),t._v(" "),s("p",[t._v("MySQL 每种存储引擎都可以实现自己的锁策略和锁粒度.")]),t._v(" "),s("h6",{attrs:{id:"_1-表锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-表锁"}},[t._v("#")]),t._v(" (1)表锁")]),t._v(" "),s("p",[s("strong",[t._v("表级锁: ​")]),t._v("​"),s("strong",[s("strong",[t._v("MySQL中锁定")])]),t._v("​"),s("strong",[t._v("粒度最大")]),t._v("的一种锁, 对当前操作的"),s("strong",[t._v("整张表加锁")]),t._v(", 实现简单, 资源消耗也比较少, 加锁快, "),s("strong",[t._v("不会出现死锁")]),t._v(". 其锁定粒度最大, 触发锁冲突的概率最高, 并发度最低, 一般用在整表数据迁移的场景. MyISAM 和 InnoDB 引擎都支持表级锁.")]),t._v(" "),s("p",[t._v("一个用户在对表进行写操作(插入, 删除, 更新等) 前, 需要先获得写锁, 这会阻塞其他用户对该表的所有读写操作. 只有没有写锁时, 其他读取的用户才能获得读锁, 读锁之间是不相互阻塞的.")]),t._v(" "),s("p",[t._v("来个表. 注意"),s("strong",[t._v("引擎为 MyISAM")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("mylock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MyISAM "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utf8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 插入数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("mylock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("mylock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("相关操作:")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 手动增加表锁")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LOCK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" 表名称 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("READ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WRITE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 表名称"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("READ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WRITE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查看表上加过的锁,如果inuse字段为1, 说明这个表已经加锁了")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OPEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLES")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 删除表锁")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNLOCK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLES")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[s("strong",[t._v("加读锁")]),t._v(": 当前 session 和其他 session 都可以"),s("strong",[t._v("读")]),t._v("该表, "),s("strong",[t._v("当前")]),t._v(" session 中"),s("strong",[t._v("插入或更新")]),t._v("锁定的表都会报错, "),s("strong",[t._v("其他")]),t._v(" session 插入或更新则会"),s("strong",[t._v("等待")]),t._v(". 对 MyISAM 表的读操作(加读锁), 不会阻寒其他进程对同一表的读请求, 但会阻赛对同一表的写请求. 只有当读锁释放后, 才会执行其它进程的写操作.")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LOCK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" myLock "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("READ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("加写锁")]),t._v(": 当前 session 对该表的增删改查都没有问题, "),s("strong",[t._v("其他")]),t._v(" session 对该表的"),s("strong",[t._v("所有操作被阻塞")]),t._v("等待. 对 MyISAM 表的写操作(加写锁), 会阻塞其他进程对同一表的读和写操作, 只有当写锁释放后, 才会执行其它进程的读写操作. 数据迁移的时候, 可以加一个表锁.")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LOCK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" myLock "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WRITE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("MyISAM 在执行查询语句(SELECT)前, 会自动给涉及的所有表加读锁, 在执行增删改操作前, 会自动给涉及的表加写锁.")])]),t._v(" "),s("p",[t._v("总结: "),s("strong",[t._v("==读锁会阻塞写, 但是不会阻塞读. 而写锁则会把读和写都阻塞==")]),t._v(".")]),t._v(" "),s("h6",{attrs:{id:"_2-行锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-行锁"}},[t._v("#")]),t._v(" (2)行锁")]),t._v(" "),s("p",[s("strong",[t._v("行级锁: ​")]),t._v("​"),s("strong",[s("strong",[t._v("MySQL中锁定")])]),t._v("​"),s("strong",[t._v("粒度最小")]),t._v("的一种锁, 每次操作"),s("strong",[t._v("锁住一行数据")]),t._v(". 行锁能大大减少数据库操作的冲突. 其加锁粒度最小, 并发度高, 但加锁的开销也最大, "),s("strong",[t._v("加锁慢")]),t._v(", "),s("strong",[t._v("可能会出现死锁")]),t._v(".")]),t._v(" "),s("p",[t._v("InnoDB 实现了行锁, 行级锁只在存储引擎层实现, 而 MySQL 服务器层没有实现. 服务器层完全不了解存储引擎中的锁实现.")]),t._v(" "),s("p",[t._v("InnoDB 的行锁实际上是"),s("strong",[t._v("针对索引加的锁")]),t._v("(在索引对应的索引项上做标记), 不是针对整个行记录加的锁. 并且该索引不能失效, 否则会从行锁升级为表锁.")]),t._v(" "),s("p",[t._v("后面的很多讨论都是跟行锁有关.")]),t._v(" "),s("h6",{attrs:{id:"_3-加锁粒度选择"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-加锁粒度选择"}},[t._v("#")]),t._v(" (3)加锁粒度选择")]),t._v(" "),s("p",[t._v("应该尽量"),s("strong",[t._v("只锁定需要修改")]),t._v("的那部分数据, 而不是所有的资源. 锁定的数据量越少, 发生锁争用的可能就越小, 系统的并发程度就越高. 但是加锁需要消耗资源, 锁的各种操作(包括获取锁, 释放锁, 以及检查锁状态)都会增加系统开销. 因此封锁粒度越小, 系统开销就越大. 所以在选择封锁粒度时, 需要在"),s("strong",[t._v("锁开销和并发程度")]),t._v("之间做一个"),s("strong",[t._v("权衡")]),t._v(".")]),t._v(" "),s("p",[t._v("MyISAM 在执行查询语句 SELECT 前, 会自动给涉及的所有"),s("strong",[t._v("表加读锁")]),t._v(", 在执行 UPDATE, INSERT, DELETE 操作会自动给涉及的"),s("strong",[t._v("表加写锁")]),t._v(".")]),t._v(" "),s("p",[t._v("InnoDB 在执行查询语句 SELECT 时(非串行隔离级别), 不会加锁. 但是 UPDATE, INSERT, DELETE 操作会加"),s("strong",[t._v("行锁")]),t._v(".")]),t._v(" "),s("p",[t._v("InnoDB 存储引擎由于实现了行级锁定, 虽然在锁定机制的实现方面所带来的性能损耗可能比表级锁定会要更高一下, 但是在整体并发处理能力方面要远远优于 MYISAM 的表级锁定的. 当系统并发量高的时候, InnoDB 的整体性能和 MYISAM 相比就会有比较明显的优势了.")]),t._v(" "),s("h5",{attrs:{id:"_3-封锁协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-封锁协议"}},[t._v("#")]),t._v(" 3.封锁协议")]),t._v(" "),s("h6",{attrs:{id:"_1-三级封锁协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-三级封锁协议"}},[t._v("#")]),t._v(" (1)三级封锁协议")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("一级封锁协议")])])]),t._v(" "),s("p",[t._v("事务 T 要"),s("strong",[t._v("修改数据")]),t._v(" A 时必须加 "),s("strong",[t._v("X 锁")]),t._v(", 直到 T "),s("strong",[t._v("结束才释放锁")]),t._v(".")]),t._v(" "),s("p",[t._v("这可以解决"),s("strong",[t._v("丢失修改")]),t._v("问题, 因为不能同时有两个事务对同一个数据进行修改, 那么事务的修改就不会被覆盖.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("T1")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("T2")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("lock-x(A) (写锁)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("read A = 20")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("lock-x(A) (请求写锁)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("wait "),s("strong",[t._v("(等待写锁)")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("write A = 19")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v(".")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("commit")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v(".")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("unlock-x(A) (释放写锁)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v(".")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("obtain "),s("strong",[t._v("(获取到写锁)")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("read A =19")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("write A = 21")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("commit")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("unlock-x(A) "),s("strong",[t._v("(释放写锁)")])])])])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("二级封锁协议")])])]),t._v(" "),s("p",[t._v("在一级封锁的基础上, 要求"),s("strong",[t._v("读取数据")]),t._v(" A 时必须"),s("strong",[t._v("加 S 锁")]),t._v(", 读取完"),s("strong",[t._v("马上释放 S 锁")]),t._v(".")]),t._v(" "),s("p",[t._v("可以"),s("strong",[t._v("解决读脏数据")]),t._v("问题, 因为如果一个事务在对数据 A 进行"),s("strong",[t._v("修改")]),t._v(", 根据 1 级封锁协议, 会加 "),s("strong",[t._v("X 锁")]),t._v(", 那么就"),s("strong",[t._v("不能再加 S 锁")]),t._v("了, 也就是"),s("strong",[t._v("不会读入")]),t._v("数据.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("T1")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("T2")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("lock-x(A)(写锁)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("read A=20")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("write A=19")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("lock-s(A)(请求读锁)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("wait(发现加了X锁, 等待)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("rollback(回滚)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v(".")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("A=20")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v(".")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("unlock-x(A)(释放写锁)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v(".")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("obtain(得到锁)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("read A = 20(读)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("unlock-s(A)(读完"),s("strong",[t._v("立即释放")]),t._v("S锁)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("commit")])])])]),t._v(" "),s("p",[s("strong",[t._v("解决不了不可重复读问题")]),t._v(". 如果 T2 事务需要读取 A 两次, 第一次读了 A, 读完就释放了 S 锁, 然后 T2 事务继续做其他的, 此时数据 A 没有锁是可以加写锁的, 如果此时 T1 事务修改了数据 A, 那么之后 T2 读到的数据就变了, 也就是产生不可重复读问题.")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("三级封锁协议")])])]),t._v(" "),s("p",[t._v("在二级封锁的基础上, 要求"),s("strong",[t._v("读取数据 A")]),t._v(" 时必须"),s("strong",[t._v("加 S 锁")]),t._v(", 直到"),s("strong",[t._v("事务结束")]),t._v("了"),s("strong",[t._v("才能释放 S 锁")]),t._v(" (注意前面是读完"),s("strong",[t._v("立即")]),t._v("释放).")]),t._v(" "),s("p",[t._v("可以解决"),s("strong",[t._v("不可重复读")]),t._v("的问题, 因为"),s("strong",[t._v("读 A")]),t._v(" 时, 其它事务"),s("strong",[t._v("不能对 A 加 X 锁")]),t._v(", 从而"),s("strong",[t._v("避免了在读的期间数据发生改变")]),t._v(".")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("T1")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("T2")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("lock-s(A)(加读锁)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("read A=20(读数据, 读完不释放)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("lock-x(A)(请求写锁)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("wait(发现有S锁, 等待)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("read A=20(再次读数据, 读完不释放)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v(".")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("COMMIT(提交事务)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v(".")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("unlock-s(A)(事务提交之后再释放S锁)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v(".")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("obtain(读锁事务结束, 才获得X锁)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("read A=20")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("write A=19")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("COMMIT(提交事务)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("unlock-X(A)(释放写锁)")])])])]),t._v(" "),s("h6",{attrs:{id:"_2-两段锁协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-两段锁协议"}},[t._v("#")]),t._v(" (2)两段锁协议")]),t._v(" "),s("p",[s("strong",[t._v("加锁和解锁")]),t._v("分为"),s("strong",[t._v("两个阶段")]),t._v("进行.")]),t._v(" "),s("p",[t._v("事务遵循两段锁协议是"),s("strong",[t._v("保证可串行化调度")]),t._v("的充分条件. 可串行化调度是指, 通过"),s("strong",[t._v("并发控制")]),t._v(", 使得"),s("strong",[t._v("并发执行")]),t._v("的事务结果与"),s("strong",[t._v("某个串行")]),t._v("执行的事务结果"),s("strong",[t._v("相同")]),t._v(". 例如以下操作满足两段锁协议, 它是"),s("strong",[t._v("可串行化调度")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("lock-x(A)...lock-s(B)...lock-s(C)...unlock(A)...unlock(C)...unlock(B)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("但不是必要条件, 例如以下操作不满足两段锁协议, 但是它还是可串行化调度.")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lock")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lock")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lock")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h5",{attrs:{id:"_4-隐式与显式锁定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-隐式与显式锁定"}},[t._v("#")]),t._v(" 4.隐式与显式锁定")]),t._v(" "),s("p",[t._v("MySQL 的 "),s("strong",[t._v("InnoDB 存储")]),t._v("引擎采用"),s("strong",[t._v("两段锁协议")]),t._v(", 会根据"),s("strong",[t._v("隔离级别")]),t._v("在需要的时候"),s("strong",[t._v("自动加锁")]),t._v(", 并且所有锁都是在"),s("strong",[t._v("同一时刻")]),t._v("被释放, 这被称为"),s("strong",[t._v("隐式锁定")]),t._v(".")]),t._v(" "),s("p",[t._v("InnoDB 也可以使用特定的语句进行"),s("strong",[t._v("显示锁定")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LOCK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHARE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MODE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h5",{attrs:{id:"_5-锁的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-锁的实现"}},[t._v("#")]),t._v(" 5.锁的实现")]),t._v(" "),s("p",[t._v("MySQL 默认"),s("strong",[t._v("隔离级别是可重复读")]),t._v(", 解决不了幻读问题. 单独有 "),s("strong",[t._v("MVCC")]),t._v(" "),s("strong",[t._v("不能解决幻读")]),t._v("问题, Next-Key Locks 就是为了解决这个问题而存在的, 它是 InnoDB 存储引擎的一种"),s("strong",[t._v("锁实现")]),t._v(". 在"),s("strong",[t._v("可重复读")]),t._v("隔离级别下(可以解决脏读和不可重复读), 使用 "),s("strong",[t._v("==MVCC + Next-Key Locks=="),s("strong",[t._v("​")]),t._v("​ 可以解决幻读问题")]),t._v(".")]),t._v(" "),s("h6",{attrs:{id:"_1-行锁record-locks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-行锁record-locks"}},[t._v("#")]),t._v(" (1)行锁Record Locks")]),t._v(" "),s("p",[s("strong",[t._v("对单个行记录加锁")]),t._v(". 如果表没有设置索引, InnoDB 会自动在"),s("strong",[t._v("主键")]),t._v("上创建隐藏的"),s("strong",[t._v("聚簇索引")]),t._v(", 因此 Record Locks 依然"),s("strong",[t._v("可以使用")]),t._v(".")]),t._v(" "),s("h6",{attrs:{id:"_2-间隙锁gap-locks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-间隙锁gap-locks"}},[t._v("#")]),t._v(" (2)间隙锁Gap Locks")]),t._v(" "),s("p",[t._v("间隙锁在"),s("strong",[t._v("可重复读")]),t._v("隔离级别下才会生效.")]),t._v(" "),s("p",[t._v("间隙锁, "),s("strong",[t._v("锁定一个范围")]),t._v(", 也就是锁定"),s("strong",[t._v("索引")]),t._v("之间的"),s("strong",[t._v("间隙")]),t._v(", 但是"),s("strong",[t._v("不包含索引本身")]),t._v(". 例如当一个事务执行以下语句, 其它事务就不能在 t.c 中插入 15.")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("BETWEEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("只要在间隙范围内锁了一条不存在的记录会锁住整个间隙范围, 不锁边界记录, 这样就能防止其它 Session 在这个间隙范围内插入数据, 就解决了可重复读隔离级别的幻读问题.")]),t._v(" "),s("h6",{attrs:{id:"_3-next-key-locks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-next-key-locks"}},[t._v("#")]),t._v(" (3)Next-Key Locks")]),t._v(" "),s("p",[t._v("它是 "),s("strong",[t._v("Record Locks 和 Gap Locks 的结合")]),t._v(", 不仅锁定一个记录上的"),s("strong",[t._v("索引")]),t._v("(包含记录本身), 也锁定索引之间的"),s("strong",[t._v("间隙")]),t._v(". 例如一个索引包含以下值: 10, 11, 13, and 20, 那么就需要锁定以下"),s("strong",[t._v("区间")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("∞"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("∞"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("strong",[t._v("锁定间隙有什么用")]),t._v("? ? 因为幻读就是 A 事务"),s("strong",[t._v("第一次读了一个范围的数据")]),t._v("之后(此时 A 没有结束), 另一个 B 事务在这个范围插入或者删除数据行所致, "),s("strong",[t._v("锁定间隙")]),t._v("可以防止其他事务在之中改变数据行数, 就"),s("strong",[t._v("解决了幻读问题")]),t._v(".")]),t._v(" "),s("p",[s("strong",[t._v("间隙锁在某些情况下可以解决幻读问题")]),t._v(". 要避免"),s("strong",[t._v("幻读")]),t._v("可以用"),s("strong",[t._v("间隙锁")]),t._v("在当前 Session 下面执行.")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Lucy'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("其他 Session "),s("strong",[t._v("没法在这个范围所包含的间隙(10 - 20 之间就是间隙)里插入或修改任何数据")]),t._v(". 上面的语句就"),s("strong",[t._v("默认")]),t._v("在 10 到 20 之间加了"),s("strong",[t._v("间隙锁")]),t._v(". 需要注意写 SQL 的时候注意检索范围, "),s("strong",[t._v("避免间隙锁锁太多行")]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"_6-锁等待分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-锁等待分析"}},[t._v("#")]),t._v(" 6.锁等待分析")]),t._v(" "),s("p",[t._v("通过检查 "),s("strong",[t._v("InnoDB_row_lock")]),t._v(" 状态变量来分析系统上的"),s("strong",[t._v("行锁的争夺")]),t._v("情况.")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("STATUS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'innodb_row_lock%'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("各个状态量的说明如下:")]),t._v(" "),s("ul",[s("li",[t._v("Innodb_row_lock_current_waits: 当前正在等待锁定的数量.")]),t._v(" "),s("li",[t._v("Innodb_row_lock_time: 从系统启动到现在锁定总时间长度.")]),t._v(" "),s("li",[t._v("Innodb_row_lock_time_avg: 每次等待所花平均时间.")]),t._v(" "),s("li",[t._v("Innodb_row_lock_time_max: 从系统启动到现在等待最长的一次所花时间.")]),t._v(" "),s("li",[t._v("Innodb_row_lock_waits: 系统启动后到现在总共等待的次数.")])]),t._v(" "),s("p",[t._v("对于这 5 个状态变量, 比较重要的主要是:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Innodb_row_lock_time_avg")]),t._v(": 等待平均时长")]),t._v(" "),s("li",[s("strong",[t._v("Innodb_row_lock_waits:")]),t._v(" 等待总次数")]),t._v(" "),s("li",[s("strong",[t._v("Innodb_row_lock_time:")]),t._v(" 等待总时长")])]),t._v(" "),s("p",[t._v("尤其是当"),s("strong",[t._v("等待次数很高")]),t._v(", 而且每次等待时长也不小的时候, 就需要分析系统中为什么会有如此多的等待, 然后根据分析结果着手制定优化计划.")]),t._v(" "),s("h5",{attrs:{id:"_7-死锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-死锁"}},[t._v("#")]),t._v(" 7.死锁")]),t._v(" "),s("p",[t._v("下面的语句产生死锁.")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置隔离级别为可重复读")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" tx_isolation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'repeatable-read'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nSession_1执行: "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nSession_2执行: "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nSession_1执行: "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nSession_2执行: "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("查看近期死锁日志信息:")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("engine")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("innodb")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("STATUS")]),t._v("\\G"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("大多数情况 MySQL 可以"),s("strong",[t._v("自动检测死锁")]),t._v("并回滚产生死锁的那个事务. 但是有些情况没法自动检测死锁, 这种情况可以通过日志分析找到对应事务线程 id, 可以通过 kill 杀掉.")]),t._v(" "),s("p",[t._v("InnoDB 目前处理死锁的方法是, 将持有最少行级排他锁的事务进行回滚, 这是相对比较简单的死锁回滚算法.")]),t._v(" "),s("h5",{attrs:{id:"_8-索引与锁的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-索引与锁的关系"}},[t._v("#")]),t._v(" 8.索引与锁的关系")]),t._v(" "),s("p",[s("strong",[t._v("无索引行锁会升级为表锁")]),t._v(": 锁主要是加在"),s("strong",[t._v("索引")]),t._v("上, 如果对"),s("strong",[t._v("非索引字段")]),t._v("更新, 行锁可能会变表锁. 比如 session1 执行:")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" balance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("800")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lilei'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("session2 对该表"),s("strong",[t._v("任一行")]),t._v("操作都会"),s("strong",[t._v("阻塞")]),t._v("住. InnoDB 的"),s("strong",[t._v("行锁是针对索引加的锁")]),t._v(", "),s("strong",[t._v("不是针对记录")]),t._v("加的锁. 并且该索引不能失效, 否则都会"),s("strong",[t._v("从行锁升级为表锁")]),t._v(". 锁定"),s("strong",[t._v("某一行")]),t._v("还可以用 "),s("strong",[t._v("==LOCK IN SHARE MODE (共享锁) 和 FOR UPDATE (排它锁)==")]),t._v(".")]),t._v(" "),s("p",[t._v("例如:")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" test_innodb_lock "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("这样其他 session 只能"),s("strong",[t._v("读")]),t._v("这行数据, 修改则会被阻塞, 直到锁定该行的 session 提交.")]),t._v(" "),s("h5",{attrs:{id:"_9-锁优化实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-锁优化实践"}},[t._v("#")]),t._v(" 9.锁优化实践")]),t._v(" "),s("ul",[s("li",[t._v("尽可能让所有"),s("strong",[t._v("数据检索都通过索引来完成")]),t._v(", 避免"),s("strong",[t._v("无索引行锁升级为表锁")]),t._v(". 同时合理设计索引, 尽量"),s("strong",[t._v("缩小锁的范围")]),t._v(".")]),t._v(" "),s("li",[t._v("尽可能"),s("strong",[t._v("减少")]),t._v("检索条件范围, "),s("strong",[t._v("避免间隙锁")]),t._v(".")]),t._v(" "),s("li",[t._v("尽量控制事务大小, 减少锁定资源量和时间长度, 涉及事务加锁的 SQL 尽量放在事务最后执行. 尽可能低级别事务隔离.")])]),t._v(" "),s("h4",{attrs:{id:"事务基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务基础"}},[t._v("#")]),t._v(" 事务基础")]),t._v(" "),s("h5",{attrs:{id:"_1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1.概述")]),t._v(" "),s("p",[s("strong",[t._v("事务")]),t._v("是指"),s("strong",[t._v("满足 ACID")]),t._v(" 的一组操作, 可以通过 COMMIT "),s("strong",[t._v("提交")]),t._v("一个事务, 也可以通过 ROLLBACK 进行"),s("strong",[t._v("回滚")]),t._v(". 事务保证一组 SQL 语句"),s("strong",[t._v("要么全部执行")]),t._v(", 要么全部不执行, 用以维护数据库的"),s("strong",[t._v("完整性")]),t._v("和数据最终的一致性.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20210904215720695.png",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("基本术语")]),t._v(":")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("事务")]),t._v("(TRANSACTION): 指一组满足 ACID 条件的 SQL 语句.")]),t._v(" "),s("li",[s("strong",[t._v("回滚")]),t._v("(ROLLBACK): 指撤销指定 SQL 语句的过程.")]),t._v(" "),s("li",[s("strong",[t._v("提交")]),t._v("(COMMIT): 指将未存储的 SQL 语句结果写入数据库表.")]),t._v(" "),s("li",[s("strong",[t._v("保留点")]),t._v("(SAVEPOINT): 指事务处理中设置的"),s("strong",[t._v("临时占位符")]),t._v(", 可以对它发布回退.")])]),t._v(" "),s("h5",{attrs:{id:"_2-事务四大特征"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-事务四大特征"}},[t._v("#")]),t._v(" 2.事务四大特征")]),t._v(" "),s("p",[t._v("事务具有以下 4 个属性, 通常简称为事务的 ACID 属性, 即"),s("strong",[t._v("原子性(Atomicity), 一致性(Consistency), 隔离性(Isolation), 持久性(Durability)")]),t._v(".")]),t._v(" "),s("h6",{attrs:{id:"_1-原子性atomicity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-原子性atomicity"}},[t._v("#")]),t._v(" (1)原子性Atomicity")]),t._v(" "),s("p",[t._v("原子性指一个事务中的"),s("strong",[t._v("所有操作")]),t._v("必须被视为一个不可分割的"),s("strong",[t._v("最小执行单元")]),t._v(", 要么"),s("strong",[t._v("全部完成")]),t._v(", 要么全部不完成, 不会结束在中间某个环节.")]),t._v(" "),s("p",[t._v("事务在执行过程中发生错误, 会被"),s("strong",[t._v("回滚")]),t._v("到事务开始前的状态, 就像这个事务从来没有执行过一样.")]),t._v(" "),s("p",[t._v("原子性由 undo log 日志来实现.")]),t._v(" "),s("p",[t._v("比如: A 在银行取钱, 密码输入完成还没确定取钱, A 可以决定不取了, 此时回滚到没取的状态.")]),t._v(" "),s("h6",{attrs:{id:"_2-一致性consistency"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-一致性consistency"}},[t._v("#")]),t._v(" (2)一致性Consistency")]),t._v(" "),s("p",[t._v("一致性指数据库总是"),s("strong",[t._v("从一个一致性的状态转换到另外一个一致性的状态")]),t._v(". 在一致性状态下, 所有"),s("strong",[t._v("事务对一份数据的读取结果都是相同")]),t._v("的. 在事务开始之前和事务结束以后, 数据库的完整性没有被破坏.")]),t._v(" "),s("p",[s("strong",[t._v("一致性是使用事务的最终目的, 由其它 3 个特性以及业务代码正确逻辑来实现")]),t._v(".")]),t._v(" "),s("p",[t._v("比如: A 向 B 转账, 不可能 A 扣了钱, B 却没有收到.")]),t._v(" "),s("h6",{attrs:{id:"_3-隔离性isolation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-隔离性isolation"}},[t._v("#")]),t._v(" (3)隔离性Isolation")]),t._v(" "),s("p",[t._v("隔离性指一个事务所做的"),s("strong",[t._v("修改")]),t._v("在"),s("strong",[t._v("最终提交")]),t._v("以前, 对其它事务是"),s("strong",[t._v("不可见")]),t._v("的. 在不同的业务处理过程中, 事务隔离性保证了各业务正在读, 写的数据相互独立, 不会彼此影响.")]),t._v(" "),s("p",[t._v("数据库允许多个并发事务同时对其数据进行读写和修改, 隔离性可以"),s("strong",[t._v("防止多个事务并发")]),t._v("执行时由于"),s("strong",[t._v("交叉执行")]),t._v("而导致数据的"),s("strong",[t._v("不一致")]),t._v(". "),s("strong",[t._v("事务隔离")]),t._v("分为不同"),s("strong",[t._v("隔离级别")]),t._v(", 包括读未提交, 读已提交, 可重复读和串行化.")]),t._v(" "),s("p",[t._v("隔离性由 MySQL 的各种锁以及 MVCC 机制来实现.")]),t._v(" "),s("p",[t._v("比如: A 正在从一张银行卡里面取钱, A 取钱过程中 B 不能向这张银行卡打钱.")]),t._v(" "),s("h6",{attrs:{id:"_4-持久性durability"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-持久性durability"}},[t._v("#")]),t._v(" (4)持久性Durability")]),t._v(" "),s("p",[t._v("持久性指一旦事务成功提交之后, 它对于数据的"),s("strong",[t._v("修改是永久性")]),t._v("的, 即使出现系统故障也不会丢失.")]),t._v(" "),s("p",[t._v("持久性由 redo log 日志来实现.")]),t._v(" "),s("p",[t._v("比如: A 在银行存了钱, 某天断电银行系统宕机, 恢复后钱依然这么多.")]),t._v(" "),s("h6",{attrs:{id:"_5-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-总结"}},[t._v("#")]),t._v(" (5)总结")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20210904220209568.png",alt:"image-20210904220209568"}})]),t._v(" "),s("p",[t._v("事务的 ACID 特性概念简单, 但不是很好理解, 主要是因为这几个特性"),s("strong",[t._v("不是一种平级关系")]),t._v(":")]),t._v(" "),s("ul",[s("li",[t._v("只有"),s("strong",[t._v("满足一致性")]),t._v(", 事务的执行结果才是"),s("strong",[t._v("正确")]),t._v("的.")]),t._v(" "),s("li",[t._v("在"),s("strong",[t._v("无并发")]),t._v("的情况下, 事务"),s("strong",[t._v("串行")]),t._v("执行, 隔离性一定能够满足. 此时只要能满足"),s("strong",[t._v("原子性")]),t._v(", 就一定能满足"),s("strong",[t._v("一致性")]),t._v(".")]),t._v(" "),s("li",[t._v("在"),s("strong",[t._v("并发")]),t._v("的情况下, 多个事务"),s("strong",[t._v("并行")]),t._v("执行, 事务不仅要满足"),s("strong",[t._v("原子性, 还需要满足隔离性")]),t._v(", 才能满足"),s("strong",[t._v("一致性")]),t._v(".")]),t._v(" "),s("li",[t._v("事务满足"),s("strong",[t._v("持久性")]),t._v("是为了能应对数据库崩溃的情况.")])]),t._v(" "),s("h5",{attrs:{id:"_3-事务使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-事务使用"}},[t._v("#")]),t._v(" 3.事务使用")]),t._v(" "),s("h6",{attrs:{id:"_1-隐式事务autocommit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-隐式事务autocommit"}},[t._v("#")]),t._v(" (1)隐式事务AUTOCOMMIT")]),t._v(" "),s("p",[t._v("隐式事务也就是没有明显的开启和结束事务的标志, MySQL "),s("strong",[t._v("默认采用自动提交模式")]),t._v(". 如果不显式使用 "),s("strong",[t._v("START TRANSACTION")]),t._v(" 语句来开始一个事务, 那么每个查询"),s("strong",[t._v("都会被当做一个事务自动提交")]),t._v(".")]),t._v(" "),s("p",[t._v("当显式使用 START TRANSACTION 语句时, 会关闭隐式提交; 当执行 COMMIT 或 ROLLBACK 语句后, 事务会"),s("strong",[t._v("自动关闭")]),t._v(", 重新恢复隐式提交. 设置 AUTOCOMMIT 为 0 可以"),s("strong",[t._v("取消自动提交")]),t._v("; AUTOCOMMIT 标记是针对"),s("strong",[t._v("每个连接")]),t._v("而不是针对服务器的.")]),t._v(" "),s("p",[t._v("如果"),s("strong",[t._v("没有设置保留点")]),t._v(", ROLLBACK 会回退到 "),s("strong",[t._v("START TRANSACTION")]),t._v(" 语句处; 如果设置了"),s("strong",[t._v("保留点")]),t._v(", 并且在 ROLLBACK 中"),s("strong",[t._v("指定")]),t._v("该保留点, 则会回退到该保留点.")]),t._v(" "),s("h6",{attrs:{id:"_2-事务相关操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-事务相关操作"}},[t._v("#")]),t._v(" (2)事务相关操作")]),t._v(" "),s("p",[t._v("下面是事务相关的操作语句.")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" AUTOCOMMIT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭隐式事务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("START")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRANSACTION")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启显示事务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交事务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROLLBACK")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回滚事务")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SAVEPOINT")]),t._v(" 断点\t   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SAVEPOINT")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" 断点\t   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交到SAVEPOINT")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROLLBACK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" 断点 \t   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回滚到SAVEPOINT")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("使用显式事务:")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭自动提交")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" AUTOCOMMIT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("START")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRANSACTION")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启事务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编写一组事务的语句(多条语句)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" balance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" username "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" balance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" username "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jack'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回滚")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ROLLBACK;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交事务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" account"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("p",[s("strong",[t._v("SAVEPOINT")]),t._v(" 使用示例:")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" AUTOCOMMIT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("START")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRANSACTION")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SAVEPOINT")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置保存点")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROLLBACK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回滚到保存点")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" account"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[s("strong",[t._v("不能回滚 SELECT")]),t._v(" 语句, 回退 SELECT 语句也没意义; 也"),s("strong",[t._v("不能回滚 CREATE 和 DROP 语句")]),t._v(".")]),t._v(" "),s("h6",{attrs:{id:"_3-隐式锁定与显式锁定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-隐式锁定与显式锁定"}},[t._v("#")]),t._v(" (3)隐式锁定与显式锁定")]),t._v(" "),s("p",[t._v("InnoDB 采用的是两阶段锁定协议(two-phase locking protocol). 在事务执行过程中, 随时都可以执行锁定, 锁只有在执行 COMMIT 或者 ROLLBACK 的时候才会释放, 并且所有的锁是在同一时刻被释放.")]),t._v(" "),s("p",[t._v("前面描述的锁定都是隐式锁定, InnoDB 会根据隔离级别在需要的时候自动加锁. 另外, InnoDB 也支持通过特定的语句进行显式锁定, 这些语句不属于 SQL 规范:")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LOCK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHARE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MODE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("MySQL 也支持 LOCK TABLES 和 UNLOCK TABLES 语句, 这是在服务器层实现的, 和存储引擎无关. 它们有自己的用途, 但并不能替代事务处理. 如果应用需要用到事务, 还是应该选择事务型存储引擎.")]),t._v(" "),s("h4",{attrs:{id:"并发一致性问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#并发一致性问题"}},[t._v("#")]),t._v(" 并发一致性问题")]),t._v(" "),s("p",[t._v("在"),s("strong",[t._v("无并发")]),t._v("情况下, 事务串行执行, 事务的"),s("strong",[t._v("一致性")]),t._v("容易保证. 但在"),s("strong",[t._v("并发环境")]),t._v("下, 事务之间"),s("strong",[t._v("交替执行")]),t._v(", 可能出现"),s("strong",[t._v("多个事务操作同一个数据来完成各自的业务")]),t._v(", 事务的"),s("strong",[t._v("隔离性")]),t._v("很难保证, 因此会出现很多"),s("strong",[t._v("并发一致性")]),t._v("问题. 它主要强调在"),s("strong",[t._v("并发操作状态")]),t._v("下可能出现的"),s("strong",[t._v("一致性")]),t._v("问题.")]),t._v(" "),s("h5",{attrs:{id:"_1-丢失修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-丢失修改"}},[t._v("#")]),t._v(" 1.丢失修改")]),t._v(" "),s("p",[t._v("丢失修改指一个事务的修改"),s("strong",[t._v("覆盖")]),t._v("了另一个事务的"),s("strong",[t._v("修改")]),t._v(".")]),t._v(" "),s("p",[t._v("T1 和 T2 两个事务"),s("strong",[t._v("都对一个数据进行修改")]),t._v(", "),s("strong",[t._v("T1 先修改")]),t._v(", "),s("strong",[t._v("T2 随后")]),t._v("修改, T2 的修改"),s("strong",[t._v("覆盖了")]),t._v(" T1 的修改, 这样第一个事务的修改就丢失了.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20210904221653569-0380215.png",alt:""}})]),t._v(" "),s("h5",{attrs:{id:"_2-脏读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-脏读"}},[t._v("#")]),t._v(" 2.脏读")]),t._v(" "),s("p",[t._v("事务 A 读取到了事务 B "),s("strong",[t._v("已经修改但尚未提交")]),t._v("的数据.")]),t._v(" "),s("p",[t._v("T1 "),s("strong",[t._v("修改")]),t._v("一个数据, T2 随后"),s("strong",[t._v("读取")]),t._v("这个数据. 如果 T1 之后"),s("strong",[t._v("撤销了这次修改")]),t._v(" (T1 事务读取了 T2 事务"),s("strong",[t._v("尚未提交")]),t._v("的数据), 那么 T2 读取的数据是"),s("strong",[t._v("脏数据")]),t._v(".")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20210904221906658.png",alt:""}})]),t._v(" "),s("p",[t._v("实例: 如下面的"),s("strong",[t._v("取款转账")]),t._v("操作, 按照正确逻辑, 最后的账户余额应该为 "),s("strong",[t._v("4000")]),t._v(" 元, 但是"),s("strong",[t._v("脏读")]),t._v("之后只有 3000 元了.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("时间线")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("转账事务")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("取款事务")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("开始事务")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("开始事务")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("查询账户"),s("strong",[t._v("余额为 2000 元")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("取款 1000 元")]),t._v(", 余额被更改为 1000 元")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("查询账户余额为 "),s("strong",[t._v("1000")]),t._v(" 元(产生"),s("strong",[t._v("脏读")]),t._v(")")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("6")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("取款操作发生未知错误, 事务"),s("strong",[t._v("回滚")]),t._v(", 余额变更为"),s("strong",[t._v("2000")]),t._v(" 元")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("7")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("存入 2000 元, 余额被更改为 "),s("strong",[t._v("3000")]),t._v(" 元(脏读的1000 + 2000)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("提交事务(脏数据)")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),s("h5",{attrs:{id:"_3-不可重复读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-不可重复读"}},[t._v("#")]),t._v(" 3.不可重复读")]),t._v(" "),s("p",[t._v("事务 A 内部的相同查询语句在不同时刻读出的结果不一致, 即"),s("strong",[t._v("前后多次")]),t._v("读取"),s("strong",[t._v("数据的内容不一致")]),t._v(".")]),t._v(" "),s("p",[t._v("T2 "),s("strong",[t._v("读取")]),t._v("一个数据, T1 对该数据做了"),s("strong",[t._v("修改")]),t._v(". 如果 T2 "),s("strong",[t._v("再次读取这个数据")]),t._v(", 此时读取的结果和第一次读取的"),s("strong",[t._v("结果不同")]),t._v(".")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20210904234519168.png",alt:""}})]),t._v(" "),s("p",[t._v("实例: 假设事务 A 在执行"),s("strong",[t._v("读取")]),t._v("操作, 由整个事务 "),s("strong",[t._v("A 操作较多")]),t._v(", 且需要"),s("strong",[t._v("前后")]),t._v("读取同一条数据, 假设两次读取需要经历很长的时间. 如果这时候 B 事务对这个数据进行修改, 就造成了两次读到数据不一致. 按照正确逻辑, 事务 A 前后两次读取到的数据应该一致.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("时间线")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("事务A(操作多, 持续时间长)")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("事务B")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("开始事务")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("第一次查询, 小明的年龄为 "),s("strong",[t._v("20")]),t._v(" 岁")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("开始事务")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("其他耗时操作")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("更改小明的年龄为 30 岁")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("6")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("提交事务")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("7")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("第二次查询, 小明的年龄为 30 岁("),s("strong",[t._v("不可重复读")]),t._v(")")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),s("h5",{attrs:{id:"_4-幻读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-幻读"}},[t._v("#")]),t._v(" 4.幻读")]),t._v(" "),s("p",[t._v("事务 A 读取到了事务 B 提交的新增数据.")]),t._v(" "),s("p",[t._v("T1 读取"),s("strong",[t._v("某个范围")]),t._v("的数据, T2 在这个"),s("strong",[t._v("范围内插入新的数")]),t._v("据, T1 再次"),s("strong",[t._v("读取这个范围")]),t._v("(比如年龄小于 50 的范围)的数据, 此时读取的结果和第一次读取的"),s("strong",[t._v("结果不同")]),t._v(".")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://nano-note.oss-cn-beijing.aliyuncs.com/images/image-20210904235539335.png",alt:""}})]),t._v(" "),s("p",[t._v("实例: 事务 A 在执行读取操作, 且需要在前后间隔较长时间内进行两次统计数据的"),s("strong",[t._v("总量")]),t._v(", 前一次查询数据总量后, 此时事务 B 执行了"),s("strong",[t._v("新增")]),t._v("(或删除)数据的操作并提交后, 这个时候事务 A 读取的数据"),s("strong",[t._v("总量")]),t._v("和之前"),s("strong",[t._v("统计的不一样")]),t._v(", 就像产生了幻觉一样, 平白无故的"),s("strong",[t._v("多了几条数据")]),t._v(", 发生幻读.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("时间线")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("事务A")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("事务B")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("开始事务")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("第一次查询, 数据"),s("strong",[t._v("总量为 100 条")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("开始事务")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("其他操作")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("新增(删除) "),s("strong",[t._v("50")]),t._v(" 条数据")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("6")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("提交事务")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("7")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("第二次查询, 数据"),s("strong",[t._v("总量")]),t._v("为 150 条("),s("strong",[t._v("幻读")]),t._v(")")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("不可重复读和幻读的区别")])])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("不可重复读的重点是修改同一条数据")]),t._v(", 比如多次读取一条记录发现其中的数据值被修改.")]),t._v(" "),s("li",[s("strong",[t._v("幻读的重点是新增或者删除范围内的数据")]),t._v(", 比如多次读取某个范围的记录发现"),s("strong",[t._v("范围内")]),t._v("的记录数量改变了.")])]),t._v(" "),s("p",[t._v("不可重复读的重点是修改比如"),s("strong",[t._v("多次读取一条")]),t._v("记录发现其中"),s("strong",[t._v("某些列的值被修改")]),t._v(", 幻读的重点在于新增或者删除"),s("strong",[t._v("范围记录")]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"_5-总结-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-总结-2"}},[t._v("#")]),t._v(" 5.总结")]),t._v(" "),s("p",[t._v("产生"),s("strong",[t._v("并发一致性")]),t._v("问题主要原因是"),s("strong",[t._v("破坏了事务的隔离性")]),t._v(", 解决方法是通过"),s("strong",[t._v("并发控制")]),t._v("来保证"),s("strong",[t._v("隔离性")]),t._v(".")]),t._v(" "),s("p",[t._v("下面先介绍"),s("strong",[t._v("锁机制")]),t._v("的相关内容("),s("strong",[t._v("封锁粒度, 类型, 协议")]),t._v("等), 再引入事务"),s("strong",[t._v("隔离级别")]),t._v(".")]),t._v(" "),s("h4",{attrs:{id:"事务隔离级别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务隔离级别"}},[t._v("#")]),t._v(" 事务隔离级别")]),t._v(" "),s("h5",{attrs:{id:"_1-概述-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述-2"}},[t._v("#")]),t._v(" 1.概述")]),t._v(" "),s("p",[t._v("隔离性其实比想象的要复杂. 在 SQL 标准中定义了四种隔离级别, 每一种级别都规定了一个事务中所做的修改, 哪些在事务内和事务间是可见的, 哪些是不可见的. 较低级别的隔离通常可以执行更高的并发, 系统的开销也更低.")]),t._v(" "),s("p",[s("strong",[t._v("并发控制")]),t._v("可以通过"),s("strong",[t._v("封锁")]),t._v("来实现, 但是"),s("strong",[t._v("加锁机制")]),t._v("操作需要"),s("strong",[t._v("用户自己控制")]),t._v(", 相当复杂. 因此数据库"),s("strong",[t._v("提供了事务的隔离级别")]),t._v(", 让用户以一种更轻松的方式"),s("strong",[t._v("处理并发一致性问题")]),t._v(".")]),t._v(" "),s("p",[t._v("事务隔离级别就是为了解决上面"),s("strong",[t._v("并发一致性")]),t._v("的几种问题(丢失修改, 脏读, 不可重复读, 幻读等)而诞生的. 事务隔离"),s("strong",[t._v("级别越高")]),t._v(", 在并发下会产生的问题就"),s("strong",[t._v("越少")]),t._v(", 但同时付出的性能消耗也将越大, 因此很多时候必须在"),s("strong",[t._v("并发性和性能之间做一个权衡")]),t._v(". 所以设立了"),s("strong",[t._v("几种事物隔离级别")]),t._v(", 以便让"),s("strong",[t._v("不同的项目可以根据自己项目的并发情况")]),t._v("选择合适的事务隔离级别, 对于在事务隔离级别之外会产生的并发问题, 在代码中做补偿.")]),t._v(" "),s("p",[t._v("设置隔离级别:")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SESSION")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GLOBAL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRANSACTION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ISOLATION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEVEL")]),t._v(" 隔离级别名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("查看隔离级别:")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@tx_isolation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("每个"),s("strong",[t._v("会话都有自己的事务隔离级别")]),t._v(", 不同的"),s("strong",[t._v("连接")]),t._v("可以设置不同的隔离级别.")]),t._v(" "),s("h5",{attrs:{id:"_2-分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-分类"}},[t._v("#")]),t._v(" 2.分类")]),t._v(" "),s("h6",{attrs:{id:"_1-读未提交-read-uncommitted"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-读未提交-read-uncommitted"}},[t._v("#")]),t._v(" (1)读未提交(READ UNCOMMITTED)")]),t._v(" "),s("p",[t._v("事务中的"),s("strong",[t._v("修改")]),t._v(", 即使"),s("strong",[t._v("没有提交")]),t._v(", 对其它事务也是"),s("strong",[t._v("可见")]),t._v("的. 问题多多.")]),t._v(" "),s("h6",{attrs:{id:"_2-读已提交-read-committed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-读已提交-read-committed"}},[t._v("#")]),t._v(" (2)读已提交(READ COMMITTED)")]),t._v(" "),s("p",[t._v("一个事务只能"),s("strong",[t._v("读取已经提交的")]),t._v("事务所做的修改. 换句话说, 一个事务所做的"),s("strong",[t._v("修改")]),t._v("在提交之前对"),s("strong",[t._v("其它事务是不可见")]),t._v("的. 解决了"),s("strong",[t._v("脏读")]),t._v("的问题.")]),t._v(" "),s("h6",{attrs:{id:"_3-可重复读-repeatable-read"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-可重复读-repeatable-read"}},[t._v("#")]),t._v(" (3)可重复读(REPEATABLE READ)")]),t._v(" "),s("p",[t._v("保证在同一个事务中"),s("strong",[t._v("多次读取同样数据的")]),t._v("结果是一样的, 是"),s("strong",[t._v("默认的隔离级别")]),t._v(". 可重复读解决了脏读与不可重复读问题, 但是"),s("strong",[t._v("理论")]),t._v("上依然不能解决幻读问题.")]),t._v(" "),s("p",[t._v("但是与 SQL 标准不同的是 InnoDB 存储引擎在可重复读事务隔离级别下使用的是 "),s("strong",[t._v("MVCC")]),t._v(" 实现, 并配合 "),s("strong",[t._v("Next-Key Lock 锁算法")]),t._v(", 因此可以"),s("strong",[t._v("避免幻读")]),t._v("的产生, 这与其他数据库系统如 SQL Server 是不同的. 所以说 InnoDB 存储引擎的默认支持的可重复读隔离级别已经"),s("strong",[t._v("可以完全保证事务的隔离性要求")]),t._v(", 即达到了 SQL 标准的串行化隔离级别.")]),t._v(" "),s("p",[t._v("可重复读隔离级别在事务开启的时候, 第一次查询是查的数据库里"),s("strong",[t._v("已提交")]),t._v("的最新数据, 这时候全数据库会有一个"),s("strong",[t._v("快照")]),t._v("(当然数据库并不是真正的生成了一个快照, 这个就是 MVCC 机制), 在这个事务之后执行的查询操作都是查快照里的数据, 别的事务不管怎么修改数据对当前这个事务的查询都没有影响, 但是当前事务如果修改了某条数据, 那当前事务之后查这条修改的数据就是被修改之后的值, 但是查其它数据依然是从快照里查, 不受影响.")]),t._v(" "),s("p",[t._v("因为隔离级别越低, 事务请求的锁越少, 所以许多数据库系统的隔离级别都是 "),s("strong",[t._v("READ-COMMITTED(读已提交)")]),t._v(" , 但是 InnoDB 默认使用可重复读并不会有任何性能损失.")]),t._v(" "),s("h6",{attrs:{id:"_4-可串行化-serializable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-可串行化-serializable"}},[t._v("#")]),t._v(" (4)可串行化(SERIALIZABLE)")]),t._v(" "),s("p",[t._v("强制事务"),s("strong",[t._v("串行执行")]),t._v(", 解决一切问题, 但是性能消耗严重. 需要"),s("strong",[t._v("加锁")]),t._v("实现. 这种隔离级别并发性极低, 开发中很少会用.")]),t._v(" "),s("h5",{attrs:{id:"_3-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-总结"}},[t._v("#")]),t._v(" 3.总结")]),t._v(" "),s("p",[t._v('数据库的事务隔离越严格, 并发副作用越小, 但付出的代价也就越大, 因为事务隔离实质上就是使事务在一定程度上 "串行化" 进行,这显然与 "并发" 是矛盾的.')]),t._v(" "),s("p",[t._v('同时, 不同的应用对读一致性和事务隔离程度的要求也是不同的, 比如许多应用对 "不可重复读" 和 "幻读" 并不敏感,可能更关心数据并发访问的能力, 这就需要根据实际的需求选择隔离级别.')]),t._v(" "),s("p",[t._v("各个隔离级别可以解决的并发一致性问题表, 可以根据项目的需求进行选择.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("隔离级别")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("脏读")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("不可重复读")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("幻读")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Read uncommitted(读未提交)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("😱")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("😱")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("😱")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Read committed("),s("strong",[t._v("读已提交")]),t._v(")")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("😄")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("😱")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("😱")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Repeatable read("),s("strong",[t._v("可重复读")]),t._v(")")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("😄")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("😄")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("😱")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Serializable("),s("strong",[t._v("串行化")]),t._v(")")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("😄")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("😄")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("😄")])])])]),t._v(" "),s("h4",{attrs:{id:"事务日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务日志"}},[t._v("#")]),t._v(" 事务日志")]),t._v(" "),s("p",[t._v("事务日志可以帮助提高事务的效率. 使用事务日志, 存储引擎在修改表的数据时只需要修改其内存拷贝, 再把该修改行为记录到持久在硬盘上的事务日志中, 而不用每次都将修改的数据本身持久到磁盘. 事务日志采用的是追加的方式, 因此写日志的操作是磁盘上一小块区域内的顺序 I/O, 而不像随机 I/O 需要在磁盘的多个地方移动磁头, 所以采用事务日志的方式相对来说要快得多. 事务日志持久以后, 内存中被修改的数据在后台可以慢慢地刷回到磁盘. 目前大多数存储引擎都是这样实现的, 这称之为预写式日志(Write-Ahead Logging), 修改数据需要写两次磁盘.")]),t._v(" "),s("p",[t._v("如果数据的修改已经记录到事务日志并持久化, 但数据本身还没有写回磁盘, 此时系统崩溃, 存储引擎在重启时能够自动恢复这部分修改的数据. 具体的恢复方式则视存储引擎而定.")]),t._v(" "),s("h4",{attrs:{id:"多版本并发控制mvcc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多版本并发控制mvcc"}},[t._v("#")]),t._v(" 多版本并发控制MVCC")]),t._v(" "),s("h5",{attrs:{id:"_1-概述-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述-3"}},[t._v("#")]),t._v(" 1.概述")]),t._v(" "),s("p",[t._v("前面分析了不同的"),s("strong",[t._v("隔离级别")]),t._v(", 这些隔离级别在 MySQL 中具体"),s("strong",[t._v("如何实现")]),t._v("?")]),t._v(" "),s("p",[s("strong",[t._v("多版本并发控制")]),t._v("(Multi-Version Concurrency Control, "),s("strong",[t._v("MVCC")]),t._v(") 是 MySQL 的 "),s("strong",[t._v("InnoDB")]),t._v(" 存储引擎"),s("strong",[t._v("实现隔离级别")]),t._v("的一种"),s("strong",[t._v("具体方式")]),t._v(", 用于实现"),s("strong",[t._v("提交读")]),t._v("和"),s("strong",[t._v("可重复读")]),t._v("这两种隔离级别. 而"),s("strong",[t._v("未提交读")]),t._v("隔离级别总是读取"),s("strong",[t._v("最新的数据行")]),t._v(", "),s("strong",[t._v("无需")]),t._v("使用 MVCC. "),s("strong",[t._v("可串行化")]),t._v("隔离级别需要对所有读取的行都"),s("strong",[t._v("加锁")]),t._v(", 单纯使用 MVCC "),s("strong",[t._v("无法实现")]),t._v(".")]),t._v(" "),s("p",[t._v("可以认为 MVCC 是"),s("strong",[t._v("行级锁")]),t._v("的一个变种, 但是它在很多情况下避免了加锁操作, 因此开销更低. 虽然实现机制有所不同, 但大都实现了非阻塞的读操作, 写操作也只锁定必要的行.")]),t._v(" "),s("p",[t._v("在 MVCC 下, 每个"),s("strong",[t._v("读")]),t._v("操作会看到一个"),s("strong",[t._v("一致性")]),t._v("的快照(SNAPSHOT), 并且可以实现"),s("strong",[t._v("非阻塞的读")]),t._v(". MVCC 允许数据具有"),s("strong",[t._v("多个版本")]),t._v(", 这个版本可以是时间戳或者是全局递增的事务 ID. MVCC 的实现是通过保存"),s("strong",[t._v("数据")]),t._v("在某个时间点的"),s("strong",[t._v("快照")]),t._v("来实现的. 这意味着一个"),s("strong",[t._v("事务")]),t._v("无论运行"),s("strong",[t._v("多长时间")]),t._v(", 在"),s("strong",[t._v("同一个事务")]),t._v("里能够看到"),s("strong",[t._v("数据一致的视图")]),t._v(". 不同"),s("strong",[t._v("事务开始的时间不同")]),t._v(", 意味着在"),s("strong",[t._v("同一个时刻不同事务")]),t._v("看到的相同表里的数据可能是"),s("strong",[t._v("不同")]),t._v("的.")]),t._v(" "),s("p",[s("strong",[t._v("==MVCC 中的快照点只是解决了并发读的问题, 对于增删改都会使用到数据库中最新的数据=="),s("strong",[t._v("​==. ​==​")]),t._v("==并发读的是快照==")]),t._v(".")]),t._v(" "),s("p",[t._v("MVCC 只在"),s("strong",[t._v("可重复读和读已提交")]),t._v('两个隔离级别下工作. 其他两个隔离级别都和 MVCC 不兼容, 因为"读未提交"总是读取最新的数据行, 而不是符合当前事务版本的数据行. 而"串行化"则会对所有读取的行都加锁.')]),t._v(" "),s("h5",{attrs:{id:"_2-版本号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-版本号"}},[t._v("#")]),t._v(" 2.版本号")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("系统版本号")]),t._v(": 是一个"),s("strong",[t._v("递增")]),t._v("的数字, 每开始一个"),s("strong",[t._v("新的事务")]),t._v(", 系统版本号就会"),s("strong",[t._v("自动递增")]),t._v(".")]),t._v(" "),s("li",[s("strong",[t._v("事务版本号")]),t._v(": 事务开始时对应的"),s("strong",[t._v("系统版本号")]),t._v(".")])]),t._v(" "),s("p",[t._v("BEGIN/START TRANSACTION 命令"),s("strong",[t._v("并不是一个事务")]),t._v("的起点, 在执行到它们之后的第一个操作 InnoDB 表的语句时事务才真正启动, 才会向 MySQL 申请事务 id, MySQL 内部是"),s("strong",[t._v("严格按照事务的启动顺序来分配事务 id 的")]),t._v(".")]),t._v(" "),s("p",[t._v("保存这两个额外系统版本号, 使大多数读操作都可以不用加锁. 这样设计使得读数据操作很简单, 性能很好, 并且也能保证只会读取到符合标准的行.")]),t._v(" "),s("h5",{attrs:{id:"_3-隐藏的列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-隐藏的列"}},[t._v("#")]),t._v(" 3.隐藏的列")]),t._v(" "),s("p",[t._v("MVCC 在"),s("strong",[t._v("每行")]),t._v("记录后面都保存着两个"),s("strong",[t._v("隐藏的列")]),t._v(", 用来存储"),s("strong",[t._v("两个版本号")]),t._v(":")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("创建版本号")]),t._v(": 指示"),s("strong",[t._v("创建")]),t._v("一个数据行的快照时的"),s("strong",[t._v("系统版本号")]),t._v(".")]),t._v(" "),s("li",[s("strong",[t._v("删除版本号")]),t._v(": 表示数据行的过期(删除)系统版本号.")])]),t._v(" "),s("p",[t._v("其实这两个版本号可以理解成一个"),s("strong",[t._v("事务")]),t._v("的版本号.")]),t._v(" "),s("h5",{attrs:{id:"_4-undo日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-undo日志"}},[t._v("#")]),t._v(" 4.Undo日志")]),t._v(" "),s("p",[t._v("MVCC 使用到的"),s("strong",[t._v("快照")]),t._v("存储在 "),s("strong",[t._v("Undo 日志")]),t._v("中, 该日志通过"),s("strong",[t._v("回滚指针")]),t._v("把一个"),s("strong",[t._v("数据行(Record) 的所有快照")]),t._v("连接起来, 这样数据就可以有"),s("strong",[t._v("多个版本")]),t._v(". 在每个事务修改完后, MySQL 会保留修改前的数据 undo 回滚日志, 并且用两个隐藏字段 trx_id 和 roll_pointer 把这些 undo 日志串联起来形成一个历史记录版本链.")]),t._v(" "),s("h5",{attrs:{id:"_5-可重复读的实现过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-可重复读的实现过程"}},[t._v("#")]),t._v(" 5.可重复读的实现过程")]),t._v(" "),s("p",[t._v("下面是在"),s("strong",[t._v("可重复读")]),t._v("的隔离级别下, MVCC 的工作流程.")]),t._v(" "),s("p",[t._v("当开始一个事务时, "),s("strong",[t._v("该事务的版本号肯定大于当前所有数据行快照的创建版本号")]),t._v(", 理解这一点很关键. 数据行快照的创建版本号是创建数据行快照时的系统版本号, 系统版本号随着创建事务而递增, 因此新创建一个事务时, "),s("strong",[t._v("当前这个事务的系统版本号肯定比所有数据行快照的创建版本号都大")]),t._v(".")]),t._v(" "),s("h6",{attrs:{id:"_1-select"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-select"}},[t._v("#")]),t._v(" (1)SELECT")]),t._v(" "),s("p",[s("strong",[t._v("多个事务")]),t._v("必须读取到"),s("strong",[t._v("同一个数据行")]),t._v("的快照, 并且这个快照是"),s("strong",[t._v("距离现在最近")]),t._v("的一个"),s("strong",[t._v("有效快照")]),t._v(". 但是也有例外, 如果有一个事务"),s("strong",[t._v("正在修改")]),t._v("该数据行, 那么它可以读取事务本身所做的修改, 而"),s("strong",[t._v("不用")]),t._v("和其它事务的读取结果一致.")]),t._v(" "),s("p",[t._v("把没有对一个数据行做修改的"),s("strong",[t._v("事务称为 T")]),t._v(", T 所要"),s("strong",[t._v("读取")]),t._v("的数据行快照的"),s("strong",[t._v("创建版本号")]),t._v("必须"),s("strong",[t._v("小于 T 的版本号")]),t._v(", 因为如果大于或者等于 T 的版本号, 那么表示该数据行快照是其它事务的"),s("strong",[t._v("最新修改")]),t._v(", 因此"),s("strong",[t._v("不能")]),t._v("去读取它. 除此之外, T 所要读取的数据行快照的"),s("strong",[t._v("删除版本号")]),t._v("必须"),s("strong",[t._v("大于 T 的版本号")]),t._v(", 因为如果小于等于 T 的版本号, 那么表示该数据行快照是"),s("strong",[t._v("已经被删除")]),t._v("的, 不应该去读取它.")]),t._v(" "),s("ul",[s("li",[t._v("InnoDB 只查找版本早于当前事务版本的数据行(也就是, 行的系统版本号小于或等于事务的系统版本号), 这样可以确保事务读取的行, 要么是在事务开始前已经存在的, 要么是事务自身插入或者修改过的.")]),t._v(" "),s("li",[t._v("行的删除版本要么未定义, 要么大于当前事务版本号. 这可以确保事务读取到的行, 在事务开始之前未被删除.")])]),t._v(" "),s("h6",{attrs:{id:"_2-insert"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-insert"}},[t._v("#")]),t._v(" (2)INSERT")]),t._v(" "),s("p",[t._v("将当前"),s("strong",[t._v("系统版本号")]),t._v("作为数据行快照的"),s("strong",[t._v("创建版本号")]),t._v(".")]),t._v(" "),s("h6",{attrs:{id:"_3-delete"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-delete"}},[t._v("#")]),t._v(" (3)DELETE")]),t._v(" "),s("p",[t._v("将当前"),s("strong",[t._v("系统版本号")]),t._v("作为数据行快照的"),s("strong",[t._v("删除版本号")]),t._v(".")]),t._v(" "),s("p",[t._v("对于"),s("strong",[t._v("删除")]),t._v("操作, MySQL 底层会记录好被删除的数据行的"),s("strong",[t._v("删除事务 id")]),t._v(", 对于"),s("strong",[t._v("更新")]),t._v("操作 MySQL 底层会"),s("strong",[t._v("新增一行相同数据(使用 undoLog 实现)"),s("strong",[t._v("​"),s("strong",[s("strong",[t._v("并记录好对应的")])]),t._v("​")]),t._v("创建事务 id")]),t._v(".")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("创建事务 id <= max (当前事务 id(12), 快照点已提交最大事务 id)")])]),t._v(" "),s("li",[s("strong",[t._v("删除事务 id > max (当前事务 id(12), 快照点已提交最大事务 id)")])])]),t._v(" "),s("h6",{attrs:{id:"_4-update"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-update"}},[t._v("#")]),t._v(" (4)UPDATE")]),t._v(" "),s("p",[t._v("将当前"),s("strong",[t._v("系统版本号")]),t._v("作为更新前的数据行快照的"),s("strong",[t._v("删除版本号")]),t._v(", 并将当前"),s("strong",[t._v("系统版本号")]),t._v("作为更新后的数据行快照的"),s("strong",[t._v("创建版本号")]),t._v(". 可以理解为"),s("strong",[t._v("先执行 DELETE 后执行 INSERT")]),t._v(".")]),t._v(" "),s("h5",{attrs:{id:"_6-快照读与当前读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-快照读与当前读"}},[t._v("#")]),t._v(" 6.快照读与当前读")]),t._v(" "),s("h6",{attrs:{id:"_1-快照读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-快照读"}},[t._v("#")]),t._v(" (1)快照读")]),t._v(" "),s("p",[t._v("使用 "),s("strong",[t._v("MVCC")]),t._v(" 读取的是"),s("strong",[t._v("快照中")]),t._v("的数据, 这样可以"),s("strong",[t._v("减少加锁")]),t._v("所带来的开销.")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h6",{attrs:{id:"_2-当前读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-当前读"}},[t._v("#")]),t._v(" (2)当前读")]),t._v(" "),s("p",[s("strong",[t._v("读取")]),t._v("的是"),s("strong",[t._v("最新")]),t._v("的数据, 需要"),s("strong",[t._v("加锁")]),t._v(". 以下第一个语句需要加 "),s("strong",[t._v("S 锁")]),t._v(", 其它都需要加 "),s("strong",[t._v("X 锁")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ? "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LOCK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHARE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MODE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ? "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h4",{attrs:{id:"事务优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务优化"}},[t._v("#")]),t._v(" 事务优化")]),t._v(" "),s("h5",{attrs:{id:"_1-大事务的影响"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-大事务的影响"}},[t._v("#")]),t._v(" 1.大事务的影响")]),t._v(" "),s("ul",[s("li",[t._v("并发情况下, 数据库连接池容易被撑爆")]),t._v(" "),s("li",[t._v("锁定太多的数据, 造成大量的阻塞和锁超时")]),t._v(" "),s("li",[t._v("执行时间长, 容易造成主从延迟")]),t._v(" "),s("li",[t._v("回滚所需要的时间比较长")]),t._v(" "),s("li",[t._v("undo log 膨胀")]),t._v(" "),s("li",[t._v("容易导致死锁")])]),t._v(" "),s("h5",{attrs:{id:"_2-事务优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-事务优化"}},[t._v("#")]),t._v(" 2.事务优化")]),t._v(" "),s("ul",[s("li",[t._v("将查询等数据准备操作放到事务外")]),t._v(" "),s("li",[t._v("事务中避免远程调用, 远程调用要设置超时, 防止事务等待时间太久")]),t._v(" "),s("li",[t._v("事务中避免一次性处理太多数据, 可以拆分成多个事务分次处理")]),t._v(" "),s("li",[t._v("更新等涉及加锁的操作尽可能放在事务靠后的位置")]),t._v(" "),s("li",[t._v("能异步处理的尽量异步处理")]),t._v(" "),s("li",[t._v("应用侧(业务代码)保证数据一致性, 非事务执行")])]),t._v(" "),s("p",[t._v("‍")]),t._v(" "),s("p",[t._v("‍")]),t._v(" "),s("h4",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/5.7/en/innodb-storage-engine.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("The InnoDB Storage Engine"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.slideshare.net/ErnestoHernandezRodriguez/transaction-isolation-levels",target:"_blank",rel:"noopener noreferrer"}},[t._v("Transaction isolation levels"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://scanftree.com/dbms/2-phase-locking-protocol",target:"_blank",rel:"noopener noreferrer"}},[t._v("Concurrency Control"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.slideshare.net/brshristov/the-nightmare-of-locking-blocking-and-isolation-levels-46391666",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Nightmare of Locking, Blocking and Isolation Levels!"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://aksakalli.github.io/2012/03/12/database-normalization-and-normal-forms-with-an-example.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Database Normalization and Normal Forms with an Example"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.jcole.us/2014/04/16/the-basics-of-the-innodb-undo-logging-and-history-system/",target:"_blank",rel:"noopener noreferrer"}},[t._v("The basics of the InnoDB undo logging and history system"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.brightbox.com/blog/2013/10/31/on-mysql-locks/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL locking for the busy web developer"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://draveness.me/mysql-innodb",target:"_blank",rel:"noopener noreferrer"}},[t._v("浅入浅出 MySQL 和 InnoDB"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);